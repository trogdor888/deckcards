{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrluf\\\\Desktop\\\\deck cards\\\\src\\\\components\\\\CardDetail.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CardDetail({\n  card,\n  onClose,\n  onNavigate,\n  relatedCards\n}) {\n  _s();\n  var _relatedCards$current;\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [dragStart, setDragStart] = useState({\n    x: 0,\n    y: 0\n  });\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragOffset, setDragOffset] = useState(0);\n  const [isFlipped, setIsFlipped] = useState(false);\n  const containerRef = useRef(null);\n\n  // Find current card index in related cards\n  useEffect(() => {\n    const index = relatedCards.findIndex(c => c.id === card.id);\n    setCurrentIndex(index >= 0 ? index : 0);\n  }, [card.id, relatedCards]);\n\n  // Handle card flip when center card changes\n  useEffect(() => {\n    // Flip the card when it comes into focus, then flip back after a moment\n    setIsFlipped(true);\n    const timer = setTimeout(() => setIsFlipped(false), 600);\n    return () => clearTimeout(timer);\n  }, [currentIndex]);\n  useEffect(() => {\n    const keyHandler = e => {\n      if (e.key === 'Escape') onClose();\n      if (e.key === 'ArrowLeft') onNavigate('left');\n      if (e.key === 'ArrowRight') onNavigate('right');\n    };\n    document.addEventListener('keydown', keyHandler);\n    return () => document.removeEventListener('keydown', keyHandler);\n  }, [onClose, onNavigate]);\n\n  // Handle click outside to close\n  const handleBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  // Swipe/drag navigation\n  const handleMouseDown = e => {\n    setIsDragging(true);\n    setDragStart({\n      x: e.clientX,\n      y: e.clientY\n    });\n    setDragOffset(0);\n  };\n  const handleMouseMove = e => {\n    if (!isDragging) return;\n    const deltaX = e.clientX - dragStart.x;\n    // Apply some resistance to make dragging feel more natural\n    const dampedDelta = deltaX * 0.8;\n    setDragOffset(dampedDelta);\n  };\n  const handleMouseUp = () => {\n    if (!isDragging) return;\n    const threshold = 80; // Threshold for snapping to next/previous card\n    const cardSpacing = 200; // Must match the cardSpacing in render\n\n    if (Math.abs(dragOffset) > threshold) {\n      // Natural camera movement: drag right = slide camera right (previous card)\n      // Natural camera movement: drag left = slide camera left (next card)\n      if (dragOffset > 0 && currentIndex > 0) {\n        onNavigate('left'); // Move to previous card\n      } else if (dragOffset < 0 && currentIndex < relatedCards.length - 1) {\n        onNavigate('right'); // Move to next card\n      }\n    }\n    setIsDragging(false);\n    setDragOffset(0);\n  };\n\n  // Touch events for mobile\n  const handleTouchStart = e => {\n    const touch = e.touches[0];\n    setIsDragging(true);\n    setDragStart({\n      x: touch.clientX,\n      y: touch.clientY\n    });\n    setDragOffset(0);\n  };\n  const handleTouchMove = e => {\n    if (!isDragging) return;\n    const touch = e.touches[0];\n    const deltaX = touch.clientX - dragStart.x;\n    setDragOffset(deltaX);\n  };\n  const handleTouchEnd = () => {\n    handleMouseUp();\n  };\n\n  // Get all 10 cards with their fixed positions in 3D space\n  const getAllCardsIn3DSpace = () => {\n    return relatedCards.map((card, index) => {\n      // Each card has a fixed position in 3D space\n      const positionInSpace = index;\n      // Camera angle determines viewing perspective\n      const relativeToCamera = index - currentIndex;\n      return {\n        ...card,\n        absoluteIndex: index,\n        positionInSpace,\n        relativeToCamera\n      };\n    });\n  };\n  const allCardsIn3D = getAllCardsIn3DSpace();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 z-50 bg-black backdrop-blur-sm flex items-center justify-center\",\n    onClick: handleBackdropClick,\n    onMouseUp: handleMouseUp,\n    onMouseLeave: handleMouseUp,\n    style: {\n      perspective: '1200px',\n      // 3D perspective for the entire scene\n      perspectiveOrigin: 'center center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => {\n        e.stopPropagation();\n        onClose();\n      },\n      className: \"absolute top-8 right-8 z-60 w-12 h-12 rounded-full bg-white/10 backdrop-blur-md border border-white/20 flex items-center justify-center hover:bg-white/20 transition-all duration-300\",\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"w-6 h-6 text-white\",\n        fill: \"none\",\n        stroke: \"currentColor\",\n        viewBox: \"0 0 24 24\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\",\n          strokeWidth: 2,\n          d: \"M6 18L18 6M6 6l12 12\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      className: \"relative w-full h-full flex items-center justify-center cursor-grab active:cursor-grabbing\",\n      onMouseDown: handleMouseDown,\n      onMouseMove: handleMouseMove,\n      onTouchStart: handleTouchStart,\n      onTouchMove: handleTouchMove,\n      onTouchEnd: handleTouchEnd,\n      style: {\n        transform: `\n            translateX(${dragOffset - currentIndex * 200}px)\n            rotateY(${currentIndex * -5 + dragOffset * -0.02}deg)\n            translateZ(0px)\n          `,\n        transition: isDragging ? 'none' : 'transform 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94)',\n        transformStyle: 'preserve-3d'\n      },\n      children: [allCardsIn3D.map(cardData => {\n        const {\n          positionInSpace\n        } = cardData;\n\n        // Fixed 3D world coordinates - each card has a permanent position in 3D space\n        const cardSpacing = 200; // Fixed spacing between cards in 3D world\n        const x = positionInSpace * cardSpacing; // Card's absolute X position in 3D world\n        const y = 0; // All cards at same Y level in 3D world\n\n        // Create 3D arc - cards form a curved line in 3D space\n        const relativeToCamera = positionInSpace - currentIndex;\n        const z = Math.abs(relativeToCamera) * -150; // Cards spread out in Z-depth for 3D arc effect\n\n        // 3D perspective effects - cards appear smaller/larger based on distance from camera\n        const distanceFromCamera = Math.abs(relativeToCamera);\n        const scale = Math.max(0.3, 1 - distanceFromCamera * 0.2); // Perspective scaling\n        const opacity = Math.max(0.15, 1 - distanceFromCamera * 0.25); // Fade with distance\n        const zIndex = Math.round(50 - distanceFromCamera * 10); // Z-ordering for proper layering\n\n        // 3D rotation - cards tilt based on their position relative to camera\n        const rotationY = relativeToCamera * 15; // Y-axis rotation for 3D depth\n        const rotationX = Math.abs(relativeToCamera) * 5; // Slight X tilt for perspective\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute transition-all duration-500 ease-out\",\n          style: {\n            transform: `\n                  translate3d(${x}px, ${y}px, ${z}px) \n                  scale(${scale}) \n                  rotateY(${rotationY}deg) \n                  rotateX(${rotationX}deg)\n                `,\n            opacity,\n            zIndex,\n            transformOrigin: 'center center',\n            transformStyle: 'preserve-3d'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative w-80 h-80 rounded-2xl overflow-hidden backdrop-blur-xl border border-white/20 shadow-xl shadow-black/40 transition-all duration-500\",\n            style: {\n              transform: cardData.absoluteIndex === currentIndex && isFlipped ? 'rotateY(180deg)' : 'rotateY(0deg)',\n              transformStyle: 'preserve-3d'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute inset-0\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: cardData.img,\n                alt: cardData.title,\n                className: \"w-full h-full object-cover\",\n                draggable: false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"absolute inset-0 bg-gradient-to-t from-black/80 via-black/20 to-transparent\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute inset-0 flex flex-col justify-end p-6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  className: \"font-bold text-white mb-2 text-2xl transition-all duration-500\",\n                  children: cardData.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-white/80 text-base transition-all duration-500\",\n                  children: cardData.subtitle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 16\n          }, this)\n        }, cardData.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 25\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute -bottom-28 left-1/2 -translate-x-1/2 text-center z-60 pointer-events-none\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white/10 backdrop-blur-md rounded-2xl px-6 py-4 border border-white/20\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-white/60 text-sm mb-1\",\n            children: \"Viewing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-white font-semibold text-base\",\n            children: ((_relatedCards$current = relatedCards[currentIndex]) === null || _relatedCards$current === void 0 ? void 0 : _relatedCards$current.title) || 'Card'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-8 left-8 bg-white/10 backdrop-blur-md rounded-xl px-6 py-3 border border-white/20 pointer-events-none\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-white/80 text-base\",\n        children: [currentIndex + 1, \" of \", relatedCards.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n}\n_s(CardDetail, \"crrUaNxidacxAAGY7HCeSE5gRWI=\");\n_c = CardDetail;\nvar _c;\n$RefreshReg$(_c, \"CardDetail\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","CardDetail","card","onClose","onNavigate","relatedCards","_s","_relatedCards$current","currentIndex","setCurrentIndex","dragStart","setDragStart","x","y","isDragging","setIsDragging","dragOffset","setDragOffset","isFlipped","setIsFlipped","containerRef","index","findIndex","c","id","timer","setTimeout","clearTimeout","keyHandler","e","key","document","addEventListener","removeEventListener","handleBackdropClick","target","currentTarget","handleMouseDown","clientX","clientY","handleMouseMove","deltaX","dampedDelta","handleMouseUp","threshold","cardSpacing","Math","abs","length","handleTouchStart","touch","touches","handleTouchMove","handleTouchEnd","getAllCardsIn3DSpace","map","positionInSpace","relativeToCamera","absoluteIndex","allCardsIn3D","className","onClick","onMouseUp","onMouseLeave","style","perspective","perspectiveOrigin","children","stopPropagation","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","fileName","_jsxFileName","lineNumber","columnNumber","ref","onMouseDown","onMouseMove","onTouchStart","onTouchMove","onTouchEnd","transform","transition","transformStyle","cardData","z","distanceFromCamera","scale","max","opacity","zIndex","round","rotationY","rotationX","transformOrigin","src","img","alt","title","draggable","subtitle","_c","$RefreshReg$"],"sources":["C:/Users/mrluf/Desktop/deck cards/src/components/CardDetail.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\n\r\ninterface CardData {\r\n  id: string;\r\n  img: string;\r\n  title: string;\r\n  subtitle: string;\r\n  category?: string;\r\n}\r\n\r\ninterface CardDetailProps {\r\n  card: CardData;\r\n  onClose: () => void;\r\n  onNavigate: (direction: 'left' | 'right') => void;\r\n  relatedCards: CardData[];\r\n}\r\n\r\nexport default function CardDetail({ card, onClose, onNavigate, relatedCards }: CardDetailProps) {\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [dragStart, setDragStart] = useState({ x: 0, y: 0 });\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [dragOffset, setDragOffset] = useState(0);\r\n  const [isFlipped, setIsFlipped] = useState(false);\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n\r\n  // Find current card index in related cards\r\n  useEffect(() => {\r\n    const index = relatedCards.findIndex(c => c.id === card.id);\r\n    setCurrentIndex(index >= 0 ? index : 0);\r\n  }, [card.id, relatedCards]);\r\n\r\n  // Handle card flip when center card changes\r\n  useEffect(() => {\r\n    // Flip the card when it comes into focus, then flip back after a moment\r\n    setIsFlipped(true);\r\n    const timer = setTimeout(() => setIsFlipped(false), 600);\r\n    return () => clearTimeout(timer);\r\n  }, [currentIndex]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const keyHandler = (e: KeyboardEvent) => {\r\n      if (e.key === 'Escape') onClose();\r\n      if (e.key === 'ArrowLeft') onNavigate('left');\r\n      if (e.key === 'ArrowRight') onNavigate('right');\r\n    };\r\n    \r\n    document.addEventListener('keydown', keyHandler);\r\n    return () => document.removeEventListener('keydown', keyHandler);\r\n  }, [onClose, onNavigate]);\r\n\r\n  // Handle click outside to close\r\n  const handleBackdropClick = (e: React.MouseEvent) => {\r\n    if (e.target === e.currentTarget) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  // Swipe/drag navigation\r\n  const handleMouseDown = (e: React.MouseEvent) => {\r\n    setIsDragging(true);\r\n    setDragStart({ x: e.clientX, y: e.clientY });\r\n    setDragOffset(0);\r\n  };\r\n\r\n  const handleMouseMove = (e: React.MouseEvent) => {\r\n    if (!isDragging) return;\r\n    const deltaX = e.clientX - dragStart.x;\r\n    // Apply some resistance to make dragging feel more natural\r\n    const dampedDelta = deltaX * 0.8;\r\n    setDragOffset(dampedDelta);\r\n  };\r\n\r\n  const handleMouseUp = () => {\r\n    if (!isDragging) return;\r\n    \r\n    const threshold = 80; // Threshold for snapping to next/previous card\r\n    const cardSpacing = 200; // Must match the cardSpacing in render\r\n    \r\n    if (Math.abs(dragOffset) > threshold) {\r\n      // Natural camera movement: drag right = slide camera right (previous card)\r\n      // Natural camera movement: drag left = slide camera left (next card)\r\n      if (dragOffset > 0 && currentIndex > 0) {\r\n        onNavigate('left'); // Move to previous card\r\n      } else if (dragOffset < 0 && currentIndex < relatedCards.length - 1) {\r\n        onNavigate('right'); // Move to next card\r\n      }\r\n    }\r\n    \r\n    setIsDragging(false);\r\n    setDragOffset(0);\r\n  };\r\n\r\n  // Touch events for mobile\r\n  const handleTouchStart = (e: React.TouchEvent) => {\r\n    const touch = e.touches[0];\r\n    setIsDragging(true);\r\n    setDragStart({ x: touch.clientX, y: touch.clientY });\r\n    setDragOffset(0);\r\n  };\r\n\r\n  const handleTouchMove = (e: React.TouchEvent) => {\r\n    if (!isDragging) return;\r\n    const touch = e.touches[0];\r\n    const deltaX = touch.clientX - dragStart.x;\r\n    setDragOffset(deltaX);\r\n  };\r\n\r\n  const handleTouchEnd = () => {\r\n    handleMouseUp();\r\n  };\r\n\r\n  // Get all 10 cards with their fixed positions in 3D space\r\n  const getAllCardsIn3DSpace = () => {\r\n    return relatedCards.map((card, index) => {\r\n      // Each card has a fixed position in 3D space\r\n      const positionInSpace = index;\r\n      // Camera angle determines viewing perspective\r\n      const relativeToCamera = index - currentIndex;\r\n      \r\n      return {\r\n        ...card,\r\n        absoluteIndex: index,\r\n        positionInSpace,\r\n        relativeToCamera\r\n      };\r\n    });\r\n  };\r\n\r\n  const allCardsIn3D = getAllCardsIn3DSpace();\r\n\r\n  return (\r\n    <div \r\n      className=\"fixed inset-0 z-50 bg-black backdrop-blur-sm flex items-center justify-center\"\r\n      onClick={handleBackdropClick}\r\n      onMouseUp={handleMouseUp}\r\n      onMouseLeave={handleMouseUp}\r\n      style={{\r\n        perspective: '1200px', // 3D perspective for the entire scene\r\n        perspectiveOrigin: 'center center'\r\n      }}\r\n    >\r\n      {/* Close button */}\r\n      <button\r\n        onClick={(e) => {\r\n          e.stopPropagation();\r\n          onClose();\r\n        }}\r\n        className=\"absolute top-8 right-8 z-60 w-12 h-12 rounded-full bg-white/10 backdrop-blur-md border border-white/20 flex items-center justify-center hover:bg-white/20 transition-all duration-300\"\r\n      >\r\n        <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n        </svg>\r\n      </button>\r\n\r\n            {/* 3D Canvas with all 10 cards */}\r\n      <div \r\n        ref={containerRef}\r\n        className=\"relative w-full h-full flex items-center justify-center cursor-grab active:cursor-grabbing\"\r\n        onMouseDown={handleMouseDown}\r\n        onMouseMove={handleMouseMove}\r\n        onTouchStart={handleTouchStart}\r\n        onTouchMove={handleTouchMove}\r\n        onTouchEnd={handleTouchEnd}\r\n        style={{\r\n          transform: `\r\n            translateX(${dragOffset - currentIndex * 200}px)\r\n            rotateY(${(currentIndex * -5) + (dragOffset * -0.02)}deg)\r\n            translateZ(0px)\r\n          `,\r\n          transition: isDragging ? 'none' : 'transform 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94)',\r\n          transformStyle: 'preserve-3d'\r\n        }}\r\n      >\r\n        {allCardsIn3D.map((cardData) => {\r\n          const { positionInSpace } = cardData;\r\n          \r\n          // Fixed 3D world coordinates - each card has a permanent position in 3D space\r\n          const cardSpacing = 200; // Fixed spacing between cards in 3D world\r\n          const x = positionInSpace * cardSpacing; // Card's absolute X position in 3D world\r\n          const y = 0; // All cards at same Y level in 3D world\r\n          \r\n          // Create 3D arc - cards form a curved line in 3D space\r\n          const relativeToCamera = positionInSpace - currentIndex;\r\n          const z = Math.abs(relativeToCamera) * -150; // Cards spread out in Z-depth for 3D arc effect\r\n          \r\n          // 3D perspective effects - cards appear smaller/larger based on distance from camera\r\n          const distanceFromCamera = Math.abs(relativeToCamera);\r\n          const scale = Math.max(0.3, 1 - distanceFromCamera * 0.2); // Perspective scaling\r\n          const opacity = Math.max(0.15, 1 - distanceFromCamera * 0.25); // Fade with distance\r\n          const zIndex = Math.round(50 - distanceFromCamera * 10); // Z-ordering for proper layering\r\n          \r\n          // 3D rotation - cards tilt based on their position relative to camera\r\n          const rotationY = relativeToCamera * 15; // Y-axis rotation for 3D depth\r\n          const rotationX = Math.abs(relativeToCamera) * 5; // Slight X tilt for perspective\r\n          \r\n          return (\r\n                        <div\r\n              key={cardData.id}\r\n              className=\"absolute transition-all duration-500 ease-out\"\r\n              style={{\r\n                transform: `\r\n                  translate3d(${x}px, ${y}px, ${z}px) \r\n                  scale(${scale}) \r\n                  rotateY(${rotationY}deg) \r\n                  rotateX(${rotationX}deg)\r\n                `,\r\n                opacity,\r\n                zIndex,\r\n                transformOrigin: 'center center',\r\n                transformStyle: 'preserve-3d'\r\n              }}\r\n            >\r\n                             {/* Card - all cards are equal objects */}\r\n               <div className=\"relative w-80 h-80 rounded-2xl overflow-hidden backdrop-blur-xl border border-white/20 shadow-xl shadow-black/40 transition-all duration-500\"\r\n                               style={{\r\n                  transform: cardData.absoluteIndex === currentIndex && isFlipped ? 'rotateY(180deg)' : 'rotateY(0deg)',\r\n                  transformStyle: 'preserve-3d'\r\n                }}>\r\n                {/* Background image */}\r\n                <div className=\"absolute inset-0\">\r\n                  <img\r\n                    src={cardData.img}\r\n                    alt={cardData.title}\r\n                    className=\"w-full h-full object-cover\"\r\n                    draggable={false}\r\n                  />\r\n                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/80 via-black/20 to-transparent\" />\r\n                </div>\r\n\r\n                {/* Content overlay - all cards have same content styling */}\r\n                <div className=\"absolute inset-0 flex flex-col justify-end p-6\">\r\n                  <div className=\"text-center\">\r\n                    <h2 className=\"font-bold text-white mb-2 text-2xl transition-all duration-500\">\r\n                      {cardData.title}\r\n                    </h2>\r\n                    <p className=\"text-white/80 text-base transition-all duration-500\">\r\n                      {cardData.subtitle}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n\r\n        {/* Current card info */}\r\n        <div className=\"absolute -bottom-28 left-1/2 -translate-x-1/2 text-center z-60 pointer-events-none\">\r\n          <div className=\"bg-white/10 backdrop-blur-md rounded-2xl px-6 py-4 border border-white/20\">\r\n            <p className=\"text-white/60 text-sm mb-1\">Viewing</p>\r\n            <p className=\"text-white font-semibold text-base\">\r\n              {relatedCards[currentIndex]?.title || 'Card'}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n      {/* Card counter */}\r\n      <div className=\"absolute top-8 left-8 bg-white/10 backdrop-blur-md rounded-xl px-6 py-3 border border-white/20 pointer-events-none\">\r\n        <p className=\"text-white/80 text-base\">\r\n          {currentIndex + 1} of {relatedCards.length}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}