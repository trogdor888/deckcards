{"ast":null,"code":"import _objectSpread from\"C:/Users/mrluf/Desktop/deck cards/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useRef,useCallback}from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function CardDetail(_ref){let{card,onClose,onNavigate,relatedCards}=_ref;// 3D Globe rotation system - now supports free camera rotation\nconst[cameraRotation,setCameraRotation]=useState({x:0,y:0});// Camera rotation in degrees - perfectly level\nconst[dragStart,setDragStart]=useState({x:0,y:0});const[isDragging,setIsDragging]=useState(false);const[dragOffset,setDragOffset]=useState({x:0,y:0});const[isManualControl,setIsManualControl]=useState(false);// Track if user is manually controlling camera\nconst[hasDraggedSignificantly,setHasDraggedSignificantly]=useState(false);// Track if user has actually dragged\nconst[totalDragDistance,setTotalDragDistance]=useState(0);// Track total drag distance\nconst[selectedCardDetail,setSelectedCardDetail]=useState(null);// Track clicked card for detail view\nconst[videoLoaded,setVideoLoaded]=useState(false);// Track if background video has loaded\n// Center card rotation animation state - REMOVED to prevent spinning issues\nconst containerRef=useRef(null);const globeRadius=500;// Radius of the globe - spacing for larger cards\n// All cards exist as fixed objects arranged around a 3D globe's equator\nconst allCardsIn3D=relatedCards.map((cardData,index)=>{const totalCards=relatedCards.length;// Calculate position around the equator (Y = 0 for equator)\nconst angle=index/totalCards*2*Math.PI;// Evenly space cards around circle\nconst x=Math.cos(angle)*globeRadius;// X position on circle\nconst y=0;// All cards on equator (Y = 0)\nconst z=Math.sin(angle)*globeRadius;// Z position on circle\n// Calculate rotation to face OUTWARD toward user (front-facing)\n// Use atan2 to calculate rotation to face away from center (toward user)\nconst rotationY=Math.atan2(x,z)*180/Math.PI;// Face outward toward user\nreturn _objectSpread(_objectSpread({},cardData),{},{absoluteIndex:index,positionInSpace:index,x3d:x,y3d:y,z3d:z,angle:angle,rotationY:rotationY// Store rotation for facing center\n});});// Function to rotate to focus on a specific card\nconst focusOnCard=useCallback(targetCard=>{// Only auto-focus if user is not manually controlling the camera\nif(isManualControl)return;// Calculate camera rotation to face the target card\nconst targetAngle=targetCard.angle*180/Math.PI;setCameraRotation(prev=>_objectSpread(_objectSpread({},prev),{},{y:-targetAngle// Rotate camera to face the card\n}));},[isManualControl]);// Initialize camera to focus on clicked card (only on first load)\nuseEffect(()=>{const targetCard=allCardsIn3D.find(c=>c.id===card.id);if(targetCard&&!isManualControl){focusOnCard(targetCard);}},[card.id,focusOnCard,allCardsIn3D,isManualControl]);// Auto-open card detail view when coming from collection view\nuseEffect(()=>{// Automatically open the detail view for the clicked card\nsetSelectedCardDetail(card);},[card]);// Force video to play when component mounts\nuseEffect(()=>{const video=document.querySelector('video[key=\"carddetail-bg-video\"]');if(video){video.load();video.play().catch(e=>console.log('Video autoplay failed:',e));}},[]);useEffect(()=>{const keyHandler=e=>{if(e.key==='Escape')onClose();if(e.key==='ArrowLeft'||e.key==='ArrowRight'){// Reset manual control when using arrow keys for navigation\nsetIsManualControl(false);// Find current focused card and move to next/previous\nconst currentIndex=allCardsIn3D.findIndex(c=>c.id===card.id);const totalCards=allCardsIn3D.length;let nextIndex;if(e.key==='ArrowRight'){nextIndex=(currentIndex+1)%totalCards;}else{nextIndex=(currentIndex-1+totalCards)%totalCards;}const nextCard=allCardsIn3D[nextIndex];focusOnCard(nextCard);}};document.addEventListener('keydown',keyHandler);return()=>document.removeEventListener('keydown',keyHandler);},[onClose,focusOnCard,allCardsIn3D,card.id]);// Handle click outside to close - RE-ENABLED for card detail view\nconst handleBackdropClick=e=>{if(selectedCardDetail){setSelectedCardDetail(null);// Close card detail view\n}// Globe view click-to-close remains disabled\n};// Handle detail card content click to prevent closing\nconst handleDetailContentClick=e=>{e.stopPropagation();};// Handle card click to show detailed backside view\nconst handleCardClick=(cardData,e)=>{e.stopPropagation();// Don't open detail if currently dragging OR if user has recently dragged significantly\nif(isDragging||hasDraggedSignificantly)return;setSelectedCardDetail(cardData);};// Auto-rotation for background cards when detail view is open\nconst[autoRotationAngle,setAutoRotationAngle]=useState(0);useEffect(()=>{if(!selectedCardDetail)return;const interval=setInterval(()=>{setAutoRotationAngle(prev=>prev+0.5);// Slower constant speed rotation (50% of original)\n},16);// 60fps for smooth rotation\nreturn()=>clearInterval(interval);},[selectedCardDetail]);// Reset auto-rotation when exiting detail view to prevent sharp transitions\nuseEffect(()=>{if(!selectedCardDetail){setAutoRotationAngle(0);// Reset to 0 when detail view closes\n}},[selectedCardDetail]);// Free camera rotation with mouse drag\nconst handleMouseDown=e=>{setIsDragging(true);setIsManualControl(true);// Enable manual control when user starts dragging\nsetDragStart({x:e.clientX,y:e.clientY});setDragOffset({x:0,y:0});// Reset drag tracking\nsetHasDraggedSignificantly(false);setTotalDragDistance(0);};const handleMouseMove=e=>{if(!isDragging)return;const deltaX=e.clientX-dragStart.x;const deltaY=e.clientY-dragStart.y;// Track Y movement for distance calculation\n// Calculate total drag distance to determine if this is a significant drag\nconst dragDistance=Math.sqrt(deltaX*deltaX+deltaY*deltaY);setTotalDragDistance(dragDistance);// Mark as significant drag if moved more than 10 pixels\nif(dragDistance>10){setHasDraggedSignificantly(true);}// Convert mouse movement to rotation with sensitivity - only horizontal rotation\nconst sensitivity=0.5;// const rotationDeltaX = deltaY * sensitivity; // Disabled vertical rotation\nconst rotationDeltaY=deltaX*sensitivity;// Mouse X controls camera Y rotation (left/right around equator)\nsetDragOffset({x:0,y:rotationDeltaY});// Only allow Y rotation\n};const handleMouseUp=()=>{if(!isDragging)return;// Apply the drag offset to the camera rotation - only horizontal\nsetCameraRotation(prev=>({x:prev.x,// Keep vertical rotation fixed\ny:prev.y+dragOffset.y// Allow free horizontal rotation around equator\n}));setIsDragging(false);setDragOffset({x:0,y:0});// Add a delay before clearing drag protection to prevent accidental clicks\n// Only clear if this was a significant drag\nif(hasDraggedSignificantly){setTimeout(()=>{setHasDraggedSignificantly(false);},400);// 400ms delay to prevent accidental clicks after drag\n}};// Touch events for mobile\nconst handleTouchStart=e=>{const touch=e.touches[0];setIsDragging(true);setIsManualControl(true);// Enable manual control when user starts dragging\nsetDragStart({x:touch.clientX,y:touch.clientY});setDragOffset({x:0,y:0});// Reset drag tracking\nsetHasDraggedSignificantly(false);setTotalDragDistance(0);};const handleTouchMove=e=>{if(!isDragging)return;const touch=e.touches[0];const deltaX=touch.clientX-dragStart.x;const deltaY=touch.clientY-dragStart.y;// Track Y movement for distance calculation\n// Calculate total drag distance to determine if this is a significant drag\nconst dragDistance=Math.sqrt(deltaX*deltaX+deltaY*deltaY);setTotalDragDistance(dragDistance);// Mark as significant drag if moved more than 10 pixels\nif(dragDistance>10){setHasDraggedSignificantly(true);}const sensitivity=0.5;// const rotationDeltaX = deltaY * sensitivity; // Disabled vertical rotation\nconst rotationDeltaY=deltaX*sensitivity;// Only horizontal rotation around equator\nsetDragOffset({x:0,y:rotationDeltaY});// Only allow Y rotation\n};const handleTouchEnd=()=>{handleMouseUp();};// Center card rotation animation effect - REMOVED to prevent spinning issues\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"fixed inset-0 z-50\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"absolute inset-0 z-0\",children:[/*#__PURE__*/_jsx(\"video\",{// Force re-render when component mounts\nclassName:\"absolute inset-0 w-full h-full object-cover pointer-events-none\",autoPlay:true,loop:true,muted:true,playsInline:true,preload:\"metadata\",onLoadStart:()=>{console.log('CardDetail video loading started');setVideoLoaded(false);},onLoadedData:()=>{console.log('CardDetail video loaded successfully');setVideoLoaded(true);},onCanPlayThrough:()=>{console.log('CardDetail video can play through');setVideoLoaded(true);},onError:e=>{console.error('CardDetail video error:',e);setVideoLoaded(false);},style:{backgroundColor:'#87CEEB',// Fallback color while loading\nzIndex:1},children:/*#__PURE__*/_jsx(\"source\",{src:\"/assets/Cloud1.mp4\",type:\"video/mp4\"})},\"carddetail-bg-video\"),/*#__PURE__*/_jsx(\"div\",{className:\"absolute inset-0 pointer-events-none bg-gradient-to-br from-sky-400 via-blue-500 to-blue-600\",style:{opacity:videoLoaded?0:1,transition:'opacity 0.5s ease-in-out',zIndex:0},children:/*#__PURE__*/_jsx(\"div\",{className:\"absolute inset-0 opacity-30\",children:/*#__PURE__*/_jsx(\"div\",{className:\"w-full h-full\",style:{backgroundImage:\"\\n                radial-gradient(ellipse 120px 80px at 15% 20%, rgba(255, 255, 255, 0.8) 40%, transparent 50%),\\n                radial-gradient(ellipse 100px 60px at 25% 60%, rgba(255, 255, 255, 0.6) 40%, transparent 50%),\\n                radial-gradient(ellipse 140px 90px at 35% 30%, rgba(255, 255, 255, 0.7) 40%, transparent 50%),\\n                radial-gradient(ellipse 90px 70px at 45% 80%, rgba(255, 255, 255, 0.5) 40%, transparent 50%)\\n              \",animation:'cloudDrift 60s linear infinite'}})})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"absolute inset-0 z-10 flex items-center justify-center\",onClick:handleBackdropClick,onMouseUp:handleMouseUp,onMouseLeave:handleMouseUp,style:{perspective:'1200px',// 3D perspective for the entire scene\nperspectiveOrigin:'center center'},children:[/*#__PURE__*/_jsx(\"button\",{onClick:e=>{e.stopPropagation();onClose();},className:\"absolute top-8 right-8 z-60 w-12 h-12 rounded-full bg-white/10 backdrop-blur-md border border-white/20 flex items-center justify-center hover:bg-white/20 transition-all duration-300\",children:/*#__PURE__*/_jsx(\"svg\",{className:\"w-6 h-6 text-white\",fill:\"none\",stroke:\"currentColor\",viewBox:\"0 0 24 24\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:2,d:\"M6 18L18 6M6 6l12 12\"})})}),/*#__PURE__*/_jsx(\"div\",{ref:containerRef,className:\"relative w-full h-full flex items-center justify-center cursor-grab active:cursor-grabbing\",onMouseDown:handleMouseDown,onMouseMove:handleMouseMove,onTouchStart:handleTouchStart,onTouchMove:handleTouchMove,onTouchEnd:handleTouchEnd,style:{transform:\"\\n            rotateX(\".concat(cameraRotation.x+dragOffset.x,\"deg)\\n            rotateY(\").concat(cameraRotation.y+dragOffset.y+(selectedCardDetail?autoRotationAngle:0),\"deg)\\n          \"),transition:isDragging?'none':'transform 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94)',transformStyle:'preserve-3d'},children:(()=>{// Calculate current camera rotation \nconst currentCameraY=cameraRotation.y+dragOffset.y+(selectedCardDetail?autoRotationAngle:0);// Apply camera rotation to all cards and find the one with highest z value\nlet centerCardId=null;let maxRotatedZ=-Infinity;allCardsIn3D.forEach(card=>{// Convert camera rotation to radians (negative because we're rotating the view, not the world)\nconst cameraRadians=-currentCameraY*Math.PI/180;// Apply rotation matrix to get card position relative to current camera view\nconst rotatedX=card.x3d*Math.cos(cameraRadians)-card.z3d*Math.sin(cameraRadians);const rotatedZ=card.x3d*Math.sin(cameraRadians)+card.z3d*Math.cos(cameraRadians);// Find the card with highest z value after rotation (closest to user in current view)\nif(rotatedZ>maxRotatedZ){maxRotatedZ=rotatedZ;centerCardId=card.id;}});return allCardsIn3D.map(cardData=>{// Hide the selected card when detail view is open\nif(selectedCardDetail&&cardData.id===selectedCardDetail.id){return null;}// Use pre-calculated globe positions\nconst x=cardData.x3d;const y=cardData.y3d;const z=cardData.z3d;// Check if this is the default/clicked card (should be facing viewer)\nconst isDefaultCard=cardData.id===card.id;// Calculate how close this card is to the center of the user's screen\n// The user is looking straight ahead at the center of the screen\nconst currentCameraY=cameraRotation.y+dragOffset.y+(selectedCardDetail?autoRotationAngle:0);const cardAngleInDegrees=cardData.angle*180/Math.PI;// Normalize currentCameraY to 0-360 range for accurate card positioning calculations\n// This ensures infinite rotation works properly without breaking visibility calculations\nlet normalizedCameraY=currentCameraY%360;if(normalizedCameraY<0)normalizedCameraY+=360;// Adjust center reference point clockwise by adding offset\nconst centerOffset=60;// Adjust clockwise by 60 degrees\nconst adjustedCameraY=normalizedCameraY+centerOffset;// Calculate the angular distance from the center of the user's view\n// Cards at the center of screen should have angle difference of 0\nlet angleDifferenceFromCenter=cardAngleInDegrees-adjustedCameraY;// Normalize to -180 to +180 range\nwhile(angleDifferenceFromCenter>180)angleDifferenceFromCenter-=360;while(angleDifferenceFromCenter<-180)angleDifferenceFromCenter+=360;// Calculate distance factor: 0 = center of screen (max scale), 180 = opposite side (min scale)\nconst distanceFromCenter=Math.abs(angleDifferenceFromCenter);// Convert to a scale factor: closer to center = larger scale\nconst centerProximity=1-distanceFromCenter/180;// 1 = center, 0 = opposite side\n// Dynamic scaling based on proximity to screen center\nlet scale;if(centerProximity>0.9){// Very center cards\nscale=1.2+(centerProximity-0.9)*2;// Scale 1.2 to 1.4 for center cards\n}else if(centerProximity>0.7){// Near center cards\nscale=0.9+(centerProximity-0.7)*1.5;// Scale 0.9 to 1.2\n}else if(centerProximity>0.5){// Side cards\nscale=0.6+(centerProximity-0.5)*1.5;// Scale 0.6 to 0.9\n}else if(centerProximity>0.3){// Far side cards\nscale=0.4+(centerProximity-0.3)*1;// Scale 0.4 to 0.6\n}else{// Very far/back cards\nscale=0.2+centerProximity*0.67;// Scale 0.2 to 0.4\n}// Dynamic opacity based on proximity to screen center\nlet opacity;if(centerProximity>0.8){// Center cards\nopacity=1.0;// Fully visible\n}else if(centerProximity>0.5){// Side cards\nopacity=0.7+(centerProximity-0.5)*1;// Opacity 0.7 to 1.0\n}else if(centerProximity>0.2){// Far cards\nopacity=0.4+(centerProximity-0.2)*1;// Opacity 0.4 to 0.7\n}else{opacity=0.2+centerProximity*1;// Opacity 0.2 to 0.4\n}// Z-index based on proximity to center (center cards should be on top)\nlet zIndex=Math.round(100+centerProximity*50);// Dynamic center card detection: card with highest z value (closest to user)\nconst isCenterCard=cardData.id===centerCardId;// Only the specific card with maximum z value\n// Center card detection - no animation to avoid spinning issues\n// Add subtle pop effect for center card\nlet finalScale=scale;if(isCenterCard){finalScale=scale*1.25;// 25% size increase for center card pop effect\n}// Cards face toward the center of the globe, EXCEPT center card which faces the screen\nlet rotationY,rotationX;if(isCenterCard){// Center card (highest z value) faces flat toward the screen (no tilt, no flip)\n// Counter-rotate to cancel out the container rotation\nrotationY=-currentCameraY;// Negative of container rotation to face screen flat\nrotationX=0;}else{// Normal cards face toward the center of the globe\nrotationY=cardData.rotationY;rotationX=0;}return/*#__PURE__*/_jsx(\"div\",{className:\"absolute\",style:{transform:\"\\n                  translate3d(\".concat(x,\"px, \").concat(y,\"px, \").concat(z,\"px) \\n                  rotateY(\").concat(rotationY,\"deg) \\n                  rotateX(\").concat(rotationX,\"deg)\\n                \"),opacity:selectedCardDetail?opacity*0.5:opacity,// More fade when detail view is open\nzIndex,transformOrigin:'center center',transformStyle:'preserve-3d'// CSS transitions removed - now using JavaScript animation for smoother center card rotation\n},onClick:e=>handleCardClick(cardData,e),children:/*#__PURE__*/_jsxs(\"div\",{className:\"relative w-48 h-48 rounded-2xl overflow-hidden backdrop-blur-xl cursor-pointer hover:scale-105 select-none \".concat(isCenterCard?'border-4 border-yellow-400/80 shadow-2xl shadow-yellow-400/40'// Center card gets special golden border and glow\n:isDefaultCard?'border-2 border-white/40 shadow-2xl shadow-white/20'// Default card gets special border and glow\n:'border border-white/20 shadow-xl shadow-black/40'// Other cards get standard styling\n),style:{transform:\"scale(\".concat(finalScale,\")\"),transformOrigin:'center center',transformStyle:'preserve-3d',userSelect:'none'// CSS transitions removed - using JavaScript animation for rotation\n},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"absolute inset-0\",children:[/*#__PURE__*/_jsx(\"img\",{src:cardData.img,alt:cardData.title,className:\"w-full h-full object-cover select-none\",draggable:false,style:{userSelect:'none'}}),/*#__PURE__*/_jsx(\"div\",{className:\"absolute inset-0 bg-gradient-to-t from-black/80 via-black/20 to-transparent\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"absolute inset-0 flex flex-col justify-end p-3\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"font-bold text-white mb-1 transition-all duration-500 \".concat(isDefaultCard?'text-lg drop-shadow-lg':'text-base'),children:cardData.title}),/*#__PURE__*/_jsx(\"p\",{className:\"text-white/80 transition-all duration-500 \".concat(isDefaultCard?'text-sm drop-shadow-md':'text-xs'),children:cardData.subtitle})]})})]})},cardData.id);});})()}),/*#__PURE__*/_jsx(\"div\",{className:\"absolute top-8 left-8 bg-white/10 backdrop-blur-md rounded-xl px-6 py-3 border border-white/20 pointer-events-none\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"text-white/80 text-base\",children:[relatedCards.length,\" Cards on Globe\"]})}),selectedCardDetail&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 z-[70] flex items-center justify-center\",onClick:handleBackdropClick,style:{perspective:'1200px'},children:/*#__PURE__*/_jsx(\"div\",{className:\"relative w-[600px] h-[400px] rounded-3xl overflow-hidden shadow-2xl border-2 border-white/30\",style:{transform:'rotateY(180deg)',// Flipped to show backside\ntransformStyle:'preserve-3d'},onClick:handleDetailContentClick,children:/*#__PURE__*/_jsxs(\"div\",{className:\"absolute inset-0 text-white\",style:{transform:'rotateY(180deg)',// Flip content back to readable orientation\ntransformStyle:'preserve-3d'},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"absolute inset-0\",children:[/*#__PURE__*/_jsx(\"img\",{src:selectedCardDetail.img,alt:selectedCardDetail.title,className:\"w-full h-full object-cover\",draggable:false}),/*#__PURE__*/_jsx(\"div\",{className:\"absolute inset-0 bg-gradient-to-t from-black/90 via-black/50 to-black/30\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"absolute inset-0 opacity-10\",children:/*#__PURE__*/_jsx(\"div\",{className:\"w-full h-full bg-grid-pattern\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"relative z-10 p-8 h-full flex flex-col\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-center mb-6\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-4xl font-bold mb-2 text-white drop-shadow-lg\",children:selectedCardDetail.title}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xl text-white/80 font-light\",children:selectedCardDetail.subtitle})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 flex items-center justify-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 gap-8 w-full\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold mb-3 text-blue-300\",children:\"Key Topics\"}),/*#__PURE__*/_jsxs(\"ul\",{className:\"space-y-2 text-white/90\",children:[/*#__PURE__*/_jsx(\"li\",{children:\"\\u2022 Fundamentals & Core Concepts\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u2022 Advanced Techniques\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u2022 Practical Applications\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u2022 Industry Standards\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u2022 Latest Developments\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold mb-3 text-green-300\",children:\"Learning Path\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-2 text-white/90\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-3 h-3 bg-green-400 rounded-full mr-3\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Beginner Level\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-3 h-3 bg-yellow-400 rounded-full mr-3\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Intermediate Level\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-3 h-3 bg-red-400 rounded-full mr-3\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Advanced Level\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-3 h-3 bg-purple-400 rounded-full mr-3\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Expert Level\"})]})]})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"text-center pt-6 border-t border-white/20\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-white/60 text-sm\",children:\"Click anywhere outside to return to globe view\"})})]})]})})})]})]});}","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","jsx","_jsx","jsxs","_jsxs","CardDetail","_ref","card","onClose","onNavigate","relatedCards","cameraRotation","setCameraRotation","x","y","dragStart","setDragStart","isDragging","setIsDragging","dragOffset","setDragOffset","isManualControl","setIsManualControl","hasDraggedSignificantly","setHasDraggedSignificantly","totalDragDistance","setTotalDragDistance","selectedCardDetail","setSelectedCardDetail","videoLoaded","setVideoLoaded","containerRef","globeRadius","allCardsIn3D","map","cardData","index","totalCards","length","angle","Math","PI","cos","z","sin","rotationY","atan2","_objectSpread","absoluteIndex","positionInSpace","x3d","y3d","z3d","focusOnCard","targetCard","targetAngle","prev","find","c","id","video","document","querySelector","load","play","catch","e","console","log","keyHandler","key","currentIndex","findIndex","nextIndex","nextCard","addEventListener","removeEventListener","handleBackdropClick","handleDetailContentClick","stopPropagation","handleCardClick","autoRotationAngle","setAutoRotationAngle","interval","setInterval","clearInterval","handleMouseDown","clientX","clientY","handleMouseMove","deltaX","deltaY","dragDistance","sqrt","sensitivity","rotationDeltaY","handleMouseUp","setTimeout","handleTouchStart","touch","touches","handleTouchMove","handleTouchEnd","className","children","autoPlay","loop","muted","playsInline","preload","onLoadStart","onLoadedData","onCanPlayThrough","onError","error","style","backgroundColor","zIndex","src","type","opacity","transition","backgroundImage","animation","onClick","onMouseUp","onMouseLeave","perspective","perspectiveOrigin","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","ref","onMouseDown","onMouseMove","onTouchStart","onTouchMove","onTouchEnd","transform","concat","transformStyle","currentCameraY","centerCardId","maxRotatedZ","Infinity","forEach","cameraRadians","rotatedX","rotatedZ","isDefaultCard","cardAngleInDegrees","normalizedCameraY","centerOffset","adjustedCameraY","angleDifferenceFromCenter","distanceFromCenter","abs","centerProximity","scale","round","isCenterCard","finalScale","rotationX","transformOrigin","userSelect","img","alt","title","draggable","subtitle"],"sources":["C:/Users/mrluf/Desktop/deck cards/src/components/CardDetail.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from \"react\";\n\ninterface CardData {\n  id: string;\n  img: string;\n  title: string;\n  subtitle: string;\n  category?: string;\n}\n\ninterface CardDetailProps {\n  card: CardData;\n  onClose: () => void;\n  onNavigate: (direction: 'left' | 'right') => void;\n  relatedCards: CardData[];\n}\n\nexport default function CardDetail({ card, onClose, onNavigate, relatedCards }: CardDetailProps) {\n  // 3D Globe rotation system - now supports free camera rotation\n  const [cameraRotation, setCameraRotation] = useState({ x: 0, y: 0 }); // Camera rotation in degrees - perfectly level\n  const [dragStart, setDragStart] = useState({ x: 0, y: 0 });\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });\n  const [isManualControl, setIsManualControl] = useState(false); // Track if user is manually controlling camera\n  const [hasDraggedSignificantly, setHasDraggedSignificantly] = useState(false); // Track if user has actually dragged\n  const [totalDragDistance, setTotalDragDistance] = useState(0); // Track total drag distance\n  const [selectedCardDetail, setSelectedCardDetail] = useState<any>(null); // Track clicked card for detail view\n  const [videoLoaded, setVideoLoaded] = useState(false); // Track if background video has loaded\n  \n  // Center card rotation animation state - REMOVED to prevent spinning issues\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const globeRadius = 500; // Radius of the globe - spacing for larger cards\n\n  // All cards exist as fixed objects arranged around a 3D globe's equator\n  const allCardsIn3D = relatedCards.map((cardData, index) => {\n    const totalCards = relatedCards.length;\n    \n    // Calculate position around the equator (Y = 0 for equator)\n    const angle = (index / totalCards) * 2 * Math.PI; // Evenly space cards around circle\n    const x = Math.cos(angle) * globeRadius; // X position on circle\n    const y = 0; // All cards on equator (Y = 0)\n    const z = Math.sin(angle) * globeRadius; // Z position on circle\n    \n    // Calculate rotation to face OUTWARD toward user (front-facing)\n    // Use atan2 to calculate rotation to face away from center (toward user)\n    const rotationY = Math.atan2(x, z) * 180 / Math.PI; // Face outward toward user\n    \n    return {\n      ...cardData,\n      absoluteIndex: index,\n      positionInSpace: index,\n      x3d: x,\n      y3d: y,\n      z3d: z,\n      angle: angle,\n      rotationY: rotationY // Store rotation for facing center\n    };\n  });\n\n  // Function to rotate to focus on a specific card\n  const focusOnCard = useCallback((targetCard: any) => {\n    // Only auto-focus if user is not manually controlling the camera\n    if (isManualControl) return;\n    \n    // Calculate camera rotation to face the target card\n    const targetAngle = targetCard.angle * 180 / Math.PI;\n    setCameraRotation(prev => ({\n      ...prev,\n      y: -targetAngle // Rotate camera to face the card\n    }));\n  }, [isManualControl]);\n\n  // Initialize camera to focus on clicked card (only on first load)\n  useEffect(() => {\n    const targetCard = allCardsIn3D.find(c => c.id === card.id);\n    if (targetCard && !isManualControl) {\n      focusOnCard(targetCard);\n    }\n  }, [card.id, focusOnCard, allCardsIn3D, isManualControl]);\n\n  // Auto-open card detail view when coming from collection view\n  useEffect(() => {\n    // Automatically open the detail view for the clicked card\n    setSelectedCardDetail(card);\n  }, [card]);\n\n  // Force video to play when component mounts\n  useEffect(() => {\n    const video = document.querySelector('video[key=\"carddetail-bg-video\"]') as HTMLVideoElement;\n    if (video) {\n      video.load();\n      video.play().catch(e => console.log('Video autoplay failed:', e));\n    }\n  }, []);\n\n  useEffect(() => {\n    const keyHandler = (e: KeyboardEvent) => {\n      if (e.key === 'Escape') onClose();\n      if (e.key === 'ArrowLeft' || e.key === 'ArrowRight') {\n        // Reset manual control when using arrow keys for navigation\n        setIsManualControl(false);\n        \n        // Find current focused card and move to next/previous\n        const currentIndex = allCardsIn3D.findIndex(c => c.id === card.id);\n        const totalCards = allCardsIn3D.length;\n        \n        let nextIndex;\n        if (e.key === 'ArrowRight') {\n          nextIndex = (currentIndex + 1) % totalCards;\n        } else {\n          nextIndex = (currentIndex - 1 + totalCards) % totalCards;\n        }\n        \n        const nextCard = allCardsIn3D[nextIndex];\n        focusOnCard(nextCard);\n      }\n    };\n    \n    document.addEventListener('keydown', keyHandler);\n    return () => document.removeEventListener('keydown', keyHandler);\n  }, [onClose, focusOnCard, allCardsIn3D, card.id]);\n\n  // Handle click outside to close - RE-ENABLED for card detail view\n  const handleBackdropClick = (e: React.MouseEvent) => {\n    if (selectedCardDetail) {\n      setSelectedCardDetail(null); // Close card detail view\n    }\n    // Globe view click-to-close remains disabled\n  };\n\n  // Handle detail card content click to prevent closing\n  const handleDetailContentClick = (e: React.MouseEvent) => {\n    e.stopPropagation();\n  };\n\n  // Handle card click to show detailed backside view\n  const handleCardClick = (cardData: any, e: React.MouseEvent) => {\n    e.stopPropagation();\n    // Don't open detail if currently dragging OR if user has recently dragged significantly\n    if (isDragging || hasDraggedSignificantly) return;\n    setSelectedCardDetail(cardData);\n  };\n\n  // Auto-rotation for background cards when detail view is open\n  const [autoRotationAngle, setAutoRotationAngle] = useState(0);\n  \n  useEffect(() => {\n    if (!selectedCardDetail) return;\n    \n    const interval = setInterval(() => {\n      setAutoRotationAngle(prev => prev + 0.5); // Slower constant speed rotation (50% of original)\n    }, 16); // 60fps for smooth rotation\n    \n    return () => clearInterval(interval);\n  }, [selectedCardDetail]);\n\n  // Reset auto-rotation when exiting detail view to prevent sharp transitions\n  useEffect(() => {\n    if (!selectedCardDetail) {\n      setAutoRotationAngle(0); // Reset to 0 when detail view closes\n    }\n  }, [selectedCardDetail]);\n\n  // Free camera rotation with mouse drag\n  const handleMouseDown = (e: React.MouseEvent) => {\n    setIsDragging(true);\n    setIsManualControl(true); // Enable manual control when user starts dragging\n    setDragStart({ x: e.clientX, y: e.clientY });\n    setDragOffset({ x: 0, y: 0 });\n    // Reset drag tracking\n    setHasDraggedSignificantly(false);\n    setTotalDragDistance(0);\n  };\n\n  const handleMouseMove = (e: React.MouseEvent) => {\n    if (!isDragging) return;\n    \n    const deltaX = e.clientX - dragStart.x;\n    const deltaY = e.clientY - dragStart.y; // Track Y movement for distance calculation\n    \n    // Calculate total drag distance to determine if this is a significant drag\n    const dragDistance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    setTotalDragDistance(dragDistance);\n    \n    // Mark as significant drag if moved more than 10 pixels\n    if (dragDistance > 10) {\n      setHasDraggedSignificantly(true);\n    }\n    \n    // Convert mouse movement to rotation with sensitivity - only horizontal rotation\n    const sensitivity = 0.5;\n    // const rotationDeltaX = deltaY * sensitivity; // Disabled vertical rotation\n    const rotationDeltaY = deltaX * sensitivity; // Mouse X controls camera Y rotation (left/right around equator)\n    \n    setDragOffset({ x: 0, y: rotationDeltaY }); // Only allow Y rotation\n  };\n\n  const handleMouseUp = () => {\n    if (!isDragging) return;\n    \n    // Apply the drag offset to the camera rotation - only horizontal\n    setCameraRotation(prev => ({\n      x: prev.x, // Keep vertical rotation fixed\n      y: prev.y + dragOffset.y // Allow free horizontal rotation around equator\n    }));\n    \n    setIsDragging(false);\n    setDragOffset({ x: 0, y: 0 });\n    \n    // Add a delay before clearing drag protection to prevent accidental clicks\n    // Only clear if this was a significant drag\n    if (hasDraggedSignificantly) {\n      setTimeout(() => {\n        setHasDraggedSignificantly(false);\n      }, 400); // 400ms delay to prevent accidental clicks after drag\n    }\n  };\n\n  // Touch events for mobile\n  const handleTouchStart = (e: React.TouchEvent) => {\n    const touch = e.touches[0];\n    setIsDragging(true);\n    setIsManualControl(true); // Enable manual control when user starts dragging\n    setDragStart({ x: touch.clientX, y: touch.clientY });\n    setDragOffset({ x: 0, y: 0 });\n    // Reset drag tracking\n    setHasDraggedSignificantly(false);\n    setTotalDragDistance(0);\n  };\n\n  const handleTouchMove = (e: React.TouchEvent) => {\n    if (!isDragging) return;\n    const touch = e.touches[0];\n    \n    const deltaX = touch.clientX - dragStart.x;\n    const deltaY = touch.clientY - dragStart.y; // Track Y movement for distance calculation\n    \n    // Calculate total drag distance to determine if this is a significant drag\n    const dragDistance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    setTotalDragDistance(dragDistance);\n    \n    // Mark as significant drag if moved more than 10 pixels\n    if (dragDistance > 10) {\n      setHasDraggedSignificantly(true);\n    }\n    \n    const sensitivity = 0.5;\n    // const rotationDeltaX = deltaY * sensitivity; // Disabled vertical rotation\n    const rotationDeltaY = deltaX * sensitivity; // Only horizontal rotation around equator\n    \n    setDragOffset({ x: 0, y: rotationDeltaY }); // Only allow Y rotation\n  };\n\n  const handleTouchEnd = () => {\n    handleMouseUp();\n  };\n\n  // Center card rotation animation effect - REMOVED to prevent spinning issues\n\n  return (\n    <div className=\"fixed inset-0 z-50\">\n      {/* 2D Background Layer - completely separate from 3D transforms */}\n      <div className=\"absolute inset-0 z-0\">\n        {/* Background Video - same as collection view */}\n        <video\n          key=\"carddetail-bg-video\" // Force re-render when component mounts\n          className=\"absolute inset-0 w-full h-full object-cover pointer-events-none\"\n          autoPlay\n          loop\n          muted\n          playsInline\n          preload=\"metadata\"\n          onLoadStart={() => {\n            console.log('CardDetail video loading started');\n            setVideoLoaded(false);\n          }}\n          onLoadedData={() => {\n            console.log('CardDetail video loaded successfully');\n            setVideoLoaded(true);\n          }}\n          onCanPlayThrough={() => {\n            console.log('CardDetail video can play through');\n            setVideoLoaded(true);\n          }}\n          onError={(e) => {\n            console.error('CardDetail video error:', e);\n            setVideoLoaded(false);\n          }}\n          style={{\n            backgroundColor: '#87CEEB', // Fallback color while loading\n            zIndex: 1\n          }}\n        >\n          <source src=\"/assets/Cloud1.mp4\" type=\"video/mp4\" />\n        </video>\n        \n        {/* Fallback Animated Cloud Background - always show initially, hide when video loads */}\n        <div \n          className=\"absolute inset-0 pointer-events-none bg-gradient-to-br from-sky-400 via-blue-500 to-blue-600\"\n          style={{\n            opacity: videoLoaded ? 0 : 1,\n            transition: 'opacity 0.5s ease-in-out',\n            zIndex: 0\n          }}\n        >\n          <div className=\"absolute inset-0 opacity-30\">\n            <div className=\"w-full h-full\" style={{\n              backgroundImage: `\n                radial-gradient(ellipse 120px 80px at 15% 20%, rgba(255, 255, 255, 0.8) 40%, transparent 50%),\n                radial-gradient(ellipse 100px 60px at 25% 60%, rgba(255, 255, 255, 0.6) 40%, transparent 50%),\n                radial-gradient(ellipse 140px 90px at 35% 30%, rgba(255, 255, 255, 0.7) 40%, transparent 50%),\n                radial-gradient(ellipse 90px 70px at 45% 80%, rgba(255, 255, 255, 0.5) 40%, transparent 50%)\n              `,\n              animation: 'cloudDrift 60s linear infinite'\n            }}></div>\n          </div>\n        </div>\n      </div>\n\n      {/* 3D Scene Container */}\n      <div \n        className=\"absolute inset-0 z-10 flex items-center justify-center\"\n        onClick={handleBackdropClick}\n        onMouseUp={handleMouseUp}\n        onMouseLeave={handleMouseUp}\n        style={{\n          perspective: '1200px', // 3D perspective for the entire scene\n          perspectiveOrigin: 'center center'\n        }}\n      >\n      {/* Close button */}\n      <button\n        onClick={(e) => {\n          e.stopPropagation();\n          onClose();\n        }}\n        className=\"absolute top-8 right-8 z-60 w-12 h-12 rounded-full bg-white/10 backdrop-blur-md border border-white/20 flex items-center justify-center hover:bg-white/20 transition-all duration-300\"\n      >\n        <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n        </svg>\n      </button>\n\n      {/* 3D Globe centered in screen with free camera rotation */}\n      <div \n        ref={containerRef}\n        className=\"relative w-full h-full flex items-center justify-center cursor-grab active:cursor-grabbing\"\n        onMouseDown={handleMouseDown}\n        onMouseMove={handleMouseMove}\n        onTouchStart={handleTouchStart}\n        onTouchMove={handleTouchMove}\n        onTouchEnd={handleTouchEnd}\n        style={{\n          transform: `\n            rotateX(${cameraRotation.x + dragOffset.x}deg)\n            rotateY(${cameraRotation.y + dragOffset.y + (selectedCardDetail ? autoRotationAngle : 0)}deg)\n          `,\n          transition: isDragging ? 'none' : 'transform 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94)',\n          transformStyle: 'preserve-3d'\n        }}\n      >\n        {/* Globe wireframe and equator - hidden from user view (internal reference only) */}\n\n        {(() => {\n          // Calculate current camera rotation \n          const currentCameraY = cameraRotation.y + dragOffset.y + (selectedCardDetail ? autoRotationAngle : 0);\n          \n          // Apply camera rotation to all cards and find the one with highest z value\n          let centerCardId: string | null = null;\n          let maxRotatedZ = -Infinity;\n          \n          allCardsIn3D.forEach(card => {\n            // Convert camera rotation to radians (negative because we're rotating the view, not the world)\n            const cameraRadians = (-currentCameraY * Math.PI) / 180;\n            \n            // Apply rotation matrix to get card position relative to current camera view\n            const rotatedX = card.x3d * Math.cos(cameraRadians) - card.z3d * Math.sin(cameraRadians);\n            const rotatedZ = card.x3d * Math.sin(cameraRadians) + card.z3d * Math.cos(cameraRadians);\n            \n            // Find the card with highest z value after rotation (closest to user in current view)\n            if (rotatedZ > maxRotatedZ) {\n              maxRotatedZ = rotatedZ;\n              centerCardId = card.id;\n            }\n          });\n          \n          return allCardsIn3D.map((cardData) => {\n          // Hide the selected card when detail view is open\n          if (selectedCardDetail && cardData.id === selectedCardDetail.id) {\n            return null;\n          }\n          \n          // Use pre-calculated globe positions\n          const x = cardData.x3d;\n          const y = cardData.y3d;\n          const z = cardData.z3d;\n          \n          // Check if this is the default/clicked card (should be facing viewer)\n          const isDefaultCard = cardData.id === card.id;\n          \n          // Calculate how close this card is to the center of the user's screen\n          // The user is looking straight ahead at the center of the screen\n          const currentCameraY = cameraRotation.y + dragOffset.y + (selectedCardDetail ? autoRotationAngle : 0);\n          const cardAngleInDegrees = cardData.angle * 180 / Math.PI;\n          \n          // Normalize currentCameraY to 0-360 range for accurate card positioning calculations\n          // This ensures infinite rotation works properly without breaking visibility calculations\n          let normalizedCameraY = currentCameraY % 360;\n          if (normalizedCameraY < 0) normalizedCameraY += 360;\n          \n          // Adjust center reference point clockwise by adding offset\n          const centerOffset = 60; // Adjust clockwise by 60 degrees\n          const adjustedCameraY = normalizedCameraY + centerOffset;\n          \n          // Calculate the angular distance from the center of the user's view\n          // Cards at the center of screen should have angle difference of 0\n          let angleDifferenceFromCenter = cardAngleInDegrees - adjustedCameraY;\n          \n          // Normalize to -180 to +180 range\n          while (angleDifferenceFromCenter > 180) angleDifferenceFromCenter -= 360;\n          while (angleDifferenceFromCenter < -180) angleDifferenceFromCenter += 360;\n          \n          // Calculate distance factor: 0 = center of screen (max scale), 180 = opposite side (min scale)\n          const distanceFromCenter = Math.abs(angleDifferenceFromCenter);\n          \n          // Convert to a scale factor: closer to center = larger scale\n          const centerProximity = 1 - (distanceFromCenter / 180); // 1 = center, 0 = opposite side\n          \n          // Dynamic scaling based on proximity to screen center\n          let scale;\n          if (centerProximity > 0.9) { // Very center cards\n            scale = 1.2 + (centerProximity - 0.9) * 2; // Scale 1.2 to 1.4 for center cards\n          } else if (centerProximity > 0.7) { // Near center cards\n            scale = 0.9 + (centerProximity - 0.7) * 1.5; // Scale 0.9 to 1.2\n          } else if (centerProximity > 0.5) { // Side cards\n            scale = 0.6 + (centerProximity - 0.5) * 1.5; // Scale 0.6 to 0.9\n          } else if (centerProximity > 0.3) { // Far side cards\n            scale = 0.4 + (centerProximity - 0.3) * 1; // Scale 0.4 to 0.6\n          } else {\n            // Very far/back cards\n            scale = 0.2 + centerProximity * 0.67; // Scale 0.2 to 0.4\n          }\n          \n          // Dynamic opacity based on proximity to screen center\n          let opacity;\n          if (centerProximity > 0.8) { // Center cards\n            opacity = 1.0; // Fully visible\n          } else if (centerProximity > 0.5) { // Side cards\n            opacity = 0.7 + (centerProximity - 0.5) * 1; // Opacity 0.7 to 1.0\n          } else if (centerProximity > 0.2) { // Far cards\n            opacity = 0.4 + (centerProximity - 0.2) * 1; // Opacity 0.4 to 0.7\n          } else {\n            opacity = 0.2 + centerProximity * 1; // Opacity 0.2 to 0.4\n          }\n          \n          // Z-index based on proximity to center (center cards should be on top)\n          let zIndex = Math.round(100 + centerProximity * 50);\n          \n          // Dynamic center card detection: card with highest z value (closest to user)\n          const isCenterCard = cardData.id === centerCardId; // Only the specific card with maximum z value\n          \n          // Center card detection - no animation to avoid spinning issues\n          \n          // Add subtle pop effect for center card\n          let finalScale = scale;\n          if (isCenterCard) {\n            finalScale = scale * 1.25; // 25% size increase for center card pop effect\n          }\n          \n          // Cards face toward the center of the globe, EXCEPT center card which faces the screen\n          let rotationY, rotationX;\n          if (isCenterCard) {\n            // Center card (highest z value) faces flat toward the screen (no tilt, no flip)\n            // Counter-rotate to cancel out the container rotation\n            rotationY = -currentCameraY; // Negative of container rotation to face screen flat\n            rotationX = 0;\n          } else {\n            // Normal cards face toward the center of the globe\n            rotationY = cardData.rotationY;\n            rotationX = 0;\n          }\n          \n          return (\n            <div\n              key={cardData.id}\n              className=\"absolute\"\n              style={{\n                transform: `\n                  translate3d(${x}px, ${y}px, ${z}px) \n                  rotateY(${rotationY}deg) \n                  rotateX(${rotationX}deg)\n                `,\n                opacity: selectedCardDetail ? opacity * 0.5 : opacity, // More fade when detail view is open\n                zIndex,\n                transformOrigin: 'center center',\n                transformStyle: 'preserve-3d',\n                // CSS transitions removed - now using JavaScript animation for smoother center card rotation\n              }}\n              onClick={(e) => handleCardClick(cardData, e)}\n            >\n              {/* Card with enhanced styling for default card and center card */}\n              <div \n                className={`relative w-48 h-48 rounded-2xl overflow-hidden backdrop-blur-xl cursor-pointer hover:scale-105 select-none ${\n                  isCenterCard \n                    ? 'border-4 border-yellow-400/80 shadow-2xl shadow-yellow-400/40' // Center card gets special golden border and glow\n                    : isDefaultCard \n                      ? 'border-2 border-white/40 shadow-2xl shadow-white/20' // Default card gets special border and glow\n                      : 'border border-white/20 shadow-xl shadow-black/40'     // Other cards get standard styling\n                }`}\n                style={{\n                  transform: `scale(${finalScale})`,\n                  transformOrigin: 'center center',\n                  transformStyle: 'preserve-3d',\n                  userSelect: 'none',\n                  // CSS transitions removed - using JavaScript animation for rotation\n                }}\n              >\n                {/* Background image */}\n                <div className=\"absolute inset-0\">\n                  <img\n                    src={cardData.img}\n                    alt={cardData.title}\n                    className=\"w-full h-full object-cover select-none\"\n                    draggable={false}\n                    style={{ userSelect: 'none' }}\n                  />\n                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/80 via-black/20 to-transparent\" />\n                </div>\n\n                {/* Content overlay with enhanced styling for default card */}\n                <div className=\"absolute inset-0 flex flex-col justify-end p-3\">\n                  <div className=\"text-center\">\n                    <h2 className={`font-bold text-white mb-1 transition-all duration-500 ${\n                      isDefaultCard ? 'text-lg drop-shadow-lg' : 'text-base'\n                    }`}>\n                      {cardData.title}\n                    </h2>\n                    <p className={`text-white/80 transition-all duration-500 ${\n                      isDefaultCard ? 'text-sm drop-shadow-md' : 'text-xs'\n                    }`}>\n                      {cardData.subtitle}\n                    </p>\n                  </div>\n                </div>\n\n\n              </div>\n            </div>\n          );\n          });\n        })()}\n\n        {/* Current card info - HIDDEN */}\n      </div>\n\n      {/* Card counter */}\n      <div className=\"absolute top-8 left-8 bg-white/10 backdrop-blur-md rounded-xl px-6 py-3 border border-white/20 pointer-events-none\">\n        <p className=\"text-white/80 text-base\">\n          {relatedCards.length} Cards on Globe\n        </p>\n      </div>\n\n      {/* Individual Card Detail View Overlay */}\n      {selectedCardDetail && (\n        <div \n          className=\"fixed inset-0 z-[70] flex items-center justify-center\"\n          onClick={handleBackdropClick}\n          style={{\n            perspective: '1200px'\n          }}\n        >\n          \n\n                                {/* Enlarged Card Detail - Flipped to show backside */}\n           <div \n             className=\"relative w-[600px] h-[400px] rounded-3xl overflow-hidden shadow-2xl border-2 border-white/30\"\n             style={{\n               transform: 'rotateY(180deg)', // Flipped to show backside\n               transformStyle: 'preserve-3d'\n             }}\n             onClick={handleDetailContentClick}\n           >\n             {/* Backside Content */}\n             <div \n               className=\"absolute inset-0 text-white\"\n               style={{\n                 transform: 'rotateY(180deg)', // Flip content back to readable orientation\n                 transformStyle: 'preserve-3d'\n               }}\n             >\n               {/* Card's actual image as background */}\n               <div className=\"absolute inset-0\">\n                 <img\n                   src={selectedCardDetail.img}\n                   alt={selectedCardDetail.title}\n                   className=\"w-full h-full object-cover\"\n                   draggable={false}\n                 />\n                 <div className=\"absolute inset-0 bg-gradient-to-t from-black/90 via-black/50 to-black/30\" />\n               </div>\n              {/* Background Pattern */}\n              <div className=\"absolute inset-0 opacity-10\">\n                <div className=\"w-full h-full bg-grid-pattern\"></div>\n              </div>\n              \n              {/* Content */}\n              <div className=\"relative z-10 p-8 h-full flex flex-col\">\n                {/* Header */}\n                <div className=\"text-center mb-6\">\n                  <h1 className=\"text-4xl font-bold mb-2 text-white drop-shadow-lg\">\n                    {selectedCardDetail.title}\n                  </h1>\n                  <p className=\"text-xl text-white/80 font-light\">\n                    {selectedCardDetail.subtitle}\n                  </p>\n                </div>\n                \n                {/* Main Content */}\n                <div className=\"flex-1 flex items-center justify-center\">\n                  <div className=\"grid grid-cols-2 gap-8 w-full\">\n                    {/* Left Column - Key Topics */}\n                    <div>\n                      <h3 className=\"text-lg font-semibold mb-3 text-blue-300\">Key Topics</h3>\n                      <ul className=\"space-y-2 text-white/90\">\n                        <li>• Fundamentals & Core Concepts</li>\n                        <li>• Advanced Techniques</li>\n                        <li>• Practical Applications</li>\n                        <li>• Industry Standards</li>\n                        <li>• Latest Developments</li>\n                      </ul>\n                    </div>\n                    \n                    {/* Right Column - Learning Path */}\n                    <div>\n                      <h3 className=\"text-lg font-semibold mb-3 text-green-300\">Learning Path</h3>\n                      <div className=\"space-y-2 text-white/90\">\n                        <div className=\"flex items-center\">\n                          <div className=\"w-3 h-3 bg-green-400 rounded-full mr-3\"></div>\n                          <span>Beginner Level</span>\n                        </div>\n                        <div className=\"flex items-center\">\n                          <div className=\"w-3 h-3 bg-yellow-400 rounded-full mr-3\"></div>\n                          <span>Intermediate Level</span>\n                        </div>\n                        <div className=\"flex items-center\">\n                          <div className=\"w-3 h-3 bg-red-400 rounded-full mr-3\"></div>\n                          <span>Advanced Level</span>\n                        </div>\n                        <div className=\"flex items-center\">\n                          <div className=\"w-3 h-3 bg-purple-400 rounded-full mr-3\"></div>\n                          <span>Expert Level</span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                \n                {/* Footer */}\n                <div className=\"text-center pt-6 border-t border-white/20\">\n                  <p className=\"text-white/60 text-sm\">\n                    Click anywhere outside to return to globe view\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      </div>\n    </div>\n  );\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}