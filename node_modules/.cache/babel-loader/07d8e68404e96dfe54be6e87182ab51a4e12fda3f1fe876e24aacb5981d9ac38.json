{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrluf\\\\Desktop\\\\deck cards\\\\src\\\\components\\\\CardDetail.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CardDetail({\n  card,\n  onClose,\n  onNavigate,\n  relatedCards\n}) {\n  _s();\n  // 3D Globe rotation system - rotate the globe instead of moving camera\n  const [globeRotation, setGlobeRotation] = useState(0); // Y-axis rotation in degrees\n  const [dragStart, setDragStart] = useState({\n    x: 0,\n    y: 0\n  });\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragOffset, setDragOffset] = useState(0);\n  const containerRef = useRef(null);\n\n  // All cards exist as fixed objects arranged around a 3D globe's equator\n  const allCardsIn3D = relatedCards.map((cardData, index) => {\n    const totalCards = relatedCards.length;\n    const globeRadius = 300; // Radius of the globe\n\n    // Calculate position around the equator (Y = 0 for equator)\n    const angle = index / totalCards * 2 * Math.PI; // Evenly space cards around circle\n    const x = Math.cos(angle) * globeRadius; // X position on circle\n    const y = 0; // All cards on equator (Y = 0)\n    const z = Math.sin(angle) * globeRadius; // Z position on circle\n\n    return {\n      ...cardData,\n      absoluteIndex: index,\n      positionInSpace: index,\n      x3d: x,\n      y3d: y,\n      z3d: z,\n      angle: angle // Store angle for reference\n    };\n  });\n\n  // Function to rotate globe to next/previous card\n  const rotateToCard = useCallback(direction => {\n    const totalCards = allCardsIn3D.length;\n    const degreesPerCard = 360 / totalCards;\n    if (direction === 'right') {\n      setGlobeRotation(prev => prev + degreesPerCard);\n    } else {\n      setGlobeRotation(prev => prev - degreesPerCard);\n    }\n  }, [allCardsIn3D.length]);\n\n  // Initialize globe rotation to focus on clicked card\n  useEffect(() => {\n    const cardIndex = relatedCards.findIndex(c => c.id === card.id);\n    const targetIndex = cardIndex >= 0 ? cardIndex : 0;\n\n    // Calculate rotation needed to bring target card to front\n    const totalCards = relatedCards.length;\n    const degreesPerCard = 360 / totalCards;\n    const targetRotation = -targetIndex * degreesPerCard; // Negative to bring card to front\n\n    setGlobeRotation(targetRotation);\n  }, [card.id, relatedCards]);\n  useEffect(() => {\n    const keyHandler = e => {\n      if (e.key === 'Escape') onClose();\n      if (e.key === 'ArrowLeft' || e.key === 'ArrowRight') {\n        // Rotate globe to next/previous card\n        rotateToCard(e.key === 'ArrowLeft' ? 'left' : 'right');\n      }\n    };\n    document.addEventListener('keydown', keyHandler);\n    return () => document.removeEventListener('keydown', keyHandler);\n  }, [onClose, rotateToCard]);\n\n  // Handle click outside to close\n  const handleBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  // Swipe/drag navigation\n  const handleMouseDown = e => {\n    setIsDragging(true);\n    setDragStart({\n      x: e.clientX,\n      y: e.clientY\n    });\n    setDragOffset(0);\n  };\n  const handleMouseMove = e => {\n    if (!isDragging) return;\n    const deltaX = e.clientX - dragStart.x;\n    // Apply some resistance to make dragging feel more natural\n    const dampedDelta = deltaX * 0.8;\n    setDragOffset(dampedDelta);\n  };\n  const handleMouseUp = () => {\n    if (!isDragging) return;\n    const threshold = 100; // Increased threshold for better feel\n    const totalCards = relatedCards.length;\n    const degreesPerCard = 360 / totalCards;\n\n    // Calculate if we should snap to next/previous card\n    const shouldSnapToNext = dragOffset < -threshold;\n    const shouldSnapToPrevious = dragOffset > threshold;\n    if (shouldSnapToNext) {\n      // Rotate globe to next card\n      rotateToCard('right');\n    } else if (shouldSnapToPrevious) {\n      // Rotate globe to previous card\n      rotateToCard('left');\n    } else {\n      // Snap back to current position\n      setGlobeRotation(prev => {\n        // Round to nearest card position\n        const nearestCardRotation = Math.round(prev / degreesPerCard) * degreesPerCard;\n        return nearestCardRotation;\n      });\n    }\n    setIsDragging(false);\n    setDragOffset(0);\n  };\n\n  // Touch events for mobile\n  const handleTouchStart = e => {\n    const touch = e.touches[0];\n    setIsDragging(true);\n    setDragStart({\n      x: touch.clientX,\n      y: touch.clientY\n    });\n    setDragOffset(0);\n  };\n  const handleTouchMove = e => {\n    if (!isDragging) return;\n    const touch = e.touches[0];\n    const deltaX = touch.clientX - dragStart.x;\n    // Apply some resistance to make dragging feel more natural\n    const dampedDelta = deltaX * 0.8;\n    setDragOffset(dampedDelta);\n  };\n  const handleTouchEnd = () => {\n    handleMouseUp();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 z-50 bg-black backdrop-blur-sm flex items-center justify-center\",\n    onClick: handleBackdropClick,\n    onMouseUp: handleMouseUp,\n    onMouseLeave: handleMouseUp,\n    style: {\n      perspective: '1200px',\n      // 3D perspective for the entire scene\n      perspectiveOrigin: 'center center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => {\n        e.stopPropagation();\n        onClose();\n      },\n      className: \"absolute top-8 right-8 z-60 w-12 h-12 rounded-full bg-white/10 backdrop-blur-md border border-white/20 flex items-center justify-center hover:bg-white/20 transition-all duration-300\",\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"w-6 h-6 text-white\",\n        fill: \"none\",\n        stroke: \"currentColor\",\n        viewBox: \"0 0 24 24\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\",\n          strokeWidth: 2,\n          d: \"M6 18L18 6M6 6l12 12\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      className: \"relative w-full h-full flex items-center justify-center cursor-grab active:cursor-grabbing\",\n      onMouseDown: handleMouseDown,\n      onMouseMove: handleMouseMove,\n      onTouchStart: handleTouchStart,\n      onTouchMove: handleTouchMove,\n      onTouchEnd: handleTouchEnd,\n      style: {\n        transform: `\n            rotateX(-10deg)\n            rotateY(${globeRotation + dragOffset * 0.3}deg)\n          `,\n        transition: isDragging ? 'none' : 'transform 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94)',\n        transformStyle: 'preserve-3d'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute pointer-events-none\",\n        style: {\n          width: '600px',\n          height: '600px',\n          borderRadius: '50%',\n          border: '2px solid rgba(255,255,255,0.1)',\n          transform: 'translate(-50%, -50%)',\n          left: '50%',\n          top: '50%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute pointer-events-none\",\n        style: {\n          width: '600px',\n          height: '2px',\n          background: 'rgba(255,255,255,0.2)',\n          transform: 'translate(-50%, -50%)',\n          left: '50%',\n          top: '50%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), allCardsIn3D.map(cardData => {\n        // Use pre-calculated globe positions\n        const x = cardData.x3d;\n        const y = cardData.y3d;\n        const z = cardData.z3d;\n\n        // Calculate distance from camera position for effects\n        const dx = x - cameraPosition.x;\n        const dy = y - cameraPosition.y;\n        const dz = z - cameraPosition.z;\n        const distanceFromCamera = Math.sqrt(dx * dx + dy * dy + dz * dz) / 100;\n\n        // 3D perspective effects based on distance from camera\n        const scale = Math.max(0.3, 1 - distanceFromCamera * 0.08);\n        const opacity = Math.max(0.2, 1 - distanceFromCamera * 0.12);\n        const zIndex = Math.round(50 - distanceFromCamera * 3);\n\n        // Make cards face outward from globe center (like they're standing on the globe)\n        const rotationY = cardData.angle * 180 / Math.PI + 90; // Face outward from globe\n        const rotationX = 0; // Keep cards upright\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute transition-all duration-500 ease-out\",\n          style: {\n            transform: `\n                  translate3d(${x}px, ${y}px, ${z}px) \n                  scale(${scale}) \n                  rotateY(${rotationY}deg) \n                  rotateX(${rotationX}deg)\n                `,\n            opacity,\n            zIndex,\n            transformOrigin: 'center center',\n            transformStyle: 'preserve-3d'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative w-80 h-80 rounded-2xl overflow-hidden backdrop-blur-xl border border-white/20 shadow-xl shadow-black/40 transition-all duration-500\",\n            style: {\n              transformStyle: 'preserve-3d'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute inset-0\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: cardData.img,\n                alt: cardData.title,\n                className: \"w-full h-full object-cover\",\n                draggable: false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"absolute inset-0 bg-gradient-to-t from-black/80 via-black/20 to-transparent\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute inset-0 flex flex-col justify-end p-6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  className: \"font-bold text-white mb-2 text-2xl transition-all duration-500\",\n                  children: cardData.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-white/80 text-base transition-all duration-500\",\n                  children: cardData.subtitle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 16\n          }, this)\n        }, cardData.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 25\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute -bottom-28 left-1/2 -translate-x-1/2 text-center z-60 pointer-events-none\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white/10 backdrop-blur-md rounded-2xl px-6 py-4 border border-white/20\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-white/60 text-sm mb-1\",\n            children: \"Viewing 3D Space\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-white font-semibold text-base\",\n            children: \"Cards Scattered in 3D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-8 left-8 bg-white/10 backdrop-blur-md rounded-xl px-6 py-3 border border-white/20 pointer-events-none\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-white/80 text-base\",\n        children: [relatedCards.length, \" Cards in 3D Space\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n}\n_s(CardDetail, \"9cJ3btpNpUQyD/Ux30i6GOOajDY=\");\n_c = CardDetail;\nvar _c;\n$RefreshReg$(_c, \"CardDetail\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","jsxDEV","_jsxDEV","CardDetail","card","onClose","onNavigate","relatedCards","_s","globeRotation","setGlobeRotation","dragStart","setDragStart","x","y","isDragging","setIsDragging","dragOffset","setDragOffset","containerRef","allCardsIn3D","map","cardData","index","totalCards","length","globeRadius","angle","Math","PI","cos","z","sin","absoluteIndex","positionInSpace","x3d","y3d","z3d","rotateToCard","direction","degreesPerCard","prev","cardIndex","findIndex","c","id","targetIndex","targetRotation","keyHandler","e","key","document","addEventListener","removeEventListener","handleBackdropClick","target","currentTarget","handleMouseDown","clientX","clientY","handleMouseMove","deltaX","dampedDelta","handleMouseUp","threshold","shouldSnapToNext","shouldSnapToPrevious","nearestCardRotation","round","handleTouchStart","touch","touches","handleTouchMove","handleTouchEnd","className","onClick","onMouseUp","onMouseLeave","style","perspective","perspectiveOrigin","children","stopPropagation","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","fileName","_jsxFileName","lineNumber","columnNumber","ref","onMouseDown","onMouseMove","onTouchStart","onTouchMove","onTouchEnd","transform","transition","transformStyle","width","height","borderRadius","border","left","top","background","dx","cameraPosition","dy","dz","distanceFromCamera","sqrt","scale","max","opacity","zIndex","rotationY","rotationX","transformOrigin","src","img","alt","title","draggable","subtitle","_c","$RefreshReg$"],"sources":["C:/Users/mrluf/Desktop/deck cards/src/components/CardDetail.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\n\r\ninterface CardData {\r\n  id: string;\r\n  img: string;\r\n  title: string;\r\n  subtitle: string;\r\n  category?: string;\r\n}\r\n\r\ninterface CardDetailProps {\r\n  card: CardData;\r\n  onClose: () => void;\r\n  onNavigate: (direction: 'left' | 'right') => void;\r\n  relatedCards: CardData[];\r\n}\r\n\r\nexport default function CardDetail({ card, onClose, onNavigate, relatedCards }: CardDetailProps) {\r\n  // 3D Globe rotation system - rotate the globe instead of moving camera\r\n  const [globeRotation, setGlobeRotation] = useState(0); // Y-axis rotation in degrees\r\n  const [dragStart, setDragStart] = useState({ x: 0, y: 0 });\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [dragOffset, setDragOffset] = useState(0);\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n\r\n  // All cards exist as fixed objects arranged around a 3D globe's equator\r\n  const allCardsIn3D = relatedCards.map((cardData, index) => {\r\n    const totalCards = relatedCards.length;\r\n    const globeRadius = 300; // Radius of the globe\r\n    \r\n    // Calculate position around the equator (Y = 0 for equator)\r\n    const angle = (index / totalCards) * 2 * Math.PI; // Evenly space cards around circle\r\n    const x = Math.cos(angle) * globeRadius; // X position on circle\r\n    const y = 0; // All cards on equator (Y = 0)\r\n    const z = Math.sin(angle) * globeRadius; // Z position on circle\r\n    \r\n    return {\r\n      ...cardData,\r\n      absoluteIndex: index,\r\n      positionInSpace: index,\r\n      x3d: x,\r\n      y3d: y,\r\n      z3d: z,\r\n      angle: angle // Store angle for reference\r\n    };\r\n  });\r\n\r\n  // Function to rotate globe to next/previous card\r\n  const rotateToCard = useCallback((direction: 'left' | 'right') => {\r\n    const totalCards = allCardsIn3D.length;\r\n    const degreesPerCard = 360 / totalCards;\r\n    \r\n    if (direction === 'right') {\r\n      setGlobeRotation(prev => prev + degreesPerCard);\r\n    } else {\r\n      setGlobeRotation(prev => prev - degreesPerCard);\r\n    }\r\n  }, [allCardsIn3D.length]);\r\n\r\n  // Initialize globe rotation to focus on clicked card\r\n  useEffect(() => {\r\n    const cardIndex = relatedCards.findIndex(c => c.id === card.id);\r\n    const targetIndex = cardIndex >= 0 ? cardIndex : 0;\r\n    \r\n    // Calculate rotation needed to bring target card to front\r\n    const totalCards = relatedCards.length;\r\n    const degreesPerCard = 360 / totalCards;\r\n    const targetRotation = -targetIndex * degreesPerCard; // Negative to bring card to front\r\n    \r\n    setGlobeRotation(targetRotation);\r\n  }, [card.id, relatedCards]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const keyHandler = (e: KeyboardEvent) => {\r\n      if (e.key === 'Escape') onClose();\r\n      if (e.key === 'ArrowLeft' || e.key === 'ArrowRight') {\r\n        // Rotate globe to next/previous card\r\n        rotateToCard(e.key === 'ArrowLeft' ? 'left' : 'right');\r\n      }\r\n    };\r\n    \r\n    document.addEventListener('keydown', keyHandler);\r\n    return () => document.removeEventListener('keydown', keyHandler);\r\n  }, [onClose, rotateToCard]);\r\n\r\n  // Handle click outside to close\r\n  const handleBackdropClick = (e: React.MouseEvent) => {\r\n    if (e.target === e.currentTarget) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  // Swipe/drag navigation\r\n  const handleMouseDown = (e: React.MouseEvent) => {\r\n    setIsDragging(true);\r\n    setDragStart({ x: e.clientX, y: e.clientY });\r\n    setDragOffset(0);\r\n  };\r\n\r\n  const handleMouseMove = (e: React.MouseEvent) => {\r\n    if (!isDragging) return;\r\n    const deltaX = e.clientX - dragStart.x;\r\n    // Apply some resistance to make dragging feel more natural\r\n    const dampedDelta = deltaX * 0.8;\r\n    setDragOffset(dampedDelta);\r\n  };\r\n\r\n  const handleMouseUp = () => {\r\n    if (!isDragging) return;\r\n    \r\n    const threshold = 100; // Increased threshold for better feel\r\n    const totalCards = relatedCards.length;\r\n    const degreesPerCard = 360 / totalCards;\r\n    \r\n    // Calculate if we should snap to next/previous card\r\n    const shouldSnapToNext = dragOffset < -threshold;\r\n    const shouldSnapToPrevious = dragOffset > threshold;\r\n    \r\n    if (shouldSnapToNext) {\r\n      // Rotate globe to next card\r\n      rotateToCard('right');\r\n    } else if (shouldSnapToPrevious) {\r\n      // Rotate globe to previous card\r\n      rotateToCard('left');\r\n    } else {\r\n      // Snap back to current position\r\n      setGlobeRotation(prev => {\r\n        // Round to nearest card position\r\n        const nearestCardRotation = Math.round(prev / degreesPerCard) * degreesPerCard;\r\n        return nearestCardRotation;\r\n      });\r\n    }\r\n    \r\n    setIsDragging(false);\r\n    setDragOffset(0);\r\n  };\r\n\r\n  // Touch events for mobile\r\n  const handleTouchStart = (e: React.TouchEvent) => {\r\n    const touch = e.touches[0];\r\n    setIsDragging(true);\r\n    setDragStart({ x: touch.clientX, y: touch.clientY });\r\n    setDragOffset(0);\r\n  };\r\n\r\n  const handleTouchMove = (e: React.TouchEvent) => {\r\n    if (!isDragging) return;\r\n    const touch = e.touches[0];\r\n    const deltaX = touch.clientX - dragStart.x;\r\n    // Apply some resistance to make dragging feel more natural\r\n    const dampedDelta = deltaX * 0.8;\r\n    setDragOffset(dampedDelta);\r\n  };\r\n\r\n  const handleTouchEnd = () => {\r\n    handleMouseUp();\r\n  };\r\n\r\n  return (\r\n    <div \r\n      className=\"fixed inset-0 z-50 bg-black backdrop-blur-sm flex items-center justify-center\"\r\n      onClick={handleBackdropClick}\r\n      onMouseUp={handleMouseUp}\r\n      onMouseLeave={handleMouseUp}\r\n      style={{\r\n        perspective: '1200px', // 3D perspective for the entire scene\r\n        perspectiveOrigin: 'center center'\r\n      }}\r\n    >\r\n      {/* Close button */}\r\n      <button\r\n        onClick={(e) => {\r\n          e.stopPropagation();\r\n          onClose();\r\n        }}\r\n        className=\"absolute top-8 right-8 z-60 w-12 h-12 rounded-full bg-white/10 backdrop-blur-md border border-white/20 flex items-center justify-center hover:bg-white/20 transition-all duration-300\"\r\n      >\r\n        <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n        </svg>\r\n      </button>\r\n\r\n      {/* 3D Globe centered in screen */}\r\n      <div \r\n        ref={containerRef}\r\n        className=\"relative w-full h-full flex items-center justify-center cursor-grab active:cursor-grabbing\"\r\n        onMouseDown={handleMouseDown}\r\n        onMouseMove={handleMouseMove}\r\n        onTouchStart={handleTouchStart}\r\n        onTouchMove={handleTouchMove}\r\n        onTouchEnd={handleTouchEnd}\r\n        style={{\r\n          transform: `\r\n            rotateX(-10deg)\r\n            rotateY(${globeRotation + (dragOffset * 0.3)}deg)\r\n          `,\r\n          transition: isDragging ? 'none' : 'transform 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94)',\r\n          transformStyle: 'preserve-3d'\r\n        }}\r\n      >\r\n        {/* Globe wireframe for visual reference */}\r\n        <div \r\n          className=\"absolute pointer-events-none\"\r\n          style={{\r\n            width: '600px',\r\n            height: '600px',\r\n            borderRadius: '50%',\r\n            border: '2px solid rgba(255,255,255,0.1)',\r\n            transform: 'translate(-50%, -50%)',\r\n            left: '50%',\r\n            top: '50%'\r\n          }}\r\n        />\r\n        \r\n        {/* Equator line */}\r\n        <div \r\n          className=\"absolute pointer-events-none\"\r\n          style={{\r\n            width: '600px',\r\n            height: '2px',\r\n            background: 'rgba(255,255,255,0.2)',\r\n            transform: 'translate(-50%, -50%)',\r\n            left: '50%',\r\n            top: '50%'\r\n          }}\r\n        />\r\n\r\n        {allCardsIn3D.map((cardData) => {\r\n          // Use pre-calculated globe positions\r\n          const x = cardData.x3d;\r\n          const y = cardData.y3d;\r\n          const z = cardData.z3d;\r\n          \r\n          // Calculate distance from camera position for effects\r\n          const dx = x - cameraPosition.x;\r\n          const dy = y - cameraPosition.y;\r\n          const dz = z - cameraPosition.z;\r\n          const distanceFromCamera = Math.sqrt(dx*dx + dy*dy + dz*dz) / 100;\r\n          \r\n          // 3D perspective effects based on distance from camera\r\n          const scale = Math.max(0.3, 1 - distanceFromCamera * 0.08);\r\n          const opacity = Math.max(0.2, 1 - distanceFromCamera * 0.12);\r\n          const zIndex = Math.round(50 - distanceFromCamera * 3);\r\n          \r\n          // Make cards face outward from globe center (like they're standing on the globe)\r\n          const rotationY = (cardData.angle * 180 / Math.PI) + 90; // Face outward from globe\r\n          const rotationX = 0; // Keep cards upright\r\n          \r\n          return (\r\n                        <div\r\n              key={cardData.id}\r\n              className=\"absolute transition-all duration-500 ease-out\"\r\n              style={{\r\n                transform: `\r\n                  translate3d(${x}px, ${y}px, ${z}px) \r\n                  scale(${scale}) \r\n                  rotateY(${rotationY}deg) \r\n                  rotateX(${rotationX}deg)\r\n                `,\r\n                opacity,\r\n                zIndex,\r\n                transformOrigin: 'center center',\r\n                transformStyle: 'preserve-3d'\r\n              }}\r\n            >\r\n                             {/* Card - all cards are equal objects */}\r\n               <div className=\"relative w-80 h-80 rounded-2xl overflow-hidden backdrop-blur-xl border border-white/20 shadow-xl shadow-black/40 transition-all duration-500\"\r\n                               style={{\r\n                  transformStyle: 'preserve-3d'\r\n                }}>\r\n                {/* Background image */}\r\n                <div className=\"absolute inset-0\">\r\n                  <img\r\n                    src={cardData.img}\r\n                    alt={cardData.title}\r\n                    className=\"w-full h-full object-cover\"\r\n                    draggable={false}\r\n                  />\r\n                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/80 via-black/20 to-transparent\" />\r\n                </div>\r\n\r\n                {/* Content overlay - all cards have same content styling */}\r\n                <div className=\"absolute inset-0 flex flex-col justify-end p-6\">\r\n                  <div className=\"text-center\">\r\n                    <h2 className=\"font-bold text-white mb-2 text-2xl transition-all duration-500\">\r\n                      {cardData.title}\r\n                    </h2>\r\n                    <p className=\"text-white/80 text-base transition-all duration-500\">\r\n                      {cardData.subtitle}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n\r\n        {/* Current card info */}\r\n        <div className=\"absolute -bottom-28 left-1/2 -translate-x-1/2 text-center z-60 pointer-events-none\">\r\n          <div className=\"bg-white/10 backdrop-blur-md rounded-2xl px-6 py-4 border border-white/20\">\r\n            <p className=\"text-white/60 text-sm mb-1\">Viewing 3D Space</p>\r\n            <p className=\"text-white font-semibold text-base\">\r\n              Cards Scattered in 3D\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n      {/* Card counter */}\r\n      <div className=\"absolute top-8 left-8 bg-white/10 backdrop-blur-md rounded-xl px-6 py-3 border border-white/20 pointer-events-none\">\r\n        <p className=\"text-white/80 text-base\">\r\n          {relatedCards.length} Cards in 3D Space\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}