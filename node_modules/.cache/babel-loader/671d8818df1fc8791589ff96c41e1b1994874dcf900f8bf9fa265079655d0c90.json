{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrluf\\\\Desktop\\\\deck cards\\\\src\\\\components\\\\Card.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Card = ({\n  card,\n  onClick,\n  isDraggable = false\n}) => {\n  const getLevelColor = level => {\n    switch (level) {\n      case 'purple':\n        return 'bg-purple-500';\n      case 'yellow':\n        return 'bg-yellow-500';\n      case 'red':\n        return 'bg-red-500';\n      default:\n        return 'bg-gray-500';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `relative w-48 h-64 rounded-lg shadow-lg transform transition-all duration-200 hover:scale-105 cursor-pointer ${isDraggable ? 'cursor-move' : ''}`,\n    onClick: onClick,\n    draggable: isDraggable,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `absolute top-0 left-0 w-full h-2 ${getLevelColor(card.level)} rounded-t-lg`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 h-full flex flex-col\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-bold mb-2\",\n        children: card.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-600 mb-2\",\n        children: card.category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-500 flex-grow\",\n        children: card.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2 text-xs text-gray-400\",\n        children: [\"Earned: \", new Date(card.dateEarned).toLocaleDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_c = Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Card","card","onClick","isDraggable","getLevelColor","level","className","draggable","children","fileName","_jsxFileName","lineNumber","columnNumber","name","category","description","Date","dateEarned","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/mrluf/Desktop/deck cards/src/components/Card.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Card as CardType } from '../types';\r\n\r\ninterface CardProps {\r\n  card: CardType;\r\n  onClick?: () => void;\r\n  isDraggable?: boolean;\r\n}\r\n\r\nexport const Card: React.FC<CardProps> = ({ card, onClick, isDraggable = false }) => {\r\n  const getLevelColor = (level: CardType['level']) => {\r\n    switch (level) {\r\n      case 'purple':\r\n        return 'bg-purple-500';\r\n      case 'yellow':\r\n        return 'bg-yellow-500';\r\n      case 'red':\r\n        return 'bg-red-500';\r\n      default:\r\n        return 'bg-gray-500';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`relative w-48 h-64 rounded-lg shadow-lg transform transition-all duration-200 hover:scale-105 cursor-pointer ${\r\n        isDraggable ? 'cursor-move' : ''\r\n      }`}\r\n      onClick={onClick}\r\n      draggable={isDraggable}\r\n    >\r\n      <div className={`absolute top-0 left-0 w-full h-2 ${getLevelColor(card.level)} rounded-t-lg`} />\r\n      <div className=\"p-4 h-full flex flex-col\">\r\n        <h3 className=\"text-lg font-bold mb-2\">{card.name}</h3>\r\n        <p className=\"text-sm text-gray-600 mb-2\">{card.category}</p>\r\n        <p className=\"text-sm text-gray-500 flex-grow\">{card.description}</p>\r\n        <div className=\"mt-2 text-xs text-gray-400\">\r\n          Earned: {new Date(card.dateEarned).toLocaleDateString()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAS1B,OAAO,MAAMC,IAAyB,GAAGA,CAAC;EAAEC,IAAI;EAAEC,OAAO;EAAEC,WAAW,GAAG;AAAM,CAAC,KAAK;EACnF,MAAMC,aAAa,GAAIC,KAAwB,IAAK;IAClD,QAAQA,KAAK;MACX,KAAK,QAAQ;QACX,OAAO,eAAe;MACxB,KAAK,QAAQ;QACX,OAAO,eAAe;MACxB,KAAK,KAAK;QACR,OAAO,YAAY;MACrB;QACE,OAAO,aAAa;IACxB;EACF,CAAC;EAED,oBACEN,OAAA;IACEO,SAAS,EAAE,gHACTH,WAAW,GAAG,aAAa,GAAG,EAAE,EAC/B;IACHD,OAAO,EAAEA,OAAQ;IACjBK,SAAS,EAAEJ,WAAY;IAAAK,QAAA,gBAEvBT,OAAA;MAAKO,SAAS,EAAE,oCAAoCF,aAAa,CAACH,IAAI,CAACI,KAAK,CAAC;IAAgB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChGb,OAAA;MAAKO,SAAS,EAAC,0BAA0B;MAAAE,QAAA,gBACvCT,OAAA;QAAIO,SAAS,EAAC,wBAAwB;QAAAE,QAAA,EAAEP,IAAI,CAACY;MAAI;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACvDb,OAAA;QAAGO,SAAS,EAAC,4BAA4B;QAAAE,QAAA,EAAEP,IAAI,CAACa;MAAQ;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7Db,OAAA;QAAGO,SAAS,EAAC,iCAAiC;QAAAE,QAAA,EAAEP,IAAI,CAACc;MAAW;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrEb,OAAA;QAAKO,SAAS,EAAC,4BAA4B;QAAAE,QAAA,GAAC,UAClC,EAAC,IAAIQ,IAAI,CAACf,IAAI,CAACgB,UAAU,CAAC,CAACC,kBAAkB,CAAC,CAAC;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACO,EAAA,GAjCWnB,IAAyB;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}