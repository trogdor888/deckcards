{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrluf\\\\Desktop\\\\deck cards\\\\src\\\\components\\\\CardDetail.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CardDetail({\n  card,\n  onClose,\n  onNavigate,\n  relatedCards\n}) {\n  _s();\n  var _relatedCards$Math$ro;\n  // 3D Camera system - camera position in 3D space\n  const [cameraPosition, setCameraPosition] = useState({\n    x: 0,\n    y: 0,\n    z: 0,\n    rotationY: 0,\n    rotationX: 0\n  });\n  const [dragStart, setDragStart] = useState({\n    x: 0,\n    y: 0\n  });\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragOffset, setDragOffset] = useState(0);\n  const [isFlipped, setIsFlipped] = useState(false);\n  const containerRef = useRef(null);\n\n  // Initialize camera position to focus on clicked card in 3D space\n  useEffect(() => {\n    const cardIndex = relatedCards.findIndex(c => c.id === card.id);\n    const targetIndex = cardIndex >= 0 ? cardIndex : 0;\n\n    // Calculate the 3D position of the target card using same random algorithm\n    const seed = targetIndex * 12345;\n    const random1 = (seed * 9301 + 49297) % 233280 / 233280;\n    const random2 = ((seed + 1) * 9301 + 49297) % 233280 / 233280;\n    const random3 = ((seed + 2) * 9301 + 49297) % 233280 / 233280;\n    const radius = 400;\n    const cardX = (random1 - 0.5) * radius * 2;\n    const cardY = (random2 - 0.5) * radius * 2;\n    const cardZ = (random3 - 0.5) * radius * 2;\n\n    // Position camera to focus on the clicked card from a good viewing angle\n    setCameraPosition({\n      x: cardX,\n      y: cardY - 150,\n      // Position camera above and back from the card\n      z: cardZ + 300,\n      // Pull camera back for better view\n      rotationY: 0,\n      // Face forward\n      rotationX: -20 // Look slightly down at the card\n    });\n  }, [card.id, relatedCards]);\n\n  // Handle card flip for the card closest to camera\n  useEffect(() => {\n    setIsFlipped(true);\n    const timer = setTimeout(() => setIsFlipped(false), 600);\n    return () => clearTimeout(timer);\n  }, [cameraPosition.x]);\n  useEffect(() => {\n    const keyHandler = e => {\n      if (e.key === 'Escape') onClose();\n      if (e.key === 'ArrowLeft') {\n        // Move camera to previous card position\n        const cardSpacing = 200;\n        const currentCardIndex = Math.round(cameraPosition.x / cardSpacing);\n        if (currentCardIndex > 0) {\n          const newIndex = currentCardIndex - 1;\n          setCameraPosition({\n            x: newIndex * cardSpacing,\n            y: -100,\n            // Slightly elevated\n            z: 200,\n            // Moderate distance\n            rotationY: newIndex * -5,\n            // Slight rotation\n            rotationX: -15 // Slight downward tilt\n          });\n        }\n      }\n      if (e.key === 'ArrowRight') {\n        // Move camera to next card position\n        const cardSpacing = 200;\n        const currentCardIndex = Math.round(cameraPosition.x / cardSpacing);\n        if (currentCardIndex < relatedCards.length - 1) {\n          const newIndex = currentCardIndex + 1;\n          setCameraPosition({\n            x: newIndex * cardSpacing,\n            y: -100,\n            // Slightly elevated\n            z: 200,\n            // Moderate distance\n            rotationY: newIndex * -5,\n            // Slight rotation\n            rotationX: -15 // Slight downward tilt\n          });\n        }\n      }\n    };\n    document.addEventListener('keydown', keyHandler);\n    return () => document.removeEventListener('keydown', keyHandler);\n  }, [onClose, cameraPosition.x, relatedCards.length]);\n\n  // Handle click outside to close\n  const handleBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  // Swipe/drag navigation\n  const handleMouseDown = e => {\n    setIsDragging(true);\n    setDragStart({\n      x: e.clientX,\n      y: e.clientY\n    });\n    setDragOffset(0);\n  };\n  const handleMouseMove = e => {\n    if (!isDragging) return;\n    const deltaX = e.clientX - dragStart.x;\n    // Apply some resistance to make dragging feel more natural\n    const dampedDelta = deltaX * 0.8;\n    setDragOffset(dampedDelta);\n  };\n  const handleMouseUp = () => {\n    if (!isDragging) return;\n    const threshold = 60;\n    const cardSpacing = 200;\n    const currentCardIndex = Math.round(cameraPosition.x / cardSpacing);\n\n    // Calculate if we should snap to next/previous card in 3D space\n    const shouldSnapToNext = dragOffset < -threshold && currentCardIndex < relatedCards.length - 1;\n    const shouldSnapToPrevious = dragOffset > threshold && currentCardIndex > 0;\n    if (shouldSnapToNext) {\n      // Move camera to next card position in 3D space\n      const newIndex = currentCardIndex + 1;\n      setCameraPosition({\n        x: newIndex * cardSpacing,\n        y: -100,\n        // Slightly elevated\n        z: 200,\n        // Moderate distance\n        rotationY: newIndex * -5,\n        // Slight rotation\n        rotationX: -15 // Slight downward tilt\n      });\n    } else if (shouldSnapToPrevious) {\n      // Move camera to previous card position in 3D space\n      const newIndex = currentCardIndex - 1;\n      setCameraPosition({\n        x: newIndex * cardSpacing,\n        y: -100,\n        // Slightly elevated\n        z: 200,\n        // Moderate distance\n        rotationY: newIndex * -5,\n        // Slight rotation\n        rotationX: -15 // Slight downward tilt\n      });\n    }\n    setIsDragging(false);\n    setDragOffset(0);\n  };\n\n  // Touch events for mobile\n  const handleTouchStart = e => {\n    const touch = e.touches[0];\n    setIsDragging(true);\n    setDragStart({\n      x: touch.clientX,\n      y: touch.clientY\n    });\n    setDragOffset(0);\n  };\n  const handleTouchMove = e => {\n    if (!isDragging) return;\n    const touch = e.touches[0];\n    const deltaX = touch.clientX - dragStart.x;\n    // Apply some resistance to make dragging feel more natural\n    const dampedDelta = deltaX * 0.8;\n    setDragOffset(dampedDelta);\n  };\n  const handleTouchEnd = () => {\n    handleMouseUp();\n  };\n\n  // All cards exist as fixed objects in 3D space\n  const allCardsIn3D = relatedCards.map((cardData, index) => ({\n    ...cardData,\n    absoluteIndex: index,\n    positionInSpace: index\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 z-50 bg-black backdrop-blur-sm flex items-center justify-center\",\n    onClick: handleBackdropClick,\n    onMouseUp: handleMouseUp,\n    onMouseLeave: handleMouseUp,\n    style: {\n      perspective: '1200px',\n      // 3D perspective for the entire scene\n      perspectiveOrigin: 'center center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => {\n        e.stopPropagation();\n        onClose();\n      },\n      className: \"absolute top-8 right-8 z-60 w-12 h-12 rounded-full bg-white/10 backdrop-blur-md border border-white/20 flex items-center justify-center hover:bg-white/20 transition-all duration-300\",\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"w-6 h-6 text-white\",\n        fill: \"none\",\n        stroke: \"currentColor\",\n        viewBox: \"0 0 24 24\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\",\n          strokeWidth: 2,\n          d: \"M6 18L18 6M6 6l12 12\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      className: \"relative w-full h-full flex items-center justify-center cursor-grab active:cursor-grabbing\",\n      onMouseDown: handleMouseDown,\n      onMouseMove: handleMouseMove,\n      onTouchStart: handleTouchStart,\n      onTouchMove: handleTouchMove,\n      onTouchEnd: handleTouchEnd,\n      style: {\n        transform: `\n            translateX(${dragOffset - cameraPosition.x}px)\n            translateY(${cameraPosition.y}px)\n            translateZ(${cameraPosition.z}px)\n            rotateX(${cameraPosition.rotationX}deg)\n            rotateY(${cameraPosition.rotationY + dragOffset * -0.02}deg)\n          `,\n        transition: isDragging ? 'none' : 'transform 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94)',\n        transformStyle: 'preserve-3d'\n      },\n      children: [allCardsIn3D.map(cardData => {\n        const {\n          positionInSpace\n        } = cardData;\n\n        // Scatter cards randomly in true 3D space using seeded random based on card index\n        const seed = positionInSpace * 12345; // Use card index as seed for consistent positioning\n        const random1 = (seed * 9301 + 49297) % 233280 / 233280;\n        const random2 = ((seed + 1) * 9301 + 49297) % 233280 / 233280;\n        const random3 = ((seed + 2) * 9301 + 49297) % 233280 / 233280;\n        const random4 = ((seed + 3) * 9301 + 49297) % 233280 / 233280;\n        const random5 = ((seed + 4) * 9301 + 49297) % 233280 / 233280;\n\n        // Scatter cards in a 3D sphere around the origin\n        const radius = 400; // Sphere radius\n        const x = (random1 - 0.5) * radius * 2; // -400 to +400\n        const y = (random2 - 0.5) * radius * 2; // -400 to +400  \n        const z = (random3 - 0.5) * radius * 2; // -400 to +400\n\n        // Calculate distance from camera position for effects\n        const dx = x - cameraPosition.x;\n        const dy = y - cameraPosition.y;\n        const dz = z - cameraPosition.z;\n        const distanceFromCamera = Math.sqrt(dx * dx + dy * dy + dz * dz) / 100; // Normalize distance\n\n        // 3D perspective effects based on distance from camera\n        const scale = Math.max(0.2, 1 - distanceFromCamera * 0.1); // Perspective scaling\n        const opacity = Math.max(0.1, 1 - distanceFromCamera * 0.15); // Fade with distance\n        const zIndex = Math.round(50 - distanceFromCamera * 5); // Z-ordering\n\n        // Random rotation for each card in 3D space\n        const rotationX = (random4 - 0.5) * 60; // Random X rotation -30 to +30 degrees\n        const rotationY = (random5 - 0.5) * 60; // Random Y rotation -30 to +30 degrees\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute transition-all duration-500 ease-out\",\n          style: {\n            transform: `\n                  translate3d(${x}px, ${y}px, ${z}px) \n                  scale(${scale}) \n                  rotateY(${rotationY}deg) \n                  rotateX(${rotationX}deg)\n                `,\n            opacity,\n            zIndex,\n            transformOrigin: 'center center',\n            transformStyle: 'preserve-3d'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative w-80 h-80 rounded-2xl overflow-hidden backdrop-blur-xl border border-white/20 shadow-xl shadow-black/40 transition-all duration-500\",\n            style: {\n              transform: Math.round(cameraPosition.x / 200) === cardData.absoluteIndex && isFlipped ? 'rotateY(180deg)' : 'rotateY(0deg)',\n              transformStyle: 'preserve-3d'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute inset-0\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: cardData.img,\n                alt: cardData.title,\n                className: \"w-full h-full object-cover\",\n                draggable: false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"absolute inset-0 bg-gradient-to-t from-black/80 via-black/20 to-transparent\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute inset-0 flex flex-col justify-end p-6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  className: \"font-bold text-white mb-2 text-2xl transition-all duration-500\",\n                  children: cardData.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-white/80 text-base transition-all duration-500\",\n                  children: cardData.subtitle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 16\n          }, this)\n        }, cardData.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 25\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute -bottom-28 left-1/2 -translate-x-1/2 text-center z-60 pointer-events-none\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white/10 backdrop-blur-md rounded-2xl px-6 py-4 border border-white/20\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-white/60 text-sm mb-1\",\n            children: \"Viewing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-white font-semibold text-base\",\n            children: ((_relatedCards$Math$ro = relatedCards[Math.round(cameraPosition.x / 200)]) === null || _relatedCards$Math$ro === void 0 ? void 0 : _relatedCards$Math$ro.title) || 'Card'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-8 left-8 bg-white/10 backdrop-blur-md rounded-xl px-6 py-3 border border-white/20 pointer-events-none\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-white/80 text-base\",\n        children: [Math.round(cameraPosition.x / 200) + 1, \" of \", relatedCards.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this);\n}\n_s(CardDetail, \"H4SyGmwqt2nwwB/sOfnLM2cj93Q=\");\n_c = CardDetail;\nvar _c;\n$RefreshReg$(_c, \"CardDetail\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","CardDetail","card","onClose","onNavigate","relatedCards","_s","_relatedCards$Math$ro","cameraPosition","setCameraPosition","x","y","z","rotationY","rotationX","dragStart","setDragStart","isDragging","setIsDragging","dragOffset","setDragOffset","isFlipped","setIsFlipped","containerRef","cardIndex","findIndex","c","id","targetIndex","seed","random1","random2","random3","radius","cardX","cardY","cardZ","timer","setTimeout","clearTimeout","keyHandler","e","key","cardSpacing","currentCardIndex","Math","round","newIndex","length","document","addEventListener","removeEventListener","handleBackdropClick","target","currentTarget","handleMouseDown","clientX","clientY","handleMouseMove","deltaX","dampedDelta","handleMouseUp","threshold","shouldSnapToNext","shouldSnapToPrevious","handleTouchStart","touch","touches","handleTouchMove","handleTouchEnd","allCardsIn3D","map","cardData","index","absoluteIndex","positionInSpace","className","onClick","onMouseUp","onMouseLeave","style","perspective","perspectiveOrigin","children","stopPropagation","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","fileName","_jsxFileName","lineNumber","columnNumber","ref","onMouseDown","onMouseMove","onTouchStart","onTouchMove","onTouchEnd","transform","transition","transformStyle","random4","random5","dx","dy","dz","distanceFromCamera","sqrt","scale","max","opacity","zIndex","transformOrigin","src","img","alt","title","draggable","subtitle","_c","$RefreshReg$"],"sources":["C:/Users/mrluf/Desktop/deck cards/src/components/CardDetail.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\n\r\ninterface CardData {\r\n  id: string;\r\n  img: string;\r\n  title: string;\r\n  subtitle: string;\r\n  category?: string;\r\n}\r\n\r\ninterface CardDetailProps {\r\n  card: CardData;\r\n  onClose: () => void;\r\n  onNavigate: (direction: 'left' | 'right') => void;\r\n  relatedCards: CardData[];\r\n}\r\n\r\nexport default function CardDetail({ card, onClose, onNavigate, relatedCards }: CardDetailProps) {\r\n  // 3D Camera system - camera position in 3D space\r\n  const [cameraPosition, setCameraPosition] = useState({ x: 0, y: 0, z: 0, rotationY: 0, rotationX: 0 });\r\n  const [dragStart, setDragStart] = useState({ x: 0, y: 0 });\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [dragOffset, setDragOffset] = useState(0);\r\n  const [isFlipped, setIsFlipped] = useState(false);\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n\r\n  // Initialize camera position to focus on clicked card in 3D space\r\n  useEffect(() => {\r\n    const cardIndex = relatedCards.findIndex(c => c.id === card.id);\r\n    const targetIndex = cardIndex >= 0 ? cardIndex : 0;\r\n    \r\n    // Calculate the 3D position of the target card using same random algorithm\r\n    const seed = targetIndex * 12345;\r\n    const random1 = ((seed * 9301 + 49297) % 233280) / 233280;\r\n    const random2 = (((seed + 1) * 9301 + 49297) % 233280) / 233280;\r\n    const random3 = (((seed + 2) * 9301 + 49297) % 233280) / 233280;\r\n    \r\n    const radius = 400;\r\n    const cardX = (random1 - 0.5) * radius * 2;\r\n    const cardY = (random2 - 0.5) * radius * 2;\r\n    const cardZ = (random3 - 0.5) * radius * 2;\r\n    \r\n    // Position camera to focus on the clicked card from a good viewing angle\r\n    setCameraPosition({\r\n      x: cardX,\r\n      y: cardY - 150, // Position camera above and back from the card\r\n      z: cardZ + 300, // Pull camera back for better view\r\n      rotationY: 0, // Face forward\r\n      rotationX: -20 // Look slightly down at the card\r\n    });\r\n  }, [card.id, relatedCards]);\r\n\r\n  // Handle card flip for the card closest to camera\r\n  useEffect(() => {\r\n    setIsFlipped(true);\r\n    const timer = setTimeout(() => setIsFlipped(false), 600);\r\n    return () => clearTimeout(timer);\r\n  }, [cameraPosition.x]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const keyHandler = (e: KeyboardEvent) => {\r\n      if (e.key === 'Escape') onClose();\r\n      if (e.key === 'ArrowLeft') {\r\n        // Move camera to previous card position\r\n        const cardSpacing = 200;\r\n        const currentCardIndex = Math.round(cameraPosition.x / cardSpacing);\r\n        if (currentCardIndex > 0) {\r\n          const newIndex = currentCardIndex - 1;\r\n          setCameraPosition({\r\n            x: newIndex * cardSpacing,\r\n            y: -100, // Slightly elevated\r\n            z: 200,  // Moderate distance\r\n            rotationY: newIndex * -5, // Slight rotation\r\n            rotationX: -15 // Slight downward tilt\r\n          });\r\n        }\r\n      }\r\n      if (e.key === 'ArrowRight') {\r\n        // Move camera to next card position\r\n        const cardSpacing = 200;\r\n        const currentCardIndex = Math.round(cameraPosition.x / cardSpacing);\r\n        if (currentCardIndex < relatedCards.length - 1) {\r\n          const newIndex = currentCardIndex + 1;\r\n          setCameraPosition({\r\n            x: newIndex * cardSpacing,\r\n            y: -100, // Slightly elevated\r\n            z: 200,  // Moderate distance\r\n            rotationY: newIndex * -5, // Slight rotation\r\n            rotationX: -15 // Slight downward tilt\r\n          });\r\n        }\r\n      }\r\n    };\r\n    \r\n    document.addEventListener('keydown', keyHandler);\r\n    return () => document.removeEventListener('keydown', keyHandler);\r\n  }, [onClose, cameraPosition.x, relatedCards.length]);\r\n\r\n  // Handle click outside to close\r\n  const handleBackdropClick = (e: React.MouseEvent) => {\r\n    if (e.target === e.currentTarget) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  // Swipe/drag navigation\r\n  const handleMouseDown = (e: React.MouseEvent) => {\r\n    setIsDragging(true);\r\n    setDragStart({ x: e.clientX, y: e.clientY });\r\n    setDragOffset(0);\r\n  };\r\n\r\n  const handleMouseMove = (e: React.MouseEvent) => {\r\n    if (!isDragging) return;\r\n    const deltaX = e.clientX - dragStart.x;\r\n    // Apply some resistance to make dragging feel more natural\r\n    const dampedDelta = deltaX * 0.8;\r\n    setDragOffset(dampedDelta);\r\n  };\r\n\r\n  const handleMouseUp = () => {\r\n    if (!isDragging) return;\r\n    \r\n    const threshold = 60;\r\n    const cardSpacing = 200;\r\n    const currentCardIndex = Math.round(cameraPosition.x / cardSpacing);\r\n    \r\n    // Calculate if we should snap to next/previous card in 3D space\r\n    const shouldSnapToNext = dragOffset < -threshold && currentCardIndex < relatedCards.length - 1;\r\n    const shouldSnapToPrevious = dragOffset > threshold && currentCardIndex > 0;\r\n    \r\n    if (shouldSnapToNext) {\r\n      // Move camera to next card position in 3D space\r\n      const newIndex = currentCardIndex + 1;\r\n      setCameraPosition({\r\n        x: newIndex * cardSpacing,\r\n        y: -100, // Slightly elevated\r\n        z: 200,  // Moderate distance\r\n        rotationY: newIndex * -5, // Slight rotation\r\n        rotationX: -15 // Slight downward tilt\r\n      });\r\n    } else if (shouldSnapToPrevious) {\r\n      // Move camera to previous card position in 3D space\r\n      const newIndex = currentCardIndex - 1;\r\n      setCameraPosition({\r\n        x: newIndex * cardSpacing,\r\n        y: -100, // Slightly elevated\r\n        z: 200,  // Moderate distance\r\n        rotationY: newIndex * -5, // Slight rotation\r\n        rotationX: -15 // Slight downward tilt\r\n      });\r\n    }\r\n    \r\n    setIsDragging(false);\r\n    setDragOffset(0);\r\n  };\r\n\r\n  // Touch events for mobile\r\n  const handleTouchStart = (e: React.TouchEvent) => {\r\n    const touch = e.touches[0];\r\n    setIsDragging(true);\r\n    setDragStart({ x: touch.clientX, y: touch.clientY });\r\n    setDragOffset(0);\r\n  };\r\n\r\n  const handleTouchMove = (e: React.TouchEvent) => {\r\n    if (!isDragging) return;\r\n    const touch = e.touches[0];\r\n    const deltaX = touch.clientX - dragStart.x;\r\n    // Apply some resistance to make dragging feel more natural\r\n    const dampedDelta = deltaX * 0.8;\r\n    setDragOffset(dampedDelta);\r\n  };\r\n\r\n  const handleTouchEnd = () => {\r\n    handleMouseUp();\r\n  };\r\n\r\n  // All cards exist as fixed objects in 3D space\r\n  const allCardsIn3D = relatedCards.map((cardData, index) => ({\r\n    ...cardData,\r\n    absoluteIndex: index,\r\n    positionInSpace: index\r\n  }));\r\n\r\n  return (\r\n    <div \r\n      className=\"fixed inset-0 z-50 bg-black backdrop-blur-sm flex items-center justify-center\"\r\n      onClick={handleBackdropClick}\r\n      onMouseUp={handleMouseUp}\r\n      onMouseLeave={handleMouseUp}\r\n      style={{\r\n        perspective: '1200px', // 3D perspective for the entire scene\r\n        perspectiveOrigin: 'center center'\r\n      }}\r\n    >\r\n      {/* Close button */}\r\n      <button\r\n        onClick={(e) => {\r\n          e.stopPropagation();\r\n          onClose();\r\n        }}\r\n        className=\"absolute top-8 right-8 z-60 w-12 h-12 rounded-full bg-white/10 backdrop-blur-md border border-white/20 flex items-center justify-center hover:bg-white/20 transition-all duration-300\"\r\n      >\r\n        <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n        </svg>\r\n      </button>\r\n\r\n            {/* 3D Canvas with all 10 cards */}\r\n      <div \r\n        ref={containerRef}\r\n        className=\"relative w-full h-full flex items-center justify-center cursor-grab active:cursor-grabbing\"\r\n        onMouseDown={handleMouseDown}\r\n        onMouseMove={handleMouseMove}\r\n        onTouchStart={handleTouchStart}\r\n        onTouchMove={handleTouchMove}\r\n        onTouchEnd={handleTouchEnd}\r\n        style={{\r\n          transform: `\r\n            translateX(${dragOffset - cameraPosition.x}px)\r\n            translateY(${cameraPosition.y}px)\r\n            translateZ(${cameraPosition.z}px)\r\n            rotateX(${cameraPosition.rotationX}deg)\r\n            rotateY(${cameraPosition.rotationY + (dragOffset * -0.02)}deg)\r\n          `,\r\n          transition: isDragging ? 'none' : 'transform 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94)',\r\n          transformStyle: 'preserve-3d'\r\n        }}\r\n      >\r\n        {allCardsIn3D.map((cardData) => {\r\n          const { positionInSpace } = cardData;\r\n          \r\n          // Scatter cards randomly in true 3D space using seeded random based on card index\r\n          const seed = positionInSpace * 12345; // Use card index as seed for consistent positioning\r\n          const random1 = ((seed * 9301 + 49297) % 233280) / 233280;\r\n          const random2 = (((seed + 1) * 9301 + 49297) % 233280) / 233280;\r\n          const random3 = (((seed + 2) * 9301 + 49297) % 233280) / 233280;\r\n          const random4 = (((seed + 3) * 9301 + 49297) % 233280) / 233280;\r\n          const random5 = (((seed + 4) * 9301 + 49297) % 233280) / 233280;\r\n          \r\n          // Scatter cards in a 3D sphere around the origin\r\n          const radius = 400; // Sphere radius\r\n          const x = (random1 - 0.5) * radius * 2; // -400 to +400\r\n          const y = (random2 - 0.5) * radius * 2; // -400 to +400  \r\n          const z = (random3 - 0.5) * radius * 2; // -400 to +400\r\n          \r\n          // Calculate distance from camera position for effects\r\n          const dx = x - cameraPosition.x;\r\n          const dy = y - cameraPosition.y;\r\n          const dz = z - cameraPosition.z;\r\n          const distanceFromCamera = Math.sqrt(dx*dx + dy*dy + dz*dz) / 100; // Normalize distance\r\n          \r\n          // 3D perspective effects based on distance from camera\r\n          const scale = Math.max(0.2, 1 - distanceFromCamera * 0.1); // Perspective scaling\r\n          const opacity = Math.max(0.1, 1 - distanceFromCamera * 0.15); // Fade with distance\r\n          const zIndex = Math.round(50 - distanceFromCamera * 5); // Z-ordering\r\n          \r\n          // Random rotation for each card in 3D space\r\n          const rotationX = (random4 - 0.5) * 60; // Random X rotation -30 to +30 degrees\r\n          const rotationY = (random5 - 0.5) * 60; // Random Y rotation -30 to +30 degrees\r\n          \r\n          return (\r\n                        <div\r\n              key={cardData.id}\r\n              className=\"absolute transition-all duration-500 ease-out\"\r\n              style={{\r\n                transform: `\r\n                  translate3d(${x}px, ${y}px, ${z}px) \r\n                  scale(${scale}) \r\n                  rotateY(${rotationY}deg) \r\n                  rotateX(${rotationX}deg)\r\n                `,\r\n                opacity,\r\n                zIndex,\r\n                transformOrigin: 'center center',\r\n                transformStyle: 'preserve-3d'\r\n              }}\r\n            >\r\n                             {/* Card - all cards are equal objects */}\r\n               <div className=\"relative w-80 h-80 rounded-2xl overflow-hidden backdrop-blur-xl border border-white/20 shadow-xl shadow-black/40 transition-all duration-500\"\r\n                               style={{\r\n                  transform: Math.round(cameraPosition.x / 200) === cardData.absoluteIndex && isFlipped ? 'rotateY(180deg)' : 'rotateY(0deg)',\r\n                  transformStyle: 'preserve-3d'\r\n                }}>\r\n                {/* Background image */}\r\n                <div className=\"absolute inset-0\">\r\n                  <img\r\n                    src={cardData.img}\r\n                    alt={cardData.title}\r\n                    className=\"w-full h-full object-cover\"\r\n                    draggable={false}\r\n                  />\r\n                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/80 via-black/20 to-transparent\" />\r\n                </div>\r\n\r\n                {/* Content overlay - all cards have same content styling */}\r\n                <div className=\"absolute inset-0 flex flex-col justify-end p-6\">\r\n                  <div className=\"text-center\">\r\n                    <h2 className=\"font-bold text-white mb-2 text-2xl transition-all duration-500\">\r\n                      {cardData.title}\r\n                    </h2>\r\n                    <p className=\"text-white/80 text-base transition-all duration-500\">\r\n                      {cardData.subtitle}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n\r\n        {/* Current card info */}\r\n        <div className=\"absolute -bottom-28 left-1/2 -translate-x-1/2 text-center z-60 pointer-events-none\">\r\n          <div className=\"bg-white/10 backdrop-blur-md rounded-2xl px-6 py-4 border border-white/20\">\r\n            <p className=\"text-white/60 text-sm mb-1\">Viewing</p>\r\n            <p className=\"text-white font-semibold text-base\">\r\n              {relatedCards[Math.round(cameraPosition.x / 200)]?.title || 'Card'}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n      {/* Card counter */}\r\n      <div className=\"absolute top-8 left-8 bg-white/10 backdrop-blur-md rounded-xl px-6 py-3 border border-white/20 pointer-events-none\">\r\n        <p className=\"text-white/80 text-base\">\r\n          {Math.round(cameraPosition.x / 200) + 1} of {relatedCards.length}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}