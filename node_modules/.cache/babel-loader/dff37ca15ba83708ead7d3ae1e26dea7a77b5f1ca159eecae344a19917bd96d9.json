{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrluf\\\\Desktop\\\\deck cards\\\\src\\\\components\\\\CardDetail.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CardDetail({\n  card,\n  onClose,\n  onNavigate,\n  relatedCards\n}) {\n  _s();\n  // 3D Globe rotation system - now supports free camera rotation\n  const [cameraRotation, setCameraRotation] = useState({\n    x: -10,\n    y: 0\n  }); // Camera rotation in degrees\n  const [dragStart, setDragStart] = useState({\n    x: 0,\n    y: 0\n  });\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragOffset, setDragOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const [isManualControl, setIsManualControl] = useState(false); // Track if user is manually controlling camera\n  const containerRef = useRef(null);\n  const globeRadius = 400; // Radius of the globe\n\n  // All cards exist as fixed objects arranged around a 3D globe's equator\n  const allCardsIn3D = relatedCards.map((cardData, index) => {\n    const totalCards = relatedCards.length;\n\n    // Calculate position around the equator (Y = 0 for equator)\n    const angle = index / totalCards * 2 * Math.PI; // Evenly space cards around circle\n    const x = Math.cos(angle) * globeRadius; // X position on circle\n    const y = 0; // All cards on equator (Y = 0)\n    const z = Math.sin(angle) * globeRadius; // Z position on circle\n\n    // Calculate rotation to face center of globe\n    const rotationY = angle * 180 / Math.PI + 180; // Face inward toward center\n\n    return {\n      ...cardData,\n      absoluteIndex: index,\n      positionInSpace: index,\n      x3d: x,\n      y3d: y,\n      z3d: z,\n      angle: angle,\n      rotationY: rotationY // Store rotation for facing center\n    };\n  });\n\n  // Function to rotate to focus on a specific card\n  const focusOnCard = useCallback(targetCard => {\n    // Only auto-focus if user is not manually controlling the camera\n    if (isManualControl) return;\n\n    // Calculate camera rotation to face the target card\n    const targetAngle = targetCard.angle * 180 / Math.PI;\n    setCameraRotation(prev => ({\n      ...prev,\n      y: -targetAngle // Rotate camera to face the card\n    }));\n  }, [isManualControl]);\n\n  // Initialize camera to focus on clicked card (only on first load)\n  useEffect(() => {\n    const targetCard = allCardsIn3D.find(c => c.id === card.id);\n    if (targetCard && !isManualControl) {\n      focusOnCard(targetCard);\n    }\n  }, [card.id, focusOnCard, allCardsIn3D, isManualControl]);\n  useEffect(() => {\n    const keyHandler = e => {\n      if (e.key === 'Escape') onClose();\n      if (e.key === 'ArrowLeft' || e.key === 'ArrowRight') {\n        // Reset manual control when using arrow keys for navigation\n        setIsManualControl(false);\n\n        // Find current focused card and move to next/previous\n        const currentIndex = allCardsIn3D.findIndex(c => c.id === card.id);\n        const totalCards = allCardsIn3D.length;\n        let nextIndex;\n        if (e.key === 'ArrowRight') {\n          nextIndex = (currentIndex + 1) % totalCards;\n        } else {\n          nextIndex = (currentIndex - 1 + totalCards) % totalCards;\n        }\n        const nextCard = allCardsIn3D[nextIndex];\n        focusOnCard(nextCard);\n      }\n    };\n    document.addEventListener('keydown', keyHandler);\n    return () => document.removeEventListener('keydown', keyHandler);\n  }, [onClose, focusOnCard, allCardsIn3D, card.id]);\n\n  // Handle click outside to close\n  const handleBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  // Free camera rotation with mouse drag\n  const handleMouseDown = e => {\n    setIsDragging(true);\n    setIsManualControl(true); // Enable manual control when user starts dragging\n    setDragStart({\n      x: e.clientX,\n      y: e.clientY\n    });\n    setDragOffset({\n      x: 0,\n      y: 0\n    });\n  };\n  const handleMouseMove = e => {\n    if (!isDragging) return;\n    const deltaX = e.clientX - dragStart.x;\n    const deltaY = e.clientY - dragStart.y;\n\n    // Convert mouse movement to rotation with sensitivity\n    const sensitivity = 0.5;\n    const rotationDeltaX = deltaY * sensitivity; // Mouse Y controls camera X rotation (up/down)\n    const rotationDeltaY = deltaX * sensitivity; // Mouse X controls camera Y rotation (left/right)\n\n    setDragOffset({\n      x: rotationDeltaX,\n      y: rotationDeltaY\n    });\n  };\n  const handleMouseUp = () => {\n    if (!isDragging) return;\n\n    // Apply the drag offset to the camera rotation\n    setCameraRotation(prev => ({\n      x: Math.max(-90, Math.min(90, prev.x + dragOffset.x)),\n      // Limit vertical rotation\n      y: prev.y + dragOffset.y // Allow free horizontal rotation\n    }));\n    setIsDragging(false);\n    setDragOffset({\n      x: 0,\n      y: 0\n    });\n  };\n\n  // Touch events for mobile\n  const handleTouchStart = e => {\n    const touch = e.touches[0];\n    setIsDragging(true);\n    setIsManualControl(true); // Enable manual control when user starts dragging\n    setDragStart({\n      x: touch.clientX,\n      y: touch.clientY\n    });\n    setDragOffset({\n      x: 0,\n      y: 0\n    });\n  };\n  const handleTouchMove = e => {\n    if (!isDragging) return;\n    const touch = e.touches[0];\n    const deltaX = touch.clientX - dragStart.x;\n    const deltaY = touch.clientY - dragStart.y;\n    const sensitivity = 0.5;\n    const rotationDeltaX = deltaY * sensitivity;\n    const rotationDeltaY = deltaX * sensitivity;\n    setDragOffset({\n      x: rotationDeltaX,\n      y: rotationDeltaY\n    });\n  };\n  const handleTouchEnd = () => {\n    handleMouseUp();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 z-50 bg-black backdrop-blur-sm flex items-center justify-center\",\n    onClick: handleBackdropClick,\n    onMouseUp: handleMouseUp,\n    onMouseLeave: handleMouseUp,\n    style: {\n      perspective: '1200px',\n      // 3D perspective for the entire scene\n      perspectiveOrigin: 'center center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => {\n        e.stopPropagation();\n        onClose();\n      },\n      className: \"absolute top-8 right-8 z-60 w-12 h-12 rounded-full bg-white/10 backdrop-blur-md border border-white/20 flex items-center justify-center hover:bg-white/20 transition-all duration-300\",\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"w-6 h-6 text-white\",\n        fill: \"none\",\n        stroke: \"currentColor\",\n        viewBox: \"0 0 24 24\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\",\n          strokeWidth: 2,\n          d: \"M6 18L18 6M6 6l12 12\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      className: \"relative w-full h-full flex items-center justify-center cursor-grab active:cursor-grabbing\",\n      onMouseDown: handleMouseDown,\n      onMouseMove: handleMouseMove,\n      onTouchStart: handleTouchStart,\n      onTouchMove: handleTouchMove,\n      onTouchEnd: handleTouchEnd,\n      style: {\n        transform: `\n            rotateX(${cameraRotation.x + dragOffset.x}deg)\n            rotateY(${cameraRotation.y + dragOffset.y}deg)\n          `,\n        transition: isDragging ? 'none' : 'transform 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94)',\n        transformStyle: 'preserve-3d'\n      },\n      children: [allCardsIn3D.map(cardData => {\n        // Use pre-calculated globe positions\n        const x = cardData.x3d;\n        const y = cardData.y3d;\n        const z = cardData.z3d;\n\n        // Check if this is the default/clicked card (should be facing viewer)\n        const isDefaultCard = cardData.id === card.id;\n\n        // Calculate distance from viewer (positive Z = closer to viewer after camera rotation)\n        const distanceFromViewer = globeRadius - z;\n\n        // Enhanced perspective scaling - dramatic difference between front and back\n        let scale;\n        if (z > globeRadius * 0.5) {\n          // Front cards (z > 200)\n          // Front cards (very close to viewer) - large and prominent\n          scale = Math.max(1.0, 1.2 - (globeRadius - z) / globeRadius);\n        } else if (z > 0) {\n          // Front-side cards - medium size\n          scale = Math.max(0.7, 1.0 - (globeRadius - z) / (globeRadius + 100));\n        } else if (z > -globeRadius * 0.5) {\n          // Back-side cards (z > -200)\n          // Back-side cards - smaller\n          scale = Math.max(0.4, 0.7 - Math.abs(z) / (globeRadius + 100));\n        } else {\n          // Far back cards - very small\n          scale = Math.max(0.2, 0.4 - Math.abs(z + globeRadius * 0.5) / globeRadius);\n        }\n\n        // Enhanced opacity - cards at back fade significantly\n        let opacity;\n        if (z > globeRadius * 0.25) {\n          // Front cards (z > 100)\n          opacity = 1.0; // Front cards fully visible\n        } else if (z > -globeRadius * 0.25) {\n          // Side cards (z > -100)\n          opacity = Math.max(0.6, 1.0 - Math.abs(z) / (globeRadius * 0.5)); // Side cards fade slightly\n        } else {\n          opacity = Math.max(0.2, 0.6 - Math.abs(z + globeRadius * 0.25) / (globeRadius * 0.75)); // Back cards very faded\n        }\n\n        // Z-index for proper layering\n        const zIndex = Math.round(100 + z / (globeRadius / 100));\n\n        // Cards face toward the center of the globe\n        const rotationY = cardData.rotationY;\n        const rotationX = 0;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute transition-all duration-500 ease-out\",\n          style: {\n            transform: `\n                  translate3d(${x}px, ${y}px, ${z}px) \n                  scale(${scale}) \n                  rotateY(${rotationY}deg) \n                  rotateX(${rotationX}deg)\n                `,\n            opacity,\n            zIndex,\n            transformOrigin: 'center center',\n            transformStyle: 'preserve-3d'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `relative w-56 h-56 rounded-2xl overflow-hidden backdrop-blur-xl transition-all duration-500 ${isDefaultCard ? 'border-2 border-white/40 shadow-2xl shadow-white/20' // Default card gets special border and glow\n            : 'border border-white/20 shadow-xl shadow-black/40' // Other cards get standard styling\n            }`,\n            style: {\n              transformStyle: 'preserve-3d'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute inset-0\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: cardData.img,\n                alt: cardData.title,\n                className: \"w-full h-full object-cover\",\n                draggable: false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"absolute inset-0 bg-gradient-to-t from-black/80 via-black/20 to-transparent\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute inset-0 flex flex-col justify-end p-6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  className: `font-bold text-white mb-2 transition-all duration-500 ${isDefaultCard ? 'text-3xl drop-shadow-lg' : 'text-2xl'}`,\n                  children: cardData.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: `text-white/80 transition-all duration-500 ${isDefaultCard ? 'text-lg drop-shadow-md' : 'text-base'}`,\n                  children: cardData.subtitle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this)\n        }, cardData.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute -bottom-32 left-1/2 -translate-x-1/2 text-center z-60 pointer-events-none\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white/10 backdrop-blur-md rounded-2xl px-6 py-4 border border-white/20\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-white/60 text-sm mb-1\",\n            children: \"Featured Card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-white font-semibold text-lg mb-2\",\n            children: card.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-white/70 text-sm\",\n            children: \"Swipe to rotate \\u2022 Arrow keys to navigate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-8 left-8 bg-white/10 backdrop-blur-md rounded-xl px-6 py-3 border border-white/20 pointer-events-none\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-white/80 text-base\",\n        children: [relatedCards.length, \" Cards on Globe\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n}\n_s(CardDetail, \"xWsrbox5ajNjii3kL+X8DuWDfJI=\");\n_c = CardDetail;\nvar _c;\n$RefreshReg$(_c, \"CardDetail\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","jsxDEV","_jsxDEV","CardDetail","card","onClose","onNavigate","relatedCards","_s","cameraRotation","setCameraRotation","x","y","dragStart","setDragStart","isDragging","setIsDragging","dragOffset","setDragOffset","isManualControl","setIsManualControl","containerRef","globeRadius","allCardsIn3D","map","cardData","index","totalCards","length","angle","Math","PI","cos","z","sin","rotationY","absoluteIndex","positionInSpace","x3d","y3d","z3d","focusOnCard","targetCard","targetAngle","prev","find","c","id","keyHandler","e","key","currentIndex","findIndex","nextIndex","nextCard","document","addEventListener","removeEventListener","handleBackdropClick","target","currentTarget","handleMouseDown","clientX","clientY","handleMouseMove","deltaX","deltaY","sensitivity","rotationDeltaX","rotationDeltaY","handleMouseUp","max","min","handleTouchStart","touch","touches","handleTouchMove","handleTouchEnd","className","onClick","onMouseUp","onMouseLeave","style","perspective","perspectiveOrigin","children","stopPropagation","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","fileName","_jsxFileName","lineNumber","columnNumber","ref","onMouseDown","onMouseMove","onTouchStart","onTouchMove","onTouchEnd","transform","transition","transformStyle","isDefaultCard","distanceFromViewer","scale","abs","opacity","zIndex","round","rotationX","transformOrigin","src","img","alt","title","draggable","subtitle","_c","$RefreshReg$"],"sources":["C:/Users/mrluf/Desktop/deck cards/src/components/CardDetail.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\n\r\ninterface CardData {\r\n  id: string;\r\n  img: string;\r\n  title: string;\r\n  subtitle: string;\r\n  category?: string;\r\n}\r\n\r\ninterface CardDetailProps {\r\n  card: CardData;\r\n  onClose: () => void;\r\n  onNavigate: (direction: 'left' | 'right') => void;\r\n  relatedCards: CardData[];\r\n}\r\n\r\nexport default function CardDetail({ card, onClose, onNavigate, relatedCards }: CardDetailProps) {\r\n  // 3D Globe rotation system - now supports free camera rotation\r\n  const [cameraRotation, setCameraRotation] = useState({ x: -10, y: 0 }); // Camera rotation in degrees\r\n  const [dragStart, setDragStart] = useState({ x: 0, y: 0 });\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });\r\n  const [isManualControl, setIsManualControl] = useState(false); // Track if user is manually controlling camera\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n\r\n  const globeRadius = 400; // Radius of the globe\r\n\r\n  // All cards exist as fixed objects arranged around a 3D globe's equator\r\n  const allCardsIn3D = relatedCards.map((cardData, index) => {\r\n    const totalCards = relatedCards.length;\r\n    \r\n    // Calculate position around the equator (Y = 0 for equator)\r\n    const angle = (index / totalCards) * 2 * Math.PI; // Evenly space cards around circle\r\n    const x = Math.cos(angle) * globeRadius; // X position on circle\r\n    const y = 0; // All cards on equator (Y = 0)\r\n    const z = Math.sin(angle) * globeRadius; // Z position on circle\r\n    \r\n    // Calculate rotation to face center of globe\r\n    const rotationY = (angle * 180 / Math.PI) + 180; // Face inward toward center\r\n    \r\n    return {\r\n      ...cardData,\r\n      absoluteIndex: index,\r\n      positionInSpace: index,\r\n      x3d: x,\r\n      y3d: y,\r\n      z3d: z,\r\n      angle: angle,\r\n      rotationY: rotationY // Store rotation for facing center\r\n    };\r\n  });\r\n\r\n  // Function to rotate to focus on a specific card\r\n  const focusOnCard = useCallback((targetCard: any) => {\r\n    // Only auto-focus if user is not manually controlling the camera\r\n    if (isManualControl) return;\r\n    \r\n    // Calculate camera rotation to face the target card\r\n    const targetAngle = targetCard.angle * 180 / Math.PI;\r\n    setCameraRotation(prev => ({\r\n      ...prev,\r\n      y: -targetAngle // Rotate camera to face the card\r\n    }));\r\n  }, [isManualControl]);\r\n\r\n  // Initialize camera to focus on clicked card (only on first load)\r\n  useEffect(() => {\r\n    const targetCard = allCardsIn3D.find(c => c.id === card.id);\r\n    if (targetCard && !isManualControl) {\r\n      focusOnCard(targetCard);\r\n    }\r\n  }, [card.id, focusOnCard, allCardsIn3D, isManualControl]);\r\n\r\n  useEffect(() => {\r\n    const keyHandler = (e: KeyboardEvent) => {\r\n      if (e.key === 'Escape') onClose();\r\n      if (e.key === 'ArrowLeft' || e.key === 'ArrowRight') {\r\n        // Reset manual control when using arrow keys for navigation\r\n        setIsManualControl(false);\r\n        \r\n        // Find current focused card and move to next/previous\r\n        const currentIndex = allCardsIn3D.findIndex(c => c.id === card.id);\r\n        const totalCards = allCardsIn3D.length;\r\n        \r\n        let nextIndex;\r\n        if (e.key === 'ArrowRight') {\r\n          nextIndex = (currentIndex + 1) % totalCards;\r\n        } else {\r\n          nextIndex = (currentIndex - 1 + totalCards) % totalCards;\r\n        }\r\n        \r\n        const nextCard = allCardsIn3D[nextIndex];\r\n        focusOnCard(nextCard);\r\n      }\r\n    };\r\n    \r\n    document.addEventListener('keydown', keyHandler);\r\n    return () => document.removeEventListener('keydown', keyHandler);\r\n  }, [onClose, focusOnCard, allCardsIn3D, card.id]);\r\n\r\n  // Handle click outside to close\r\n  const handleBackdropClick = (e: React.MouseEvent) => {\r\n    if (e.target === e.currentTarget) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  // Free camera rotation with mouse drag\r\n  const handleMouseDown = (e: React.MouseEvent) => {\r\n    setIsDragging(true);\r\n    setIsManualControl(true); // Enable manual control when user starts dragging\r\n    setDragStart({ x: e.clientX, y: e.clientY });\r\n    setDragOffset({ x: 0, y: 0 });\r\n  };\r\n\r\n  const handleMouseMove = (e: React.MouseEvent) => {\r\n    if (!isDragging) return;\r\n    \r\n    const deltaX = e.clientX - dragStart.x;\r\n    const deltaY = e.clientY - dragStart.y;\r\n    \r\n    // Convert mouse movement to rotation with sensitivity\r\n    const sensitivity = 0.5;\r\n    const rotationDeltaX = deltaY * sensitivity; // Mouse Y controls camera X rotation (up/down)\r\n    const rotationDeltaY = deltaX * sensitivity; // Mouse X controls camera Y rotation (left/right)\r\n    \r\n    setDragOffset({ x: rotationDeltaX, y: rotationDeltaY });\r\n  };\r\n\r\n  const handleMouseUp = () => {\r\n    if (!isDragging) return;\r\n    \r\n    // Apply the drag offset to the camera rotation\r\n    setCameraRotation(prev => ({\r\n      x: Math.max(-90, Math.min(90, prev.x + dragOffset.x)), // Limit vertical rotation\r\n      y: prev.y + dragOffset.y // Allow free horizontal rotation\r\n    }));\r\n    \r\n    setIsDragging(false);\r\n    setDragOffset({ x: 0, y: 0 });\r\n  };\r\n\r\n  // Touch events for mobile\r\n  const handleTouchStart = (e: React.TouchEvent) => {\r\n    const touch = e.touches[0];\r\n    setIsDragging(true);\r\n    setIsManualControl(true); // Enable manual control when user starts dragging\r\n    setDragStart({ x: touch.clientX, y: touch.clientY });\r\n    setDragOffset({ x: 0, y: 0 });\r\n  };\r\n\r\n  const handleTouchMove = (e: React.TouchEvent) => {\r\n    if (!isDragging) return;\r\n    const touch = e.touches[0];\r\n    \r\n    const deltaX = touch.clientX - dragStart.x;\r\n    const deltaY = touch.clientY - dragStart.y;\r\n    \r\n    const sensitivity = 0.5;\r\n    const rotationDeltaX = deltaY * sensitivity;\r\n    const rotationDeltaY = deltaX * sensitivity;\r\n    \r\n    setDragOffset({ x: rotationDeltaX, y: rotationDeltaY });\r\n  };\r\n\r\n  const handleTouchEnd = () => {\r\n    handleMouseUp();\r\n  };\r\n\r\n  return (\r\n    <div \r\n      className=\"fixed inset-0 z-50 bg-black backdrop-blur-sm flex items-center justify-center\"\r\n      onClick={handleBackdropClick}\r\n      onMouseUp={handleMouseUp}\r\n      onMouseLeave={handleMouseUp}\r\n      style={{\r\n        perspective: '1200px', // 3D perspective for the entire scene\r\n        perspectiveOrigin: 'center center'\r\n      }}\r\n    >\r\n      {/* Close button */}\r\n      <button\r\n        onClick={(e) => {\r\n          e.stopPropagation();\r\n          onClose();\r\n        }}\r\n        className=\"absolute top-8 right-8 z-60 w-12 h-12 rounded-full bg-white/10 backdrop-blur-md border border-white/20 flex items-center justify-center hover:bg-white/20 transition-all duration-300\"\r\n      >\r\n        <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n        </svg>\r\n      </button>\r\n\r\n      {/* 3D Globe centered in screen with free camera rotation */}\r\n      <div \r\n        ref={containerRef}\r\n        className=\"relative w-full h-full flex items-center justify-center cursor-grab active:cursor-grabbing\"\r\n        onMouseDown={handleMouseDown}\r\n        onMouseMove={handleMouseMove}\r\n        onTouchStart={handleTouchStart}\r\n        onTouchMove={handleTouchMove}\r\n        onTouchEnd={handleTouchEnd}\r\n        style={{\r\n          transform: `\r\n            rotateX(${cameraRotation.x + dragOffset.x}deg)\r\n            rotateY(${cameraRotation.y + dragOffset.y}deg)\r\n          `,\r\n          transition: isDragging ? 'none' : 'transform 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94)',\r\n          transformStyle: 'preserve-3d'\r\n        }}\r\n      >\r\n        {/* Globe wireframe and equator - hidden from user view (internal reference only) */}\r\n\r\n        {allCardsIn3D.map((cardData) => {\r\n          // Use pre-calculated globe positions\r\n          const x = cardData.x3d;\r\n          const y = cardData.y3d;\r\n          const z = cardData.z3d;\r\n          \r\n          // Check if this is the default/clicked card (should be facing viewer)\r\n          const isDefaultCard = cardData.id === card.id;\r\n          \r\n          // Calculate distance from viewer (positive Z = closer to viewer after camera rotation)\r\n          const distanceFromViewer = globeRadius - z;\r\n          \r\n          // Enhanced perspective scaling - dramatic difference between front and back\r\n          let scale;\r\n          if (z > globeRadius * 0.5) { // Front cards (z > 200)\r\n            // Front cards (very close to viewer) - large and prominent\r\n            scale = Math.max(1.0, 1.2 - (globeRadius - z) / globeRadius);\r\n          } else if (z > 0) {\r\n            // Front-side cards - medium size\r\n            scale = Math.max(0.7, 1.0 - (globeRadius - z) / (globeRadius + 100));\r\n          } else if (z > -globeRadius * 0.5) { // Back-side cards (z > -200)\r\n            // Back-side cards - smaller\r\n            scale = Math.max(0.4, 0.7 - Math.abs(z) / (globeRadius + 100));\r\n          } else {\r\n            // Far back cards - very small\r\n            scale = Math.max(0.2, 0.4 - Math.abs(z + globeRadius * 0.5) / globeRadius);\r\n          }\r\n          \r\n          // Enhanced opacity - cards at back fade significantly\r\n          let opacity;\r\n          if (z > globeRadius * 0.25) { // Front cards (z > 100)\r\n            opacity = 1.0; // Front cards fully visible\r\n          } else if (z > -globeRadius * 0.25) { // Side cards (z > -100)\r\n            opacity = Math.max(0.6, 1.0 - Math.abs(z) / (globeRadius * 0.5)); // Side cards fade slightly\r\n          } else {\r\n            opacity = Math.max(0.2, 0.6 - Math.abs(z + globeRadius * 0.25) / (globeRadius * 0.75)); // Back cards very faded\r\n          }\r\n          \r\n          // Z-index for proper layering\r\n          const zIndex = Math.round(100 + z / (globeRadius / 100));\r\n          \r\n          // Cards face toward the center of the globe\r\n          const rotationY = cardData.rotationY;\r\n          const rotationX = 0;\r\n          \r\n          return (\r\n            <div\r\n              key={cardData.id}\r\n              className=\"absolute transition-all duration-500 ease-out\"\r\n              style={{\r\n                transform: `\r\n                  translate3d(${x}px, ${y}px, ${z}px) \r\n                  scale(${scale}) \r\n                  rotateY(${rotationY}deg) \r\n                  rotateX(${rotationX}deg)\r\n                `,\r\n                opacity,\r\n                zIndex,\r\n                transformOrigin: 'center center',\r\n                transformStyle: 'preserve-3d'\r\n              }}\r\n            >\r\n              {/* Card with enhanced styling for default card */}\r\n              <div \r\n                className={`relative w-56 h-56 rounded-2xl overflow-hidden backdrop-blur-xl transition-all duration-500 ${\r\n                  isDefaultCard \r\n                    ? 'border-2 border-white/40 shadow-2xl shadow-white/20' // Default card gets special border and glow\r\n                    : 'border border-white/20 shadow-xl shadow-black/40'     // Other cards get standard styling\r\n                }`}\r\n                style={{\r\n                  transformStyle: 'preserve-3d'\r\n                }}\r\n              >\r\n                {/* Background image */}\r\n                <div className=\"absolute inset-0\">\r\n                  <img\r\n                    src={cardData.img}\r\n                    alt={cardData.title}\r\n                    className=\"w-full h-full object-cover\"\r\n                    draggable={false}\r\n                  />\r\n                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/80 via-black/20 to-transparent\" />\r\n                </div>\r\n\r\n                {/* Content overlay with enhanced styling for default card */}\r\n                <div className=\"absolute inset-0 flex flex-col justify-end p-6\">\r\n                  <div className=\"text-center\">\r\n                    <h2 className={`font-bold text-white mb-2 transition-all duration-500 ${\r\n                      isDefaultCard ? 'text-3xl drop-shadow-lg' : 'text-2xl'\r\n                    }`}>\r\n                      {cardData.title}\r\n                    </h2>\r\n                    <p className={`text-white/80 transition-all duration-500 ${\r\n                      isDefaultCard ? 'text-lg drop-shadow-md' : 'text-base'\r\n                    }`}>\r\n                      {cardData.subtitle}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n\r\n        {/* Current card info */}\r\n        <div className=\"absolute -bottom-32 left-1/2 -translate-x-1/2 text-center z-60 pointer-events-none\">\r\n          <div className=\"bg-white/10 backdrop-blur-md rounded-2xl px-6 py-4 border border-white/20\">\r\n            <p className=\"text-white/60 text-sm mb-1\">Featured Card</p>\r\n            <p className=\"text-white font-semibold text-lg mb-2\">\r\n              {card.title}\r\n            </p>\r\n            <p className=\"text-white/70 text-sm\">\r\n              Swipe to rotate • Arrow keys to navigate\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Card counter */}\r\n      <div className=\"absolute top-8 left-8 bg-white/10 backdrop-blur-md rounded-xl px-6 py-3 border border-white/20 pointer-events-none\">\r\n        <p className=\"text-white/80 text-base\">\r\n          {relatedCards.length} Cards on Globe\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}