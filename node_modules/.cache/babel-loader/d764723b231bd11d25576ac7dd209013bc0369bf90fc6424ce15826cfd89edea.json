{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrluf\\\\Desktop\\\\deck cards\\\\src\\\\components\\\\CardDetail.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CardDetail({\n  card,\n  onClose,\n  onNavigate,\n  relatedCards\n}) {\n  _s();\n  // 3D Globe rotation system - now supports free camera rotation\n  const [cameraRotation, setCameraRotation] = useState({\n    x: 0,\n    y: 0\n  }); // Camera rotation in degrees - perfectly level\n  const [dragStart, setDragStart] = useState({\n    x: 0,\n    y: 0\n  });\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragOffset, setDragOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const [isManualControl, setIsManualControl] = useState(false); // Track if user is manually controlling camera\n  const [hasDraggedSignificantly, setHasDraggedSignificantly] = useState(false); // Track if user has actually dragged\n  const [totalDragDistance, setTotalDragDistance] = useState(0); // Track total drag distance\n  const [selectedCardDetail, setSelectedCardDetail] = useState(null); // Track clicked card for detail view\n  const [videoLoaded, setVideoLoaded] = useState(false); // Track if background video has loaded\n\n  // Center card rotation animation state - REMOVED to prevent spinning issues\n  const containerRef = useRef(null);\n  const globeRadius = 450; // Radius of the globe - balanced spacing\n\n  // All cards exist as fixed objects arranged around a 3D globe's equator\n  const allCardsIn3D = relatedCards.map((cardData, index) => {\n    const totalCards = relatedCards.length;\n\n    // Calculate position around the equator (Y = 0 for equator)\n    const angle = index / totalCards * 2 * Math.PI; // Evenly space cards around circle\n    const x = Math.cos(angle) * globeRadius; // X position on circle\n    const y = 0; // All cards on equator (Y = 0)\n    const z = Math.sin(angle) * globeRadius; // Z position on circle\n\n    // Calculate rotation to face OUTWARD toward user (front-facing)\n    // Use atan2 to calculate rotation to face away from center (toward user)\n    const rotationY = Math.atan2(x, z) * 180 / Math.PI; // Face outward toward user\n\n    return {\n      ...cardData,\n      absoluteIndex: index,\n      positionInSpace: index,\n      x3d: x,\n      y3d: y,\n      z3d: z,\n      angle: angle,\n      rotationY: rotationY // Store rotation for facing center\n    };\n  });\n\n  // Function to rotate to focus on a specific card\n  const focusOnCard = useCallback(targetCard => {\n    // Only auto-focus if user is not manually controlling the camera\n    if (isManualControl) return;\n\n    // Calculate camera rotation to face the target card\n    const targetAngle = targetCard.angle * 180 / Math.PI;\n    setCameraRotation(prev => ({\n      ...prev,\n      y: -targetAngle // Rotate camera to face the card\n    }));\n  }, [isManualControl]);\n\n  // Initialize camera to focus on clicked card (only on first load)\n  useEffect(() => {\n    const targetCard = allCardsIn3D.find(c => c.id === card.id);\n    if (targetCard && !isManualControl) {\n      focusOnCard(targetCard);\n    }\n  }, [card.id, focusOnCard, allCardsIn3D, isManualControl]);\n\n  // Auto-open card detail view when coming from collection view\n  useEffect(() => {\n    // Automatically open the detail view for the clicked card\n    setSelectedCardDetail(card);\n  }, [card]);\n\n  // Force video to play when component mounts\n  useEffect(() => {\n    const video = document.querySelector('video[key=\"carddetail-bg-video\"]');\n    if (video) {\n      video.load();\n      video.play().catch(e => console.log('Video autoplay failed:', e));\n    }\n  }, []);\n  useEffect(() => {\n    const keyHandler = e => {\n      if (e.key === 'Escape') onClose();\n      if (e.key === 'ArrowLeft' || e.key === 'ArrowRight') {\n        // Reset manual control when using arrow keys for navigation\n        setIsManualControl(false);\n\n        // Find current focused card and move to next/previous\n        const currentIndex = allCardsIn3D.findIndex(c => c.id === card.id);\n        const totalCards = allCardsIn3D.length;\n        let nextIndex;\n        if (e.key === 'ArrowRight') {\n          nextIndex = (currentIndex + 1) % totalCards;\n        } else {\n          nextIndex = (currentIndex - 1 + totalCards) % totalCards;\n        }\n        const nextCard = allCardsIn3D[nextIndex];\n        focusOnCard(nextCard);\n      }\n    };\n    document.addEventListener('keydown', keyHandler);\n    return () => document.removeEventListener('keydown', keyHandler);\n  }, [onClose, focusOnCard, allCardsIn3D, card.id]);\n\n  // Handle click outside to close - RE-ENABLED for card detail view\n  const handleBackdropClick = e => {\n    if (selectedCardDetail) {\n      setSelectedCardDetail(null); // Close card detail view\n    }\n    // Globe view click-to-close remains disabled\n  };\n\n  // Handle detail card content click to prevent closing\n  const handleDetailContentClick = e => {\n    e.stopPropagation();\n  };\n\n  // Handle card click to show detailed backside view\n  const handleCardClick = (cardData, e) => {\n    e.stopPropagation();\n    // Don't open detail if currently dragging OR if user has recently dragged significantly\n    if (isDragging || hasDraggedSignificantly) return;\n    setSelectedCardDetail(cardData);\n  };\n\n  // Auto-rotation for background cards when detail view is open\n  const [autoRotationAngle, setAutoRotationAngle] = useState(0);\n  useEffect(() => {\n    if (!selectedCardDetail) return;\n    const interval = setInterval(() => {\n      setAutoRotationAngle(prev => prev + 0.5); // Slower constant speed rotation (50% of original)\n    }, 16); // 60fps for smooth rotation\n\n    return () => clearInterval(interval);\n  }, [selectedCardDetail]);\n\n  // Reset auto-rotation when exiting detail view to prevent sharp transitions\n  useEffect(() => {\n    if (!selectedCardDetail) {\n      setAutoRotationAngle(0); // Reset to 0 when detail view closes\n    }\n  }, [selectedCardDetail]);\n\n  // Free camera rotation with mouse drag\n  const handleMouseDown = e => {\n    setIsDragging(true);\n    setIsManualControl(true); // Enable manual control when user starts dragging\n    setDragStart({\n      x: e.clientX,\n      y: e.clientY\n    });\n    setDragOffset({\n      x: 0,\n      y: 0\n    });\n    // Reset drag tracking\n    setHasDraggedSignificantly(false);\n    setTotalDragDistance(0);\n  };\n  const handleMouseMove = e => {\n    if (!isDragging) return;\n    const deltaX = e.clientX - dragStart.x;\n    const deltaY = e.clientY - dragStart.y; // Track Y movement for distance calculation\n\n    // Calculate total drag distance to determine if this is a significant drag\n    const dragDistance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    setTotalDragDistance(dragDistance);\n\n    // Mark as significant drag if moved more than 10 pixels\n    if (dragDistance > 10) {\n      setHasDraggedSignificantly(true);\n    }\n\n    // Convert mouse movement to rotation with sensitivity - only horizontal rotation\n    const sensitivity = 0.5;\n    // const rotationDeltaX = deltaY * sensitivity; // Disabled vertical rotation\n    const rotationDeltaY = deltaX * sensitivity; // Mouse X controls camera Y rotation (left/right around equator)\n\n    setDragOffset({\n      x: 0,\n      y: rotationDeltaY\n    }); // Only allow Y rotation\n  };\n  const handleMouseUp = () => {\n    if (!isDragging) return;\n\n    // Apply the drag offset to the camera rotation - only horizontal\n    setCameraRotation(prev => ({\n      x: prev.x,\n      // Keep vertical rotation fixed\n      y: prev.y + dragOffset.y // Allow free horizontal rotation around equator\n    }));\n    setIsDragging(false);\n    setDragOffset({\n      x: 0,\n      y: 0\n    });\n\n    // Add a delay before clearing drag protection to prevent accidental clicks\n    // Only clear if this was a significant drag\n    if (hasDraggedSignificantly) {\n      setTimeout(() => {\n        setHasDraggedSignificantly(false);\n      }, 400); // 400ms delay to prevent accidental clicks after drag\n    }\n  };\n\n  // Touch events for mobile\n  const handleTouchStart = e => {\n    const touch = e.touches[0];\n    setIsDragging(true);\n    setIsManualControl(true); // Enable manual control when user starts dragging\n    setDragStart({\n      x: touch.clientX,\n      y: touch.clientY\n    });\n    setDragOffset({\n      x: 0,\n      y: 0\n    });\n    // Reset drag tracking\n    setHasDraggedSignificantly(false);\n    setTotalDragDistance(0);\n  };\n  const handleTouchMove = e => {\n    if (!isDragging) return;\n    const touch = e.touches[0];\n    const deltaX = touch.clientX - dragStart.x;\n    const deltaY = touch.clientY - dragStart.y; // Track Y movement for distance calculation\n\n    // Calculate total drag distance to determine if this is a significant drag\n    const dragDistance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    setTotalDragDistance(dragDistance);\n\n    // Mark as significant drag if moved more than 10 pixels\n    if (dragDistance > 10) {\n      setHasDraggedSignificantly(true);\n    }\n    const sensitivity = 0.5;\n    // const rotationDeltaX = deltaY * sensitivity; // Disabled vertical rotation\n    const rotationDeltaY = deltaX * sensitivity; // Only horizontal rotation around equator\n\n    setDragOffset({\n      x: 0,\n      y: rotationDeltaY\n    }); // Only allow Y rotation\n  };\n  const handleTouchEnd = () => {\n    handleMouseUp();\n  };\n\n  // Center card rotation animation effect - REMOVED to prevent spinning issues\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 z-50\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute inset-0 z-0\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        // Force re-render when component mounts\n        className: \"absolute inset-0 w-full h-full object-cover pointer-events-none\",\n        autoPlay: true,\n        loop: true,\n        muted: true,\n        playsInline: true,\n        preload: \"metadata\",\n        onLoadStart: () => {\n          console.log('CardDetail video loading started');\n          setVideoLoaded(false);\n        },\n        onLoadedData: () => {\n          console.log('CardDetail video loaded successfully');\n          setVideoLoaded(true);\n        },\n        onCanPlayThrough: () => {\n          console.log('CardDetail video can play through');\n          setVideoLoaded(true);\n        },\n        onError: e => {\n          console.error('CardDetail video error:', e);\n          setVideoLoaded(false);\n        },\n        style: {\n          backgroundColor: '#87CEEB',\n          // Fallback color while loading\n          zIndex: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(\"source\", {\n          src: \"/assets/Cloud1.mp4\",\n          type: \"video/mp4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this)\n      }, \"carddetail-bg-video\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute inset-0 pointer-events-none bg-gradient-to-br from-sky-400 via-blue-500 to-blue-600\",\n        style: {\n          opacity: videoLoaded ? 0 : 1,\n          transition: 'opacity 0.5s ease-in-out',\n          zIndex: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute inset-0 opacity-30\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full h-full\",\n            style: {\n              backgroundImage: `\n                radial-gradient(ellipse 120px 80px at 15% 20%, rgba(255, 255, 255, 0.8) 40%, transparent 50%),\n                radial-gradient(ellipse 100px 60px at 25% 60%, rgba(255, 255, 255, 0.6) 40%, transparent 50%),\n                radial-gradient(ellipse 140px 90px at 35% 30%, rgba(255, 255, 255, 0.7) 40%, transparent 50%),\n                radial-gradient(ellipse 90px 70px at 45% 80%, rgba(255, 255, 255, 0.5) 40%, transparent 50%)\n              `,\n              animation: 'cloudDrift 60s linear infinite'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute inset-0 z-10 flex items-center justify-center\",\n      onClick: handleBackdropClick,\n      onMouseUp: handleMouseUp,\n      onMouseLeave: handleMouseUp,\n      style: {\n        perspective: '1200px',\n        // 3D perspective for the entire scene\n        perspectiveOrigin: 'center center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => {\n          e.stopPropagation();\n          onClose();\n        },\n        className: \"absolute top-8 right-8 z-60 w-12 h-12 rounded-full bg-white/10 backdrop-blur-md border border-white/20 flex items-center justify-center hover:bg-white/20 transition-all duration-300\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"w-6 h-6 text-white\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M6 18L18 6M6 6l12 12\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: containerRef,\n        className: \"relative w-full h-full flex items-center justify-center cursor-grab active:cursor-grabbing\",\n        onMouseDown: handleMouseDown,\n        onMouseMove: handleMouseMove,\n        onTouchStart: handleTouchStart,\n        onTouchMove: handleTouchMove,\n        onTouchEnd: handleTouchEnd,\n        style: {\n          transform: `\n            rotateX(${cameraRotation.x + dragOffset.x}deg)\n            rotateY(${cameraRotation.y + dragOffset.y + (selectedCardDetail ? autoRotationAngle : 0)}deg)\n          `,\n          transition: isDragging ? 'none' : 'transform 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94)',\n          transformStyle: 'preserve-3d'\n        },\n        children: (() => {\n          // Calculate current camera rotation \n          const currentCameraY = cameraRotation.y + dragOffset.y + (selectedCardDetail ? autoRotationAngle : 0);\n\n          // Apply camera rotation to all cards and find the one with highest z value\n          let centerCardId = null;\n          let maxRotatedZ = -Infinity;\n          allCardsIn3D.forEach(card => {\n            // Convert camera rotation to radians (negative because we're rotating the view, not the world)\n            const cameraRadians = -currentCameraY * Math.PI / 180;\n\n            // Apply rotation matrix to get card position relative to current camera view\n            const rotatedX = card.x3d * Math.cos(cameraRadians) - card.z3d * Math.sin(cameraRadians);\n            const rotatedZ = card.x3d * Math.sin(cameraRadians) + card.z3d * Math.cos(cameraRadians);\n\n            // Find the card with highest z value after rotation (closest to user in current view)\n            if (rotatedZ > maxRotatedZ) {\n              maxRotatedZ = rotatedZ;\n              centerCardId = card.id;\n            }\n          });\n          return allCardsIn3D.map(cardData => {\n            // Hide the selected card when detail view is open\n            if (selectedCardDetail && cardData.id === selectedCardDetail.id) {\n              return null;\n            }\n\n            // Use pre-calculated globe positions\n            const x = cardData.x3d;\n            const y = cardData.y3d;\n            const z = cardData.z3d;\n\n            // Check if this is the default/clicked card (should be facing viewer)\n            const isDefaultCard = cardData.id === card.id;\n\n            // Calculate how close this card is to the center of the user's screen\n            // The user is looking straight ahead at the center of the screen\n            const currentCameraY = cameraRotation.y + dragOffset.y + (selectedCardDetail ? autoRotationAngle : 0);\n            const cardAngleInDegrees = cardData.angle * 180 / Math.PI;\n\n            // Normalize currentCameraY to 0-360 range for accurate card positioning calculations\n            // This ensures infinite rotation works properly without breaking visibility calculations\n            let normalizedCameraY = currentCameraY % 360;\n            if (normalizedCameraY < 0) normalizedCameraY += 360;\n\n            // Adjust center reference point clockwise by adding offset\n            const centerOffset = 60; // Adjust clockwise by 60 degrees\n            const adjustedCameraY = normalizedCameraY + centerOffset;\n\n            // Calculate the angular distance from the center of the user's view\n            // Cards at the center of screen should have angle difference of 0\n            let angleDifferenceFromCenter = cardAngleInDegrees - adjustedCameraY;\n\n            // Normalize to -180 to +180 range\n            while (angleDifferenceFromCenter > 180) angleDifferenceFromCenter -= 360;\n            while (angleDifferenceFromCenter < -180) angleDifferenceFromCenter += 360;\n\n            // Calculate distance factor: 0 = center of screen (max scale), 180 = opposite side (min scale)\n            const distanceFromCenter = Math.abs(angleDifferenceFromCenter);\n\n            // Convert to a scale factor: closer to center = larger scale\n            const centerProximity = 1 - distanceFromCenter / 180; // 1 = center, 0 = opposite side\n\n            // Dynamic scaling based on proximity to screen center\n            let scale;\n            if (centerProximity > 0.9) {\n              // Very center cards\n              scale = 1.2 + (centerProximity - 0.9) * 2; // Scale 1.2 to 1.4 for center cards\n            } else if (centerProximity > 0.7) {\n              // Near center cards\n              scale = 0.9 + (centerProximity - 0.7) * 1.5; // Scale 0.9 to 1.2\n            } else if (centerProximity > 0.5) {\n              // Side cards\n              scale = 0.6 + (centerProximity - 0.5) * 1.5; // Scale 0.6 to 0.9\n            } else if (centerProximity > 0.3) {\n              // Far side cards\n              scale = 0.4 + (centerProximity - 0.3) * 1; // Scale 0.4 to 0.6\n            } else {\n              // Very far/back cards\n              scale = 0.2 + centerProximity * 0.67; // Scale 0.2 to 0.4\n            }\n\n            // Dynamic opacity based on proximity to screen center\n            let opacity;\n            if (centerProximity > 0.8) {\n              // Center cards\n              opacity = 1.0; // Fully visible\n            } else if (centerProximity > 0.5) {\n              // Side cards\n              opacity = 0.7 + (centerProximity - 0.5) * 1; // Opacity 0.7 to 1.0\n            } else if (centerProximity > 0.2) {\n              // Far cards\n              opacity = 0.4 + (centerProximity - 0.2) * 1; // Opacity 0.4 to 0.7\n            } else {\n              opacity = 0.2 + centerProximity * 1; // Opacity 0.2 to 0.4\n            }\n\n            // Z-index based on proximity to center (center cards should be on top)\n            let zIndex = Math.round(100 + centerProximity * 50);\n\n            // Dynamic center card detection: card with highest z value (closest to user)\n            const isCenterCard = cardData.id === centerCardId; // Only the specific card with maximum z value\n\n            // Center card detection - no animation to avoid spinning issues\n\n            // Add subtle pop effect for center card\n            let finalScale = scale;\n            if (isCenterCard) {\n              finalScale = scale * 1.25; // 25% size increase for center card pop effect\n            }\n\n            // Cards face toward the center of the globe, EXCEPT center card which faces the screen\n            let rotationY, rotationX;\n            if (isCenterCard) {\n              // Center card (highest z value) faces flat toward the screen (no tilt, no flip)\n              // Counter-rotate to cancel out the container rotation\n              rotationY = -currentCameraY; // Negative of container rotation to face screen flat\n              rotationX = 0;\n            } else {\n              // Normal cards face toward the center of the globe\n              rotationY = cardData.rotationY;\n              rotationX = 0;\n            }\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute\",\n              style: {\n                transform: `\n                  translate3d(${x}px, ${y}px, ${z}px) \n                  rotateY(${rotationY}deg) \n                  rotateX(${rotationX}deg)\n                `,\n                opacity: selectedCardDetail ? opacity * 0.5 : opacity,\n                // More fade when detail view is open\n                zIndex,\n                transformOrigin: 'center center',\n                transformStyle: 'preserve-3d'\n                // CSS transitions removed - now using JavaScript animation for smoother center card rotation\n              },\n              onClick: e => handleCardClick(cardData, e),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `relative w-52 h-52 rounded-2xl overflow-hidden backdrop-blur-xl cursor-pointer hover:scale-105 select-none ${isCenterCard ? 'border-4 border-yellow-400/80 shadow-2xl shadow-yellow-400/40' // Center card gets special golden border and glow\n                : isDefaultCard ? 'border-2 border-white/40 shadow-2xl shadow-white/20' // Default card gets special border and glow\n                : 'border border-white/20 shadow-xl shadow-black/40' // Other cards get standard styling\n                }`,\n                style: {\n                  transform: `scale(${finalScale})`,\n                  transformOrigin: 'center center',\n                  transformStyle: 'preserve-3d',\n                  userSelect: 'none'\n                  // CSS transitions removed - using JavaScript animation for rotation\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"absolute inset-0\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: cardData.img,\n                    alt: cardData.title,\n                    className: \"w-full h-full object-cover select-none\",\n                    draggable: false,\n                    style: {\n                      userSelect: 'none'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 521,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"absolute inset-0 bg-gradient-to-t from-black/80 via-black/20 to-transparent\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 528,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 520,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"absolute inset-0 flex flex-col justify-end p-3\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                      className: `font-bold text-white mb-1 transition-all duration-500 ${isDefaultCard ? 'text-lg drop-shadow-lg' : 'text-base'}`,\n                      children: cardData.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 534,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: `text-white/80 transition-all duration-500 ${isDefaultCard ? 'text-sm drop-shadow-md' : 'text-xs'}`,\n                      children: cardData.subtitle\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 539,\n                      columnNumber: 21\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 533,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 532,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 503,\n                columnNumber: 15\n              }, this)\n            }, cardData.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 13\n            }, this);\n          });\n        })()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute top-8 left-8 bg-white/10 backdrop-blur-md rounded-xl px-6 py-3 border border-white/20 pointer-events-none\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-white/80 text-base\",\n          children: [relatedCards.length, \" Cards on Globe\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 7\n      }, this), selectedCardDetail && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed inset-0 z-[70] flex items-center justify-center\",\n        onClick: handleBackdropClick,\n        style: {\n          perspective: '1200px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative w-[600px] h-[400px] rounded-3xl overflow-hidden shadow-2xl border-2 border-white/30\",\n          style: {\n            transform: 'rotateY(180deg)',\n            // Flipped to show backside\n            transformStyle: 'preserve-3d'\n          },\n          onClick: handleDetailContentClick,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute inset-0 text-white\",\n            style: {\n              transform: 'rotateY(180deg)',\n              // Flip content back to readable orientation\n              transformStyle: 'preserve-3d'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute inset-0\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: selectedCardDetail.img,\n                alt: selectedCardDetail.title,\n                className: \"w-full h-full object-cover\",\n                draggable: false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 594,\n                columnNumber: 18\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"absolute inset-0 bg-gradient-to-t from-black/90 via-black/50 to-black/30\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 600,\n                columnNumber: 18\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 593,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute inset-0 opacity-10\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-full h-full bg-grid-pattern\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 604,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 603,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relative z-10 p-8 h-full flex flex-col\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center mb-6\",\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  className: \"text-4xl font-bold mb-2 text-white drop-shadow-lg\",\n                  children: selectedCardDetail.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 611,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-xl text-white/80 font-light\",\n                  children: selectedCardDetail.subtitle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 614,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 610,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-1 flex items-center justify-center\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"grid grid-cols-2 gap-8 w-full\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      className: \"text-lg font-semibold mb-3 text-blue-300\",\n                      children: \"Key Topics\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 624,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                      className: \"space-y-2 text-white/90\",\n                      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                        children: \"\\u2022 Fundamentals & Core Concepts\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 626,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                        children: \"\\u2022 Advanced Techniques\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 627,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                        children: \"\\u2022 Practical Applications\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 628,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                        children: \"\\u2022 Industry Standards\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 629,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                        children: \"\\u2022 Latest Developments\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 630,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 625,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 623,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      className: \"text-lg font-semibold mb-3 text-green-300\",\n                      children: \"Learning Path\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 636,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"space-y-2 text-white/90\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"flex items-center\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"w-3 h-3 bg-green-400 rounded-full mr-3\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 639,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          children: \"Beginner Level\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 640,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 638,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"flex items-center\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"w-3 h-3 bg-yellow-400 rounded-full mr-3\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 643,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          children: \"Intermediate Level\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 644,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 642,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"flex items-center\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"w-3 h-3 bg-red-400 rounded-full mr-3\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 647,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          children: \"Advanced Level\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 648,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 646,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"flex items-center\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"w-3 h-3 bg-purple-400 rounded-full mr-3\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 651,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          children: \"Expert Level\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 652,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 650,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 637,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 635,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 621,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 620,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center pt-6 border-t border-white/20\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-white/60 text-sm\",\n                  children: \"Click anywhere outside to return to globe view\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 661,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 660,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 608,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 262,\n    columnNumber: 5\n  }, this);\n}\n_s(CardDetail, \"j7SnvdJIyHo9ATEjTMKgPj3BLrs=\");\n_c = CardDetail;\nvar _c;\n$RefreshReg$(_c, \"CardDetail\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","jsxDEV","_jsxDEV","CardDetail","card","onClose","onNavigate","relatedCards","_s","cameraRotation","setCameraRotation","x","y","dragStart","setDragStart","isDragging","setIsDragging","dragOffset","setDragOffset","isManualControl","setIsManualControl","hasDraggedSignificantly","setHasDraggedSignificantly","totalDragDistance","setTotalDragDistance","selectedCardDetail","setSelectedCardDetail","videoLoaded","setVideoLoaded","containerRef","globeRadius","allCardsIn3D","map","cardData","index","totalCards","length","angle","Math","PI","cos","z","sin","rotationY","atan2","absoluteIndex","positionInSpace","x3d","y3d","z3d","focusOnCard","targetCard","targetAngle","prev","find","c","id","video","document","querySelector","load","play","catch","e","console","log","keyHandler","key","currentIndex","findIndex","nextIndex","nextCard","addEventListener","removeEventListener","handleBackdropClick","handleDetailContentClick","stopPropagation","handleCardClick","autoRotationAngle","setAutoRotationAngle","interval","setInterval","clearInterval","handleMouseDown","clientX","clientY","handleMouseMove","deltaX","deltaY","dragDistance","sqrt","sensitivity","rotationDeltaY","handleMouseUp","setTimeout","handleTouchStart","touch","touches","handleTouchMove","handleTouchEnd","className","children","autoPlay","loop","muted","playsInline","preload","onLoadStart","onLoadedData","onCanPlayThrough","onError","error","style","backgroundColor","zIndex","src","type","fileName","_jsxFileName","lineNumber","columnNumber","opacity","transition","backgroundImage","animation","onClick","onMouseUp","onMouseLeave","perspective","perspectiveOrigin","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","ref","onMouseDown","onMouseMove","onTouchStart","onTouchMove","onTouchEnd","transform","transformStyle","currentCameraY","centerCardId","maxRotatedZ","Infinity","forEach","cameraRadians","rotatedX","rotatedZ","isDefaultCard","cardAngleInDegrees","normalizedCameraY","centerOffset","adjustedCameraY","angleDifferenceFromCenter","distanceFromCenter","abs","centerProximity","scale","round","isCenterCard","finalScale","rotationX","transformOrigin","userSelect","img","alt","title","draggable","subtitle","_c","$RefreshReg$"],"sources":["C:/Users/mrluf/Desktop/deck cards/src/components/CardDetail.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from \"react\";\n\ninterface CardData {\n  id: string;\n  img: string;\n  title: string;\n  subtitle: string;\n  category?: string;\n}\n\ninterface CardDetailProps {\n  card: CardData;\n  onClose: () => void;\n  onNavigate: (direction: 'left' | 'right') => void;\n  relatedCards: CardData[];\n}\n\nexport default function CardDetail({ card, onClose, onNavigate, relatedCards }: CardDetailProps) {\n  // 3D Globe rotation system - now supports free camera rotation\n  const [cameraRotation, setCameraRotation] = useState({ x: 0, y: 0 }); // Camera rotation in degrees - perfectly level\n  const [dragStart, setDragStart] = useState({ x: 0, y: 0 });\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });\n  const [isManualControl, setIsManualControl] = useState(false); // Track if user is manually controlling camera\n  const [hasDraggedSignificantly, setHasDraggedSignificantly] = useState(false); // Track if user has actually dragged\n  const [totalDragDistance, setTotalDragDistance] = useState(0); // Track total drag distance\n  const [selectedCardDetail, setSelectedCardDetail] = useState<any>(null); // Track clicked card for detail view\n  const [videoLoaded, setVideoLoaded] = useState(false); // Track if background video has loaded\n  \n  // Center card rotation animation state - REMOVED to prevent spinning issues\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const globeRadius = 450; // Radius of the globe - balanced spacing\n\n  // All cards exist as fixed objects arranged around a 3D globe's equator\n  const allCardsIn3D = relatedCards.map((cardData, index) => {\n    const totalCards = relatedCards.length;\n    \n    // Calculate position around the equator (Y = 0 for equator)\n    const angle = (index / totalCards) * 2 * Math.PI; // Evenly space cards around circle\n    const x = Math.cos(angle) * globeRadius; // X position on circle\n    const y = 0; // All cards on equator (Y = 0)\n    const z = Math.sin(angle) * globeRadius; // Z position on circle\n    \n    // Calculate rotation to face OUTWARD toward user (front-facing)\n    // Use atan2 to calculate rotation to face away from center (toward user)\n    const rotationY = Math.atan2(x, z) * 180 / Math.PI; // Face outward toward user\n    \n    return {\n      ...cardData,\n      absoluteIndex: index,\n      positionInSpace: index,\n      x3d: x,\n      y3d: y,\n      z3d: z,\n      angle: angle,\n      rotationY: rotationY // Store rotation for facing center\n    };\n  });\n\n  // Function to rotate to focus on a specific card\n  const focusOnCard = useCallback((targetCard: any) => {\n    // Only auto-focus if user is not manually controlling the camera\n    if (isManualControl) return;\n    \n    // Calculate camera rotation to face the target card\n    const targetAngle = targetCard.angle * 180 / Math.PI;\n    setCameraRotation(prev => ({\n      ...prev,\n      y: -targetAngle // Rotate camera to face the card\n    }));\n  }, [isManualControl]);\n\n  // Initialize camera to focus on clicked card (only on first load)\n  useEffect(() => {\n    const targetCard = allCardsIn3D.find(c => c.id === card.id);\n    if (targetCard && !isManualControl) {\n      focusOnCard(targetCard);\n    }\n  }, [card.id, focusOnCard, allCardsIn3D, isManualControl]);\n\n  // Auto-open card detail view when coming from collection view\n  useEffect(() => {\n    // Automatically open the detail view for the clicked card\n    setSelectedCardDetail(card);\n  }, [card]);\n\n  // Force video to play when component mounts\n  useEffect(() => {\n    const video = document.querySelector('video[key=\"carddetail-bg-video\"]') as HTMLVideoElement;\n    if (video) {\n      video.load();\n      video.play().catch(e => console.log('Video autoplay failed:', e));\n    }\n  }, []);\n\n  useEffect(() => {\n    const keyHandler = (e: KeyboardEvent) => {\n      if (e.key === 'Escape') onClose();\n      if (e.key === 'ArrowLeft' || e.key === 'ArrowRight') {\n        // Reset manual control when using arrow keys for navigation\n        setIsManualControl(false);\n        \n        // Find current focused card and move to next/previous\n        const currentIndex = allCardsIn3D.findIndex(c => c.id === card.id);\n        const totalCards = allCardsIn3D.length;\n        \n        let nextIndex;\n        if (e.key === 'ArrowRight') {\n          nextIndex = (currentIndex + 1) % totalCards;\n        } else {\n          nextIndex = (currentIndex - 1 + totalCards) % totalCards;\n        }\n        \n        const nextCard = allCardsIn3D[nextIndex];\n        focusOnCard(nextCard);\n      }\n    };\n    \n    document.addEventListener('keydown', keyHandler);\n    return () => document.removeEventListener('keydown', keyHandler);\n  }, [onClose, focusOnCard, allCardsIn3D, card.id]);\n\n  // Handle click outside to close - RE-ENABLED for card detail view\n  const handleBackdropClick = (e: React.MouseEvent) => {\n    if (selectedCardDetail) {\n      setSelectedCardDetail(null); // Close card detail view\n    }\n    // Globe view click-to-close remains disabled\n  };\n\n  // Handle detail card content click to prevent closing\n  const handleDetailContentClick = (e: React.MouseEvent) => {\n    e.stopPropagation();\n  };\n\n  // Handle card click to show detailed backside view\n  const handleCardClick = (cardData: any, e: React.MouseEvent) => {\n    e.stopPropagation();\n    // Don't open detail if currently dragging OR if user has recently dragged significantly\n    if (isDragging || hasDraggedSignificantly) return;\n    setSelectedCardDetail(cardData);\n  };\n\n  // Auto-rotation for background cards when detail view is open\n  const [autoRotationAngle, setAutoRotationAngle] = useState(0);\n  \n  useEffect(() => {\n    if (!selectedCardDetail) return;\n    \n    const interval = setInterval(() => {\n      setAutoRotationAngle(prev => prev + 0.5); // Slower constant speed rotation (50% of original)\n    }, 16); // 60fps for smooth rotation\n    \n    return () => clearInterval(interval);\n  }, [selectedCardDetail]);\n\n  // Reset auto-rotation when exiting detail view to prevent sharp transitions\n  useEffect(() => {\n    if (!selectedCardDetail) {\n      setAutoRotationAngle(0); // Reset to 0 when detail view closes\n    }\n  }, [selectedCardDetail]);\n\n  // Free camera rotation with mouse drag\n  const handleMouseDown = (e: React.MouseEvent) => {\n    setIsDragging(true);\n    setIsManualControl(true); // Enable manual control when user starts dragging\n    setDragStart({ x: e.clientX, y: e.clientY });\n    setDragOffset({ x: 0, y: 0 });\n    // Reset drag tracking\n    setHasDraggedSignificantly(false);\n    setTotalDragDistance(0);\n  };\n\n  const handleMouseMove = (e: React.MouseEvent) => {\n    if (!isDragging) return;\n    \n    const deltaX = e.clientX - dragStart.x;\n    const deltaY = e.clientY - dragStart.y; // Track Y movement for distance calculation\n    \n    // Calculate total drag distance to determine if this is a significant drag\n    const dragDistance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    setTotalDragDistance(dragDistance);\n    \n    // Mark as significant drag if moved more than 10 pixels\n    if (dragDistance > 10) {\n      setHasDraggedSignificantly(true);\n    }\n    \n    // Convert mouse movement to rotation with sensitivity - only horizontal rotation\n    const sensitivity = 0.5;\n    // const rotationDeltaX = deltaY * sensitivity; // Disabled vertical rotation\n    const rotationDeltaY = deltaX * sensitivity; // Mouse X controls camera Y rotation (left/right around equator)\n    \n    setDragOffset({ x: 0, y: rotationDeltaY }); // Only allow Y rotation\n  };\n\n  const handleMouseUp = () => {\n    if (!isDragging) return;\n    \n    // Apply the drag offset to the camera rotation - only horizontal\n    setCameraRotation(prev => ({\n      x: prev.x, // Keep vertical rotation fixed\n      y: prev.y + dragOffset.y // Allow free horizontal rotation around equator\n    }));\n    \n    setIsDragging(false);\n    setDragOffset({ x: 0, y: 0 });\n    \n    // Add a delay before clearing drag protection to prevent accidental clicks\n    // Only clear if this was a significant drag\n    if (hasDraggedSignificantly) {\n      setTimeout(() => {\n        setHasDraggedSignificantly(false);\n      }, 400); // 400ms delay to prevent accidental clicks after drag\n    }\n  };\n\n  // Touch events for mobile\n  const handleTouchStart = (e: React.TouchEvent) => {\n    const touch = e.touches[0];\n    setIsDragging(true);\n    setIsManualControl(true); // Enable manual control when user starts dragging\n    setDragStart({ x: touch.clientX, y: touch.clientY });\n    setDragOffset({ x: 0, y: 0 });\n    // Reset drag tracking\n    setHasDraggedSignificantly(false);\n    setTotalDragDistance(0);\n  };\n\n  const handleTouchMove = (e: React.TouchEvent) => {\n    if (!isDragging) return;\n    const touch = e.touches[0];\n    \n    const deltaX = touch.clientX - dragStart.x;\n    const deltaY = touch.clientY - dragStart.y; // Track Y movement for distance calculation\n    \n    // Calculate total drag distance to determine if this is a significant drag\n    const dragDistance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    setTotalDragDistance(dragDistance);\n    \n    // Mark as significant drag if moved more than 10 pixels\n    if (dragDistance > 10) {\n      setHasDraggedSignificantly(true);\n    }\n    \n    const sensitivity = 0.5;\n    // const rotationDeltaX = deltaY * sensitivity; // Disabled vertical rotation\n    const rotationDeltaY = deltaX * sensitivity; // Only horizontal rotation around equator\n    \n    setDragOffset({ x: 0, y: rotationDeltaY }); // Only allow Y rotation\n  };\n\n  const handleTouchEnd = () => {\n    handleMouseUp();\n  };\n\n  // Center card rotation animation effect - REMOVED to prevent spinning issues\n\n  return (\n    <div className=\"fixed inset-0 z-50\">\n      {/* 2D Background Layer - completely separate from 3D transforms */}\n      <div className=\"absolute inset-0 z-0\">\n        {/* Background Video - same as collection view */}\n        <video\n          key=\"carddetail-bg-video\" // Force re-render when component mounts\n          className=\"absolute inset-0 w-full h-full object-cover pointer-events-none\"\n          autoPlay\n          loop\n          muted\n          playsInline\n          preload=\"metadata\"\n          onLoadStart={() => {\n            console.log('CardDetail video loading started');\n            setVideoLoaded(false);\n          }}\n          onLoadedData={() => {\n            console.log('CardDetail video loaded successfully');\n            setVideoLoaded(true);\n          }}\n          onCanPlayThrough={() => {\n            console.log('CardDetail video can play through');\n            setVideoLoaded(true);\n          }}\n          onError={(e) => {\n            console.error('CardDetail video error:', e);\n            setVideoLoaded(false);\n          }}\n          style={{\n            backgroundColor: '#87CEEB', // Fallback color while loading\n            zIndex: 1\n          }}\n        >\n          <source src=\"/assets/Cloud1.mp4\" type=\"video/mp4\" />\n        </video>\n        \n        {/* Fallback Animated Cloud Background - always show initially, hide when video loads */}\n        <div \n          className=\"absolute inset-0 pointer-events-none bg-gradient-to-br from-sky-400 via-blue-500 to-blue-600\"\n          style={{\n            opacity: videoLoaded ? 0 : 1,\n            transition: 'opacity 0.5s ease-in-out',\n            zIndex: 0\n          }}\n        >\n          <div className=\"absolute inset-0 opacity-30\">\n            <div className=\"w-full h-full\" style={{\n              backgroundImage: `\n                radial-gradient(ellipse 120px 80px at 15% 20%, rgba(255, 255, 255, 0.8) 40%, transparent 50%),\n                radial-gradient(ellipse 100px 60px at 25% 60%, rgba(255, 255, 255, 0.6) 40%, transparent 50%),\n                radial-gradient(ellipse 140px 90px at 35% 30%, rgba(255, 255, 255, 0.7) 40%, transparent 50%),\n                radial-gradient(ellipse 90px 70px at 45% 80%, rgba(255, 255, 255, 0.5) 40%, transparent 50%)\n              `,\n              animation: 'cloudDrift 60s linear infinite'\n            }}></div>\n          </div>\n        </div>\n      </div>\n\n      {/* 3D Scene Container */}\n      <div \n        className=\"absolute inset-0 z-10 flex items-center justify-center\"\n        onClick={handleBackdropClick}\n        onMouseUp={handleMouseUp}\n        onMouseLeave={handleMouseUp}\n        style={{\n          perspective: '1200px', // 3D perspective for the entire scene\n          perspectiveOrigin: 'center center'\n        }}\n      >\n      {/* Close button */}\n      <button\n        onClick={(e) => {\n          e.stopPropagation();\n          onClose();\n        }}\n        className=\"absolute top-8 right-8 z-60 w-12 h-12 rounded-full bg-white/10 backdrop-blur-md border border-white/20 flex items-center justify-center hover:bg-white/20 transition-all duration-300\"\n      >\n        <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n        </svg>\n      </button>\n\n      {/* 3D Globe centered in screen with free camera rotation */}\n      <div \n        ref={containerRef}\n        className=\"relative w-full h-full flex items-center justify-center cursor-grab active:cursor-grabbing\"\n        onMouseDown={handleMouseDown}\n        onMouseMove={handleMouseMove}\n        onTouchStart={handleTouchStart}\n        onTouchMove={handleTouchMove}\n        onTouchEnd={handleTouchEnd}\n        style={{\n          transform: `\n            rotateX(${cameraRotation.x + dragOffset.x}deg)\n            rotateY(${cameraRotation.y + dragOffset.y + (selectedCardDetail ? autoRotationAngle : 0)}deg)\n          `,\n          transition: isDragging ? 'none' : 'transform 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94)',\n          transformStyle: 'preserve-3d'\n        }}\n      >\n        {/* Globe wireframe and equator - hidden from user view (internal reference only) */}\n\n        {(() => {\n          // Calculate current camera rotation \n          const currentCameraY = cameraRotation.y + dragOffset.y + (selectedCardDetail ? autoRotationAngle : 0);\n          \n          // Apply camera rotation to all cards and find the one with highest z value\n          let centerCardId: string | null = null;\n          let maxRotatedZ = -Infinity;\n          \n          allCardsIn3D.forEach(card => {\n            // Convert camera rotation to radians (negative because we're rotating the view, not the world)\n            const cameraRadians = (-currentCameraY * Math.PI) / 180;\n            \n            // Apply rotation matrix to get card position relative to current camera view\n            const rotatedX = card.x3d * Math.cos(cameraRadians) - card.z3d * Math.sin(cameraRadians);\n            const rotatedZ = card.x3d * Math.sin(cameraRadians) + card.z3d * Math.cos(cameraRadians);\n            \n            // Find the card with highest z value after rotation (closest to user in current view)\n            if (rotatedZ > maxRotatedZ) {\n              maxRotatedZ = rotatedZ;\n              centerCardId = card.id;\n            }\n          });\n          \n          return allCardsIn3D.map((cardData) => {\n          // Hide the selected card when detail view is open\n          if (selectedCardDetail && cardData.id === selectedCardDetail.id) {\n            return null;\n          }\n          \n          // Use pre-calculated globe positions\n          const x = cardData.x3d;\n          const y = cardData.y3d;\n          const z = cardData.z3d;\n          \n          // Check if this is the default/clicked card (should be facing viewer)\n          const isDefaultCard = cardData.id === card.id;\n          \n          // Calculate how close this card is to the center of the user's screen\n          // The user is looking straight ahead at the center of the screen\n          const currentCameraY = cameraRotation.y + dragOffset.y + (selectedCardDetail ? autoRotationAngle : 0);\n          const cardAngleInDegrees = cardData.angle * 180 / Math.PI;\n          \n          // Normalize currentCameraY to 0-360 range for accurate card positioning calculations\n          // This ensures infinite rotation works properly without breaking visibility calculations\n          let normalizedCameraY = currentCameraY % 360;\n          if (normalizedCameraY < 0) normalizedCameraY += 360;\n          \n          // Adjust center reference point clockwise by adding offset\n          const centerOffset = 60; // Adjust clockwise by 60 degrees\n          const adjustedCameraY = normalizedCameraY + centerOffset;\n          \n          // Calculate the angular distance from the center of the user's view\n          // Cards at the center of screen should have angle difference of 0\n          let angleDifferenceFromCenter = cardAngleInDegrees - adjustedCameraY;\n          \n          // Normalize to -180 to +180 range\n          while (angleDifferenceFromCenter > 180) angleDifferenceFromCenter -= 360;\n          while (angleDifferenceFromCenter < -180) angleDifferenceFromCenter += 360;\n          \n          // Calculate distance factor: 0 = center of screen (max scale), 180 = opposite side (min scale)\n          const distanceFromCenter = Math.abs(angleDifferenceFromCenter);\n          \n          // Convert to a scale factor: closer to center = larger scale\n          const centerProximity = 1 - (distanceFromCenter / 180); // 1 = center, 0 = opposite side\n          \n          // Dynamic scaling based on proximity to screen center\n          let scale;\n          if (centerProximity > 0.9) { // Very center cards\n            scale = 1.2 + (centerProximity - 0.9) * 2; // Scale 1.2 to 1.4 for center cards\n          } else if (centerProximity > 0.7) { // Near center cards\n            scale = 0.9 + (centerProximity - 0.7) * 1.5; // Scale 0.9 to 1.2\n          } else if (centerProximity > 0.5) { // Side cards\n            scale = 0.6 + (centerProximity - 0.5) * 1.5; // Scale 0.6 to 0.9\n          } else if (centerProximity > 0.3) { // Far side cards\n            scale = 0.4 + (centerProximity - 0.3) * 1; // Scale 0.4 to 0.6\n          } else {\n            // Very far/back cards\n            scale = 0.2 + centerProximity * 0.67; // Scale 0.2 to 0.4\n          }\n          \n          // Dynamic opacity based on proximity to screen center\n          let opacity;\n          if (centerProximity > 0.8) { // Center cards\n            opacity = 1.0; // Fully visible\n          } else if (centerProximity > 0.5) { // Side cards\n            opacity = 0.7 + (centerProximity - 0.5) * 1; // Opacity 0.7 to 1.0\n          } else if (centerProximity > 0.2) { // Far cards\n            opacity = 0.4 + (centerProximity - 0.2) * 1; // Opacity 0.4 to 0.7\n          } else {\n            opacity = 0.2 + centerProximity * 1; // Opacity 0.2 to 0.4\n          }\n          \n          // Z-index based on proximity to center (center cards should be on top)\n          let zIndex = Math.round(100 + centerProximity * 50);\n          \n          // Dynamic center card detection: card with highest z value (closest to user)\n          const isCenterCard = cardData.id === centerCardId; // Only the specific card with maximum z value\n          \n          // Center card detection - no animation to avoid spinning issues\n          \n          // Add subtle pop effect for center card\n          let finalScale = scale;\n          if (isCenterCard) {\n            finalScale = scale * 1.25; // 25% size increase for center card pop effect\n          }\n          \n          // Cards face toward the center of the globe, EXCEPT center card which faces the screen\n          let rotationY, rotationX;\n          if (isCenterCard) {\n            // Center card (highest z value) faces flat toward the screen (no tilt, no flip)\n            // Counter-rotate to cancel out the container rotation\n            rotationY = -currentCameraY; // Negative of container rotation to face screen flat\n            rotationX = 0;\n          } else {\n            // Normal cards face toward the center of the globe\n            rotationY = cardData.rotationY;\n            rotationX = 0;\n          }\n          \n          return (\n            <div\n              key={cardData.id}\n              className=\"absolute\"\n              style={{\n                transform: `\n                  translate3d(${x}px, ${y}px, ${z}px) \n                  rotateY(${rotationY}deg) \n                  rotateX(${rotationX}deg)\n                `,\n                opacity: selectedCardDetail ? opacity * 0.5 : opacity, // More fade when detail view is open\n                zIndex,\n                transformOrigin: 'center center',\n                transformStyle: 'preserve-3d',\n                // CSS transitions removed - now using JavaScript animation for smoother center card rotation\n              }}\n              onClick={(e) => handleCardClick(cardData, e)}\n            >\n              {/* Card with enhanced styling for default card and center card */}\n              <div \n                className={`relative w-52 h-52 rounded-2xl overflow-hidden backdrop-blur-xl cursor-pointer hover:scale-105 select-none ${\n                  isCenterCard \n                    ? 'border-4 border-yellow-400/80 shadow-2xl shadow-yellow-400/40' // Center card gets special golden border and glow\n                    : isDefaultCard \n                      ? 'border-2 border-white/40 shadow-2xl shadow-white/20' // Default card gets special border and glow\n                      : 'border border-white/20 shadow-xl shadow-black/40'     // Other cards get standard styling\n                }`}\n                style={{\n                  transform: `scale(${finalScale})`,\n                  transformOrigin: 'center center',\n                  transformStyle: 'preserve-3d',\n                  userSelect: 'none',\n                  // CSS transitions removed - using JavaScript animation for rotation\n                }}\n              >\n                {/* Background image */}\n                <div className=\"absolute inset-0\">\n                  <img\n                    src={cardData.img}\n                    alt={cardData.title}\n                    className=\"w-full h-full object-cover select-none\"\n                    draggable={false}\n                    style={{ userSelect: 'none' }}\n                  />\n                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/80 via-black/20 to-transparent\" />\n                </div>\n\n                {/* Content overlay with enhanced styling for default card */}\n                <div className=\"absolute inset-0 flex flex-col justify-end p-3\">\n                  <div className=\"text-center\">\n                    <h2 className={`font-bold text-white mb-1 transition-all duration-500 ${\n                      isDefaultCard ? 'text-lg drop-shadow-lg' : 'text-base'\n                    }`}>\n                      {cardData.title}\n                    </h2>\n                    <p className={`text-white/80 transition-all duration-500 ${\n                      isDefaultCard ? 'text-sm drop-shadow-md' : 'text-xs'\n                    }`}>\n                      {cardData.subtitle}\n                    </p>\n                  </div>\n                </div>\n\n\n              </div>\n            </div>\n          );\n          });\n        })()}\n\n        {/* Current card info - HIDDEN */}\n      </div>\n\n      {/* Card counter */}\n      <div className=\"absolute top-8 left-8 bg-white/10 backdrop-blur-md rounded-xl px-6 py-3 border border-white/20 pointer-events-none\">\n        <p className=\"text-white/80 text-base\">\n          {relatedCards.length} Cards on Globe\n        </p>\n      </div>\n\n      {/* Individual Card Detail View Overlay */}\n      {selectedCardDetail && (\n        <div \n          className=\"fixed inset-0 z-[70] flex items-center justify-center\"\n          onClick={handleBackdropClick}\n          style={{\n            perspective: '1200px'\n          }}\n        >\n          \n\n                                {/* Enlarged Card Detail - Flipped to show backside */}\n           <div \n             className=\"relative w-[600px] h-[400px] rounded-3xl overflow-hidden shadow-2xl border-2 border-white/30\"\n             style={{\n               transform: 'rotateY(180deg)', // Flipped to show backside\n               transformStyle: 'preserve-3d'\n             }}\n             onClick={handleDetailContentClick}\n           >\n             {/* Backside Content */}\n             <div \n               className=\"absolute inset-0 text-white\"\n               style={{\n                 transform: 'rotateY(180deg)', // Flip content back to readable orientation\n                 transformStyle: 'preserve-3d'\n               }}\n             >\n               {/* Card's actual image as background */}\n               <div className=\"absolute inset-0\">\n                 <img\n                   src={selectedCardDetail.img}\n                   alt={selectedCardDetail.title}\n                   className=\"w-full h-full object-cover\"\n                   draggable={false}\n                 />\n                 <div className=\"absolute inset-0 bg-gradient-to-t from-black/90 via-black/50 to-black/30\" />\n               </div>\n              {/* Background Pattern */}\n              <div className=\"absolute inset-0 opacity-10\">\n                <div className=\"w-full h-full bg-grid-pattern\"></div>\n              </div>\n              \n              {/* Content */}\n              <div className=\"relative z-10 p-8 h-full flex flex-col\">\n                {/* Header */}\n                <div className=\"text-center mb-6\">\n                  <h1 className=\"text-4xl font-bold mb-2 text-white drop-shadow-lg\">\n                    {selectedCardDetail.title}\n                  </h1>\n                  <p className=\"text-xl text-white/80 font-light\">\n                    {selectedCardDetail.subtitle}\n                  </p>\n                </div>\n                \n                {/* Main Content */}\n                <div className=\"flex-1 flex items-center justify-center\">\n                  <div className=\"grid grid-cols-2 gap-8 w-full\">\n                    {/* Left Column - Key Topics */}\n                    <div>\n                      <h3 className=\"text-lg font-semibold mb-3 text-blue-300\">Key Topics</h3>\n                      <ul className=\"space-y-2 text-white/90\">\n                        <li>• Fundamentals & Core Concepts</li>\n                        <li>• Advanced Techniques</li>\n                        <li>• Practical Applications</li>\n                        <li>• Industry Standards</li>\n                        <li>• Latest Developments</li>\n                      </ul>\n                    </div>\n                    \n                    {/* Right Column - Learning Path */}\n                    <div>\n                      <h3 className=\"text-lg font-semibold mb-3 text-green-300\">Learning Path</h3>\n                      <div className=\"space-y-2 text-white/90\">\n                        <div className=\"flex items-center\">\n                          <div className=\"w-3 h-3 bg-green-400 rounded-full mr-3\"></div>\n                          <span>Beginner Level</span>\n                        </div>\n                        <div className=\"flex items-center\">\n                          <div className=\"w-3 h-3 bg-yellow-400 rounded-full mr-3\"></div>\n                          <span>Intermediate Level</span>\n                        </div>\n                        <div className=\"flex items-center\">\n                          <div className=\"w-3 h-3 bg-red-400 rounded-full mr-3\"></div>\n                          <span>Advanced Level</span>\n                        </div>\n                        <div className=\"flex items-center\">\n                          <div className=\"w-3 h-3 bg-purple-400 rounded-full mr-3\"></div>\n                          <span>Expert Level</span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                \n                {/* Footer */}\n                <div className=\"text-center pt-6 border-t border-white/20\">\n                  <p className=\"text-white/60 text-sm\">\n                    Click anywhere outside to return to globe view\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      </div>\n    </div>\n  );\n} "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAiBxE,eAAe,SAASC,UAAUA,CAAC;EAAEC,IAAI;EAAEC,OAAO;EAAEC,UAAU;EAAEC;AAA8B,CAAC,EAAE;EAAAC,EAAA;EAC/F;EACA,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC;IAAEc,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC,CAAC,CAAC;EACtE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC;IAAEc,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;EAC1D,MAAM,CAACG,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACoB,UAAU,EAAEC,aAAa,CAAC,GAAGrB,QAAQ,CAAC;IAAEc,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;EAC5D,MAAM,CAACO,eAAe,EAAEC,kBAAkB,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC/D,MAAM,CAACwB,uBAAuB,EAAEC,0BAA0B,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC/E,MAAM,CAAC0B,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG3B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EAC/D,MAAM,CAAC4B,kBAAkB,EAAEC,qBAAqB,CAAC,GAAG7B,QAAQ,CAAM,IAAI,CAAC,CAAC,CAAC;EACzE,MAAM,CAAC8B,WAAW,EAAEC,cAAc,CAAC,GAAG/B,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEvD;EACA,MAAMgC,YAAY,GAAG9B,MAAM,CAAiB,IAAI,CAAC;EAEjD,MAAM+B,WAAW,GAAG,GAAG,CAAC,CAAC;;EAEzB;EACA,MAAMC,YAAY,GAAGxB,YAAY,CAACyB,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,KAAK;IACzD,MAAMC,UAAU,GAAG5B,YAAY,CAAC6B,MAAM;;IAEtC;IACA,MAAMC,KAAK,GAAIH,KAAK,GAAGC,UAAU,GAAI,CAAC,GAAGG,IAAI,CAACC,EAAE,CAAC,CAAC;IAClD,MAAM5B,CAAC,GAAG2B,IAAI,CAACE,GAAG,CAACH,KAAK,CAAC,GAAGP,WAAW,CAAC,CAAC;IACzC,MAAMlB,CAAC,GAAG,CAAC,CAAC,CAAC;IACb,MAAM6B,CAAC,GAAGH,IAAI,CAACI,GAAG,CAACL,KAAK,CAAC,GAAGP,WAAW,CAAC,CAAC;;IAEzC;IACA;IACA,MAAMa,SAAS,GAAGL,IAAI,CAACM,KAAK,CAACjC,CAAC,EAAE8B,CAAC,CAAC,GAAG,GAAG,GAAGH,IAAI,CAACC,EAAE,CAAC,CAAC;;IAEpD,OAAO;MACL,GAAGN,QAAQ;MACXY,aAAa,EAAEX,KAAK;MACpBY,eAAe,EAAEZ,KAAK;MACtBa,GAAG,EAAEpC,CAAC;MACNqC,GAAG,EAAEpC,CAAC;MACNqC,GAAG,EAAER,CAAC;MACNJ,KAAK,EAAEA,KAAK;MACZM,SAAS,EAAEA,SAAS,CAAC;IACvB,CAAC;EACH,CAAC,CAAC;;EAEF;EACA,MAAMO,WAAW,GAAGlD,WAAW,CAAEmD,UAAe,IAAK;IACnD;IACA,IAAIhC,eAAe,EAAE;;IAErB;IACA,MAAMiC,WAAW,GAAGD,UAAU,CAACd,KAAK,GAAG,GAAG,GAAGC,IAAI,CAACC,EAAE;IACpD7B,iBAAiB,CAAC2C,IAAI,KAAK;MACzB,GAAGA,IAAI;MACPzC,CAAC,EAAE,CAACwC,WAAW,CAAC;IAClB,CAAC,CAAC,CAAC;EACL,CAAC,EAAE,CAACjC,eAAe,CAAC,CAAC;;EAErB;EACArB,SAAS,CAAC,MAAM;IACd,MAAMqD,UAAU,GAAGpB,YAAY,CAACuB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKpD,IAAI,CAACoD,EAAE,CAAC;IAC3D,IAAIL,UAAU,IAAI,CAAChC,eAAe,EAAE;MAClC+B,WAAW,CAACC,UAAU,CAAC;IACzB;EACF,CAAC,EAAE,CAAC/C,IAAI,CAACoD,EAAE,EAAEN,WAAW,EAAEnB,YAAY,EAAEZ,eAAe,CAAC,CAAC;;EAEzD;EACArB,SAAS,CAAC,MAAM;IACd;IACA4B,qBAAqB,CAACtB,IAAI,CAAC;EAC7B,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;;EAEV;EACAN,SAAS,CAAC,MAAM;IACd,MAAM2D,KAAK,GAAGC,QAAQ,CAACC,aAAa,CAAC,kCAAkC,CAAqB;IAC5F,IAAIF,KAAK,EAAE;MACTA,KAAK,CAACG,IAAI,CAAC,CAAC;MACZH,KAAK,CAACI,IAAI,CAAC,CAAC,CAACC,KAAK,CAACC,CAAC,IAAIC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,CAAC,CAAC,CAAC;IACnE;EACF,CAAC,EAAE,EAAE,CAAC;EAENjE,SAAS,CAAC,MAAM;IACd,MAAMoE,UAAU,GAAIH,CAAgB,IAAK;MACvC,IAAIA,CAAC,CAACI,GAAG,KAAK,QAAQ,EAAE9D,OAAO,CAAC,CAAC;MACjC,IAAI0D,CAAC,CAACI,GAAG,KAAK,WAAW,IAAIJ,CAAC,CAACI,GAAG,KAAK,YAAY,EAAE;QACnD;QACA/C,kBAAkB,CAAC,KAAK,CAAC;;QAEzB;QACA,MAAMgD,YAAY,GAAGrC,YAAY,CAACsC,SAAS,CAACd,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKpD,IAAI,CAACoD,EAAE,CAAC;QAClE,MAAMrB,UAAU,GAAGJ,YAAY,CAACK,MAAM;QAEtC,IAAIkC,SAAS;QACb,IAAIP,CAAC,CAACI,GAAG,KAAK,YAAY,EAAE;UAC1BG,SAAS,GAAG,CAACF,YAAY,GAAG,CAAC,IAAIjC,UAAU;QAC7C,CAAC,MAAM;UACLmC,SAAS,GAAG,CAACF,YAAY,GAAG,CAAC,GAAGjC,UAAU,IAAIA,UAAU;QAC1D;QAEA,MAAMoC,QAAQ,GAAGxC,YAAY,CAACuC,SAAS,CAAC;QACxCpB,WAAW,CAACqB,QAAQ,CAAC;MACvB;IACF,CAAC;IAEDb,QAAQ,CAACc,gBAAgB,CAAC,SAAS,EAAEN,UAAU,CAAC;IAChD,OAAO,MAAMR,QAAQ,CAACe,mBAAmB,CAAC,SAAS,EAAEP,UAAU,CAAC;EAClE,CAAC,EAAE,CAAC7D,OAAO,EAAE6C,WAAW,EAAEnB,YAAY,EAAE3B,IAAI,CAACoD,EAAE,CAAC,CAAC;;EAEjD;EACA,MAAMkB,mBAAmB,GAAIX,CAAmB,IAAK;IACnD,IAAItC,kBAAkB,EAAE;MACtBC,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC;IAC/B;IACA;EACF,CAAC;;EAED;EACA,MAAMiD,wBAAwB,GAAIZ,CAAmB,IAAK;IACxDA,CAAC,CAACa,eAAe,CAAC,CAAC;EACrB,CAAC;;EAED;EACA,MAAMC,eAAe,GAAGA,CAAC5C,QAAa,EAAE8B,CAAmB,KAAK;IAC9DA,CAAC,CAACa,eAAe,CAAC,CAAC;IACnB;IACA,IAAI7D,UAAU,IAAIM,uBAAuB,EAAE;IAC3CK,qBAAqB,CAACO,QAAQ,CAAC;EACjC,CAAC;;EAED;EACA,MAAM,CAAC6C,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGlF,QAAQ,CAAC,CAAC,CAAC;EAE7DC,SAAS,CAAC,MAAM;IACd,IAAI,CAAC2B,kBAAkB,EAAE;IAEzB,MAAMuD,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCF,oBAAoB,CAAC1B,IAAI,IAAIA,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC;IAC5C,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;IAER,OAAO,MAAM6B,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACvD,kBAAkB,CAAC,CAAC;;EAExB;EACA3B,SAAS,CAAC,MAAM;IACd,IAAI,CAAC2B,kBAAkB,EAAE;MACvBsD,oBAAoB,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3B;EACF,CAAC,EAAE,CAACtD,kBAAkB,CAAC,CAAC;;EAExB;EACA,MAAM0D,eAAe,GAAIpB,CAAmB,IAAK;IAC/C/C,aAAa,CAAC,IAAI,CAAC;IACnBI,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;IAC1BN,YAAY,CAAC;MAAEH,CAAC,EAAEoD,CAAC,CAACqB,OAAO;MAAExE,CAAC,EAAEmD,CAAC,CAACsB;IAAQ,CAAC,CAAC;IAC5CnE,aAAa,CAAC;MAAEP,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAC,CAAC;IAC7B;IACAU,0BAA0B,CAAC,KAAK,CAAC;IACjCE,oBAAoB,CAAC,CAAC,CAAC;EACzB,CAAC;EAED,MAAM8D,eAAe,GAAIvB,CAAmB,IAAK;IAC/C,IAAI,CAAChD,UAAU,EAAE;IAEjB,MAAMwE,MAAM,GAAGxB,CAAC,CAACqB,OAAO,GAAGvE,SAAS,CAACF,CAAC;IACtC,MAAM6E,MAAM,GAAGzB,CAAC,CAACsB,OAAO,GAAGxE,SAAS,CAACD,CAAC,CAAC,CAAC;;IAExC;IACA,MAAM6E,YAAY,GAAGnD,IAAI,CAACoD,IAAI,CAACH,MAAM,GAAGA,MAAM,GAAGC,MAAM,GAAGA,MAAM,CAAC;IACjEhE,oBAAoB,CAACiE,YAAY,CAAC;;IAElC;IACA,IAAIA,YAAY,GAAG,EAAE,EAAE;MACrBnE,0BAA0B,CAAC,IAAI,CAAC;IAClC;;IAEA;IACA,MAAMqE,WAAW,GAAG,GAAG;IACvB;IACA,MAAMC,cAAc,GAAGL,MAAM,GAAGI,WAAW,CAAC,CAAC;;IAE7CzE,aAAa,CAAC;MAAEP,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAEgF;IAAe,CAAC,CAAC,CAAC,CAAC;EAC9C,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAI,CAAC9E,UAAU,EAAE;;IAEjB;IACAL,iBAAiB,CAAC2C,IAAI,KAAK;MACzB1C,CAAC,EAAE0C,IAAI,CAAC1C,CAAC;MAAE;MACXC,CAAC,EAAEyC,IAAI,CAACzC,CAAC,GAAGK,UAAU,CAACL,CAAC,CAAC;IAC3B,CAAC,CAAC,CAAC;IAEHI,aAAa,CAAC,KAAK,CAAC;IACpBE,aAAa,CAAC;MAAEP,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAC,CAAC;;IAE7B;IACA;IACA,IAAIS,uBAAuB,EAAE;MAC3ByE,UAAU,CAAC,MAAM;QACfxE,0BAA0B,CAAC,KAAK,CAAC;MACnC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;IACX;EACF,CAAC;;EAED;EACA,MAAMyE,gBAAgB,GAAIhC,CAAmB,IAAK;IAChD,MAAMiC,KAAK,GAAGjC,CAAC,CAACkC,OAAO,CAAC,CAAC,CAAC;IAC1BjF,aAAa,CAAC,IAAI,CAAC;IACnBI,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;IAC1BN,YAAY,CAAC;MAAEH,CAAC,EAAEqF,KAAK,CAACZ,OAAO;MAAExE,CAAC,EAAEoF,KAAK,CAACX;IAAQ,CAAC,CAAC;IACpDnE,aAAa,CAAC;MAAEP,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAC,CAAC;IAC7B;IACAU,0BAA0B,CAAC,KAAK,CAAC;IACjCE,oBAAoB,CAAC,CAAC,CAAC;EACzB,CAAC;EAED,MAAM0E,eAAe,GAAInC,CAAmB,IAAK;IAC/C,IAAI,CAAChD,UAAU,EAAE;IACjB,MAAMiF,KAAK,GAAGjC,CAAC,CAACkC,OAAO,CAAC,CAAC,CAAC;IAE1B,MAAMV,MAAM,GAAGS,KAAK,CAACZ,OAAO,GAAGvE,SAAS,CAACF,CAAC;IAC1C,MAAM6E,MAAM,GAAGQ,KAAK,CAACX,OAAO,GAAGxE,SAAS,CAACD,CAAC,CAAC,CAAC;;IAE5C;IACA,MAAM6E,YAAY,GAAGnD,IAAI,CAACoD,IAAI,CAACH,MAAM,GAAGA,MAAM,GAAGC,MAAM,GAAGA,MAAM,CAAC;IACjEhE,oBAAoB,CAACiE,YAAY,CAAC;;IAElC;IACA,IAAIA,YAAY,GAAG,EAAE,EAAE;MACrBnE,0BAA0B,CAAC,IAAI,CAAC;IAClC;IAEA,MAAMqE,WAAW,GAAG,GAAG;IACvB;IACA,MAAMC,cAAc,GAAGL,MAAM,GAAGI,WAAW,CAAC,CAAC;;IAE7CzE,aAAa,CAAC;MAAEP,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAEgF;IAAe,CAAC,CAAC,CAAC,CAAC;EAC9C,CAAC;EAED,MAAMO,cAAc,GAAGA,CAAA,KAAM;IAC3BN,aAAa,CAAC,CAAC;EACjB,CAAC;;EAED;;EAEA,oBACE3F,OAAA;IAAKkG,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBAEjCnG,OAAA;MAAKkG,SAAS,EAAC,sBAAsB;MAAAC,QAAA,gBAEnCnG,OAAA;QAC4B;QAC1BkG,SAAS,EAAC,iEAAiE;QAC3EE,QAAQ;QACRC,IAAI;QACJC,KAAK;QACLC,WAAW;QACXC,OAAO,EAAC,UAAU;QAClBC,WAAW,EAAEA,CAAA,KAAM;UACjB3C,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;UAC/CrC,cAAc,CAAC,KAAK,CAAC;QACvB,CAAE;QACFgF,YAAY,EAAEA,CAAA,KAAM;UAClB5C,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;UACnDrC,cAAc,CAAC,IAAI,CAAC;QACtB,CAAE;QACFiF,gBAAgB,EAAEA,CAAA,KAAM;UACtB7C,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;UAChDrC,cAAc,CAAC,IAAI,CAAC;QACtB,CAAE;QACFkF,OAAO,EAAG/C,CAAC,IAAK;UACdC,OAAO,CAAC+C,KAAK,CAAC,yBAAyB,EAAEhD,CAAC,CAAC;UAC3CnC,cAAc,CAAC,KAAK,CAAC;QACvB,CAAE;QACFoF,KAAK,EAAE;UACLC,eAAe,EAAE,SAAS;UAAE;UAC5BC,MAAM,EAAE;QACV,CAAE;QAAAb,QAAA,eAEFnG,OAAA;UAAQiH,GAAG,EAAC,oBAAoB;UAACC,IAAI,EAAC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GA5BhD,qBAAqB;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OA6BpB,CAAC,eAGRtH,OAAA;QACEkG,SAAS,EAAC,8FAA8F;QACxGY,KAAK,EAAE;UACLS,OAAO,EAAE9F,WAAW,GAAG,CAAC,GAAG,CAAC;UAC5B+F,UAAU,EAAE,0BAA0B;UACtCR,MAAM,EAAE;QACV,CAAE;QAAAb,QAAA,eAEFnG,OAAA;UAAKkG,SAAS,EAAC,6BAA6B;UAAAC,QAAA,eAC1CnG,OAAA;YAAKkG,SAAS,EAAC,eAAe;YAACY,KAAK,EAAE;cACpCW,eAAe,EAAE;AAC/B;AACA;AACA;AACA;AACA,eAAe;cACDC,SAAS,EAAE;YACb;UAAE;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGNtH,OAAA;MACEkG,SAAS,EAAC,wDAAwD;MAClEyB,OAAO,EAAEnD,mBAAoB;MAC7BoD,SAAS,EAAEjC,aAAc;MACzBkC,YAAY,EAAElC,aAAc;MAC5BmB,KAAK,EAAE;QACLgB,WAAW,EAAE,QAAQ;QAAE;QACvBC,iBAAiB,EAAE;MACrB,CAAE;MAAA5B,QAAA,gBAGJnG,OAAA;QACE2H,OAAO,EAAG9D,CAAC,IAAK;UACdA,CAAC,CAACa,eAAe,CAAC,CAAC;UACnBvE,OAAO,CAAC,CAAC;QACX,CAAE;QACF+F,SAAS,EAAC,uLAAuL;QAAAC,QAAA,eAEjMnG,OAAA;UAAKkG,SAAS,EAAC,oBAAoB;UAAC8B,IAAI,EAAC,MAAM;UAACC,MAAM,EAAC,cAAc;UAACC,OAAO,EAAC,WAAW;UAAA/B,QAAA,eACvFnG,OAAA;YAAMmI,aAAa,EAAC,OAAO;YAACC,cAAc,EAAC,OAAO;YAACC,WAAW,EAAE,CAAE;YAACC,CAAC,EAAC;UAAsB;YAAAnB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3F;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eAGTtH,OAAA;QACEuI,GAAG,EAAE5G,YAAa;QAClBuE,SAAS,EAAC,4FAA4F;QACtGsC,WAAW,EAAEvD,eAAgB;QAC7BwD,WAAW,EAAErD,eAAgB;QAC7BsD,YAAY,EAAE7C,gBAAiB;QAC/B8C,WAAW,EAAE3C,eAAgB;QAC7B4C,UAAU,EAAE3C,cAAe;QAC3Ba,KAAK,EAAE;UACL+B,SAAS,EAAE;AACrB,sBAAsBtI,cAAc,CAACE,CAAC,GAAGM,UAAU,CAACN,CAAC;AACrD,sBAAsBF,cAAc,CAACG,CAAC,GAAGK,UAAU,CAACL,CAAC,IAAIa,kBAAkB,GAAGqD,iBAAiB,GAAG,CAAC,CAAC;AACpG,WAAW;UACD4C,UAAU,EAAE3G,UAAU,GAAG,MAAM,GAAG,qDAAqD;UACvFiI,cAAc,EAAE;QAClB,CAAE;QAAA3C,QAAA,EAID,CAAC,MAAM;UACN;UACA,MAAM4C,cAAc,GAAGxI,cAAc,CAACG,CAAC,GAAGK,UAAU,CAACL,CAAC,IAAIa,kBAAkB,GAAGqD,iBAAiB,GAAG,CAAC,CAAC;;UAErG;UACA,IAAIoE,YAA2B,GAAG,IAAI;UACtC,IAAIC,WAAW,GAAG,CAACC,QAAQ;UAE3BrH,YAAY,CAACsH,OAAO,CAACjJ,IAAI,IAAI;YAC3B;YACA,MAAMkJ,aAAa,GAAI,CAACL,cAAc,GAAG3G,IAAI,CAACC,EAAE,GAAI,GAAG;;YAEvD;YACA,MAAMgH,QAAQ,GAAGnJ,IAAI,CAAC2C,GAAG,GAAGT,IAAI,CAACE,GAAG,CAAC8G,aAAa,CAAC,GAAGlJ,IAAI,CAAC6C,GAAG,GAAGX,IAAI,CAACI,GAAG,CAAC4G,aAAa,CAAC;YACxF,MAAME,QAAQ,GAAGpJ,IAAI,CAAC2C,GAAG,GAAGT,IAAI,CAACI,GAAG,CAAC4G,aAAa,CAAC,GAAGlJ,IAAI,CAAC6C,GAAG,GAAGX,IAAI,CAACE,GAAG,CAAC8G,aAAa,CAAC;;YAExF;YACA,IAAIE,QAAQ,GAAGL,WAAW,EAAE;cAC1BA,WAAW,GAAGK,QAAQ;cACtBN,YAAY,GAAG9I,IAAI,CAACoD,EAAE;YACxB;UACF,CAAC,CAAC;UAEF,OAAOzB,YAAY,CAACC,GAAG,CAAEC,QAAQ,IAAK;YACtC;YACA,IAAIR,kBAAkB,IAAIQ,QAAQ,CAACuB,EAAE,KAAK/B,kBAAkB,CAAC+B,EAAE,EAAE;cAC/D,OAAO,IAAI;YACb;;YAEA;YACA,MAAM7C,CAAC,GAAGsB,QAAQ,CAACc,GAAG;YACtB,MAAMnC,CAAC,GAAGqB,QAAQ,CAACe,GAAG;YACtB,MAAMP,CAAC,GAAGR,QAAQ,CAACgB,GAAG;;YAEtB;YACA,MAAMwG,aAAa,GAAGxH,QAAQ,CAACuB,EAAE,KAAKpD,IAAI,CAACoD,EAAE;;YAE7C;YACA;YACA,MAAMyF,cAAc,GAAGxI,cAAc,CAACG,CAAC,GAAGK,UAAU,CAACL,CAAC,IAAIa,kBAAkB,GAAGqD,iBAAiB,GAAG,CAAC,CAAC;YACrG,MAAM4E,kBAAkB,GAAGzH,QAAQ,CAACI,KAAK,GAAG,GAAG,GAAGC,IAAI,CAACC,EAAE;;YAEzD;YACA;YACA,IAAIoH,iBAAiB,GAAGV,cAAc,GAAG,GAAG;YAC5C,IAAIU,iBAAiB,GAAG,CAAC,EAAEA,iBAAiB,IAAI,GAAG;;YAEnD;YACA,MAAMC,YAAY,GAAG,EAAE,CAAC,CAAC;YACzB,MAAMC,eAAe,GAAGF,iBAAiB,GAAGC,YAAY;;YAExD;YACA;YACA,IAAIE,yBAAyB,GAAGJ,kBAAkB,GAAGG,eAAe;;YAEpE;YACA,OAAOC,yBAAyB,GAAG,GAAG,EAAEA,yBAAyB,IAAI,GAAG;YACxE,OAAOA,yBAAyB,GAAG,CAAC,GAAG,EAAEA,yBAAyB,IAAI,GAAG;;YAEzE;YACA,MAAMC,kBAAkB,GAAGzH,IAAI,CAAC0H,GAAG,CAACF,yBAAyB,CAAC;;YAE9D;YACA,MAAMG,eAAe,GAAG,CAAC,GAAIF,kBAAkB,GAAG,GAAI,CAAC,CAAC;;YAExD;YACA,IAAIG,KAAK;YACT,IAAID,eAAe,GAAG,GAAG,EAAE;cAAE;cAC3BC,KAAK,GAAG,GAAG,GAAG,CAACD,eAAe,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC;YAC7C,CAAC,MAAM,IAAIA,eAAe,GAAG,GAAG,EAAE;cAAE;cAClCC,KAAK,GAAG,GAAG,GAAG,CAACD,eAAe,GAAG,GAAG,IAAI,GAAG,CAAC,CAAC;YAC/C,CAAC,MAAM,IAAIA,eAAe,GAAG,GAAG,EAAE;cAAE;cAClCC,KAAK,GAAG,GAAG,GAAG,CAACD,eAAe,GAAG,GAAG,IAAI,GAAG,CAAC,CAAC;YAC/C,CAAC,MAAM,IAAIA,eAAe,GAAG,GAAG,EAAE;cAAE;cAClCC,KAAK,GAAG,GAAG,GAAG,CAACD,eAAe,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC;YAC7C,CAAC,MAAM;cACL;cACAC,KAAK,GAAG,GAAG,GAAGD,eAAe,GAAG,IAAI,CAAC,CAAC;YACxC;;YAEA;YACA,IAAIxC,OAAO;YACX,IAAIwC,eAAe,GAAG,GAAG,EAAE;cAAE;cAC3BxC,OAAO,GAAG,GAAG,CAAC,CAAC;YACjB,CAAC,MAAM,IAAIwC,eAAe,GAAG,GAAG,EAAE;cAAE;cAClCxC,OAAO,GAAG,GAAG,GAAG,CAACwC,eAAe,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC;YAC/C,CAAC,MAAM,IAAIA,eAAe,GAAG,GAAG,EAAE;cAAE;cAClCxC,OAAO,GAAG,GAAG,GAAG,CAACwC,eAAe,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC;YAC/C,CAAC,MAAM;cACLxC,OAAO,GAAG,GAAG,GAAGwC,eAAe,GAAG,CAAC,CAAC,CAAC;YACvC;;YAEA;YACA,IAAI/C,MAAM,GAAG5E,IAAI,CAAC6H,KAAK,CAAC,GAAG,GAAGF,eAAe,GAAG,EAAE,CAAC;;YAEnD;YACA,MAAMG,YAAY,GAAGnI,QAAQ,CAACuB,EAAE,KAAK0F,YAAY,CAAC,CAAC;;YAEnD;;YAEA;YACA,IAAImB,UAAU,GAAGH,KAAK;YACtB,IAAIE,YAAY,EAAE;cAChBC,UAAU,GAAGH,KAAK,GAAG,IAAI,CAAC,CAAC;YAC7B;;YAEA;YACA,IAAIvH,SAAS,EAAE2H,SAAS;YACxB,IAAIF,YAAY,EAAE;cAChB;cACA;cACAzH,SAAS,GAAG,CAACsG,cAAc,CAAC,CAAC;cAC7BqB,SAAS,GAAG,CAAC;YACf,CAAC,MAAM;cACL;cACA3H,SAAS,GAAGV,QAAQ,CAACU,SAAS;cAC9B2H,SAAS,GAAG,CAAC;YACf;YAEA,oBACEpK,OAAA;cAEEkG,SAAS,EAAC,UAAU;cACpBY,KAAK,EAAE;gBACL+B,SAAS,EAAE;AAC3B,gCAAgCpI,CAAC,OAAOC,CAAC,OAAO6B,CAAC;AACjD,4BAA4BE,SAAS;AACrC,4BAA4B2H,SAAS;AACrC,iBAAiB;gBACD7C,OAAO,EAAEhG,kBAAkB,GAAGgG,OAAO,GAAG,GAAG,GAAGA,OAAO;gBAAE;gBACvDP,MAAM;gBACNqD,eAAe,EAAE,eAAe;gBAChCvB,cAAc,EAAE;gBAChB;cACF,CAAE;cACFnB,OAAO,EAAG9D,CAAC,IAAKc,eAAe,CAAC5C,QAAQ,EAAE8B,CAAC,CAAE;cAAAsC,QAAA,eAG7CnG,OAAA;gBACEkG,SAAS,EAAE,8GACTgE,YAAY,GACR,+DAA+D,CAAC;gBAAA,EAChEX,aAAa,GACX,qDAAqD,CAAC;gBAAA,EACtD,kDAAkD,CAAK;gBAAA,EAC5D;gBACHzC,KAAK,EAAE;kBACL+B,SAAS,EAAE,SAASsB,UAAU,GAAG;kBACjCE,eAAe,EAAE,eAAe;kBAChCvB,cAAc,EAAE,aAAa;kBAC7BwB,UAAU,EAAE;kBACZ;gBACF,CAAE;gBAAAnE,QAAA,gBAGFnG,OAAA;kBAAKkG,SAAS,EAAC,kBAAkB;kBAAAC,QAAA,gBAC/BnG,OAAA;oBACEiH,GAAG,EAAElF,QAAQ,CAACwI,GAAI;oBAClBC,GAAG,EAAEzI,QAAQ,CAAC0I,KAAM;oBACpBvE,SAAS,EAAC,wCAAwC;oBAClDwE,SAAS,EAAE,KAAM;oBACjB5D,KAAK,EAAE;sBAAEwD,UAAU,EAAE;oBAAO;kBAAE;oBAAAnD,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC/B,CAAC,eACFtH,OAAA;oBAAKkG,SAAS,EAAC;kBAA6E;oBAAAiB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC5F,CAAC,eAGNtH,OAAA;kBAAKkG,SAAS,EAAC,gDAAgD;kBAAAC,QAAA,eAC7DnG,OAAA;oBAAKkG,SAAS,EAAC,aAAa;oBAAAC,QAAA,gBAC1BnG,OAAA;sBAAIkG,SAAS,EAAE,yDACbqD,aAAa,GAAG,wBAAwB,GAAG,WAAW,EACrD;sBAAApD,QAAA,EACApE,QAAQ,CAAC0I;oBAAK;sBAAAtD,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACb,CAAC,eACLtH,OAAA;sBAAGkG,SAAS,EAAE,6CACZqD,aAAa,GAAG,wBAAwB,GAAG,SAAS,EACnD;sBAAApD,QAAA,EACApE,QAAQ,CAAC4I;oBAAQ;sBAAAxD,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACjB,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACD;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACH,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAGH;YAAC,GA9DDvF,QAAQ,CAACuB,EAAE;cAAA6D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OA+Db,CAAC;UAER,CAAC,CAAC;QACJ,CAAC,EAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGD,CAAC,eAGNtH,OAAA;QAAKkG,SAAS,EAAC,oHAAoH;QAAAC,QAAA,eACjInG,OAAA;UAAGkG,SAAS,EAAC,yBAAyB;UAAAC,QAAA,GACnC9F,YAAY,CAAC6B,MAAM,EAAC,iBACvB;QAAA;UAAAiF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,EAGL/F,kBAAkB,iBACjBvB,OAAA;QACEkG,SAAS,EAAC,uDAAuD;QACjEyB,OAAO,EAAEnD,mBAAoB;QAC7BsC,KAAK,EAAE;UACLgB,WAAW,EAAE;QACf,CAAE;QAAA3B,QAAA,eAKDnG,OAAA;UACEkG,SAAS,EAAC,8FAA8F;UACxGY,KAAK,EAAE;YACL+B,SAAS,EAAE,iBAAiB;YAAE;YAC9BC,cAAc,EAAE;UAClB,CAAE;UACFnB,OAAO,EAAElD,wBAAyB;UAAA0B,QAAA,eAGlCnG,OAAA;YACEkG,SAAS,EAAC,6BAA6B;YACvCY,KAAK,EAAE;cACL+B,SAAS,EAAE,iBAAiB;cAAE;cAC9BC,cAAc,EAAE;YAClB,CAAE;YAAA3C,QAAA,gBAGFnG,OAAA;cAAKkG,SAAS,EAAC,kBAAkB;cAAAC,QAAA,gBAC/BnG,OAAA;gBACEiH,GAAG,EAAE1F,kBAAkB,CAACgJ,GAAI;gBAC5BC,GAAG,EAAEjJ,kBAAkB,CAACkJ,KAAM;gBAC9BvE,SAAS,EAAC,4BAA4B;gBACtCwE,SAAS,EAAE;cAAM;gBAAAvD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAClB,CAAC,eACFtH,OAAA;gBAAKkG,SAAS,EAAC;cAA0E;gBAAAiB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzF,CAAC,eAEPtH,OAAA;cAAKkG,SAAS,EAAC,6BAA6B;cAAAC,QAAA,eAC1CnG,OAAA;gBAAKkG,SAAS,EAAC;cAA+B;gBAAAiB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClD,CAAC,eAGNtH,OAAA;cAAKkG,SAAS,EAAC,wCAAwC;cAAAC,QAAA,gBAErDnG,OAAA;gBAAKkG,SAAS,EAAC,kBAAkB;gBAAAC,QAAA,gBAC/BnG,OAAA;kBAAIkG,SAAS,EAAC,mDAAmD;kBAAAC,QAAA,EAC9D5E,kBAAkB,CAACkJ;gBAAK;kBAAAtD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACvB,CAAC,eACLtH,OAAA;kBAAGkG,SAAS,EAAC,kCAAkC;kBAAAC,QAAA,EAC5C5E,kBAAkB,CAACoJ;gBAAQ;kBAAAxD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC3B,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACD,CAAC,eAGNtH,OAAA;gBAAKkG,SAAS,EAAC,yCAAyC;gBAAAC,QAAA,eACtDnG,OAAA;kBAAKkG,SAAS,EAAC,+BAA+B;kBAAAC,QAAA,gBAE5CnG,OAAA;oBAAAmG,QAAA,gBACEnG,OAAA;sBAAIkG,SAAS,EAAC,0CAA0C;sBAAAC,QAAA,EAAC;oBAAU;sBAAAgB,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAI,CAAC,eACxEtH,OAAA;sBAAIkG,SAAS,EAAC,yBAAyB;sBAAAC,QAAA,gBACrCnG,OAAA;wBAAAmG,QAAA,EAAI;sBAA8B;wBAAAgB,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAI,CAAC,eACvCtH,OAAA;wBAAAmG,QAAA,EAAI;sBAAqB;wBAAAgB,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAI,CAAC,eAC9BtH,OAAA;wBAAAmG,QAAA,EAAI;sBAAwB;wBAAAgB,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAI,CAAC,eACjCtH,OAAA;wBAAAmG,QAAA,EAAI;sBAAoB;wBAAAgB,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAI,CAAC,eAC7BtH,OAAA;wBAAAmG,QAAA,EAAI;sBAAqB;wBAAAgB,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAI,CAAC;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAC5B,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACF,CAAC,eAGNtH,OAAA;oBAAAmG,QAAA,gBACEnG,OAAA;sBAAIkG,SAAS,EAAC,2CAA2C;sBAAAC,QAAA,EAAC;oBAAa;sBAAAgB,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAI,CAAC,eAC5EtH,OAAA;sBAAKkG,SAAS,EAAC,yBAAyB;sBAAAC,QAAA,gBACtCnG,OAAA;wBAAKkG,SAAS,EAAC,mBAAmB;wBAAAC,QAAA,gBAChCnG,OAAA;0BAAKkG,SAAS,EAAC;wBAAwC;0BAAAiB,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAM,CAAC,eAC9DtH,OAAA;0BAAAmG,QAAA,EAAM;wBAAc;0BAAAgB,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAM,CAAC;sBAAA;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACxB,CAAC,eACNtH,OAAA;wBAAKkG,SAAS,EAAC,mBAAmB;wBAAAC,QAAA,gBAChCnG,OAAA;0BAAKkG,SAAS,EAAC;wBAAyC;0BAAAiB,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAM,CAAC,eAC/DtH,OAAA;0BAAAmG,QAAA,EAAM;wBAAkB;0BAAAgB,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAM,CAAC;sBAAA;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAC5B,CAAC,eACNtH,OAAA;wBAAKkG,SAAS,EAAC,mBAAmB;wBAAAC,QAAA,gBAChCnG,OAAA;0BAAKkG,SAAS,EAAC;wBAAsC;0BAAAiB,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAM,CAAC,eAC5DtH,OAAA;0BAAAmG,QAAA,EAAM;wBAAc;0BAAAgB,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAM,CAAC;sBAAA;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACxB,CAAC,eACNtH,OAAA;wBAAKkG,SAAS,EAAC,mBAAmB;wBAAAC,QAAA,gBAChCnG,OAAA;0BAAKkG,SAAS,EAAC;wBAAyC;0BAAAiB,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAM,CAAC,eAC/DtH,OAAA;0BAAAmG,QAAA,EAAM;wBAAY;0BAAAgB,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAM,CAAC;sBAAA;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACtB,CAAC;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACH,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACH,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACH;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC,eAGNtH,OAAA;gBAAKkG,SAAS,EAAC,2CAA2C;gBAAAC,QAAA,eACxDnG,OAAA;kBAAGkG,SAAS,EAAC,uBAAuB;kBAAAC,QAAA,EAAC;gBAErC;kBAAAgB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAG;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACD,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAChH,EAAA,CA/oBuBL,UAAU;AAAA2K,EAAA,GAAV3K,UAAU;AAAA,IAAA2K,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}